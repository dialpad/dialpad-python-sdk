{
  "components": {
    "schemas": {
      "frontend.schemas.oauth.AuthorizationCodeGrantBodySchema": {
        "description": "Used to redeem an access token via authorization code.",
        "properties": {
          "client_id": {
            "description": "The client_id of the oauth app.\n\nNote: must either be provided in the request body, or in a basic authorization header.",
            "nullable": true,
            "type": "string"
          },
          "client_secret": {
            "description": "The client_secret of the oauth app.\n\nNote: must either be provided in the request body, or in a basic authorization header.",
            "nullable": true,
            "type": "string"
          },
          "code": {
            "description": "The authorization code that resulted from the oauth2 authorization redirect.",
            "nullable": true,
            "type": "string"
          },
          "code_verifier": {
            "description": "The PKCE code verifier corresponding to the initial PKCE code challenge, if applicable.",
            "nullable": true,
            "type": "string"
          },
          "grant_type": {
            "description": "The type of OAuth grant which is being requested.",
            "enum": [
              "authorization_code"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "code",
          "grant_type"
        ],
        "title": "Authorization Code Grant",
        "type": "object"
      },
      "frontend.schemas.oauth.AuthorizeTokenResponseBodySchema": {
        "properties": {
          "access_token": {
            "description": "A static access token.",
            "nullable": true,
            "type": "string"
          },
          "expires_in": {
            "description": "The number of seconds after which the access token will become expired.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "id_token": {
            "description": "User ID token (if using OpenID Connect)",
            "nullable": true,
            "type": "string"
          },
          "refresh_token": {
            "description": "The refresh token that can be used to obtain a new token pair when this one expires.",
            "nullable": true,
            "type": "string"
          },
          "token_type": {
            "description": "The type of the access_token being issued.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "frontend.schemas.oauth.RefreshTokenGrantBodySchema": {
        "description": "Used to exchange a refresh token for a short-lived access token and another refresh token.",
        "properties": {
          "client_id": {
            "description": "The client_id of the oauth app.\n\nNote: must either be provided in the request body, or in a basic authorization header.",
            "nullable": true,
            "type": "string"
          },
          "client_secret": {
            "description": "The client_secret of the oauth app.\n\nNote: must either be provided in the request body, or in a basic authorization header.",
            "nullable": true,
            "type": "string"
          },
          "grant_type": {
            "description": "The type of OAuth grant which is being requested.",
            "enum": [
              "refresh_token"
            ],
            "nullable": true,
            "type": "string"
          },
          "refresh_token": {
            "description": "The current refresh token which is being traded in for a new token pair.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "grant_type",
          "refresh_token"
        ],
        "title": "Refresh Token Grant",
        "type": "object"
      },
      "protos.access_control_policies.AssignmentPolicyMessage": {
        "properties": {
          "target_id": {
            "description": "Required if the policy is associated with a target (Office or Contact Center). Not required for a company level policy.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "default": "company",
            "description": "Policy permissions applied at this target level. Defaults to company target type.",
            "enum": [
              "callcenter",
              "company",
              "office"
            ],
            "nullable": true,
            "type": "string"
          },
          "user_id": {
            "description": "The user's id to be assigned to the policy.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "user_id"
        ],
        "title": "Policy assignment message.",
        "type": "object"
      },
      "protos.access_control_policies.CreatePolicyMessage": {
        "properties": {
          "description": {
            "description": "[single-line only]\n\nOptional description for the policy. Max 200 characters.",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "[single-line only]\n\nA human-readable display name for the policy. Max 50 characters.",
            "nullable": true,
            "type": "string"
          },
          "owner_id": {
            "description": "Owner for this policy i.e company admin.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "permission_sets": {
            "description": "List of permission associated with this policy.",
            "items": {
              "enum": [
                "agent_settings_write",
                "agents_admins_manage_agents_settings_write",
                "agents_admins_skill_level_write",
                "auto_call_recording_and_transcription_settings_write",
                "business_hours_write",
                "call_blocking_spam_prevention_settings_write",
                "call_dispositions_settings_write",
                "call_routing_hours_settings_write",
                "cc_call_settings_write",
                "chrome_extension_compliance_settings_write",
                "csat_surveys_write",
                "dashboard_and_alerts_write",
                "dialpad_ai_settings_write",
                "holiday_hours_settings_write",
                "integrations_settings_write",
                "name_language_description_settings_write",
                "number_settings_write",
                "supervisor_settings_write"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "target_type": {
            "default": "company",
            "description": "Policy permissions applied at this target level. Defaults to company target type.",
            "enum": [
              "callcenter",
              "company",
              "office"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "name",
          "owner_id",
          "permission_sets"
        ],
        "title": "Create access control policy message.",
        "type": "object"
      },
      "protos.access_control_policies.PoliciesCollection": {
        "properties": {
          "cursor": {
            "description": "A cursor string that can be used to fetch the subsequent page.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list containing the first page of results.",
            "items": {
              "$ref": "#/components/schemas/protos.access_control_policies.PolicyProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of custom policies.",
        "type": "object"
      },
      "protos.access_control_policies.PolicyAssignmentCollection": {
        "properties": {
          "cursor": {
            "description": "A cursor string that can be used to fetch the subsequent page.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list containing the first page of results.",
            "items": {
              "$ref": "#/components/schemas/protos.access_control_policies.PolicyAssignmentProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of policy assignments.",
        "type": "object"
      },
      "protos.access_control_policies.PolicyAssignmentProto": {
        "properties": {
          "policy_targets": {
            "description": "Policy targets associated with the role.",
            "items": {
              "$ref": "#/components/schemas/protos.access_control_policies.PolicyTargetProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "user": {
            "$ref": "#/components/schemas/protos.user.UserProto",
            "description": "The user associated to the role.",
            "nullable": true,
            "type": "object"
          }
        },
        "type": "object"
      },
      "protos.access_control_policies.PolicyProto": {
        "properties": {
          "company_id": {
            "description": "The company's id to which this policy belongs to.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "date_created": {
            "description": "A timestamp indicating when this custom policy was created.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_updated": {
            "description": "A timestamp indicating when this custom policy was last modified.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "[single-line only]\n\nDescription for the custom policy.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The API custom policy ID.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "[single-line only]\n\nA human-readable display name for the custom policy name.",
            "nullable": true,
            "type": "string"
          },
          "owner_id": {
            "description": "Target that created this policy i.e company admin.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "permission_sets": {
            "description": "List of permission associated with this custom policy.",
            "items": {
              "enum": [
                "agent_settings_read",
                "agent_settings_write",
                "agents_admins_manage_agents_settings_read",
                "agents_admins_manage_agents_settings_write",
                "agents_admins_skill_level_read",
                "agents_admins_skill_level_write",
                "auto_call_recording_and_transcription_settings_read",
                "auto_call_recording_and_transcription_settings_write",
                "business_hours_read",
                "business_hours_write",
                "call_blocking_spam_prevention_settings_read",
                "call_blocking_spam_prevention_settings_write",
                "call_dispositions_settings_read",
                "call_dispositions_settings_write",
                "call_routing_hours_settings_read",
                "call_routing_hours_settings_write",
                "cc_call_settings_read",
                "cc_call_settings_write",
                "chrome_extension_compliance_settings_read",
                "chrome_extension_compliance_settings_write",
                "csat_surveys_read",
                "csat_surveys_write",
                "dashboard_and_alerts_read",
                "dashboard_and_alerts_write",
                "dialpad_ai_settings_read",
                "dialpad_ai_settings_write",
                "holiday_hours_settings_read",
                "holiday_hours_settings_write",
                "integrations_settings_read",
                "integrations_settings_write",
                "name_language_description_settings_read",
                "name_language_description_settings_write",
                "number_settings_read",
                "number_settings_write",
                "supervisor_settings_read",
                "supervisor_settings_write"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "state": {
            "description": "Policy state. ex. active or deleted.",
            "enum": [
              "active",
              "deleted"
            ],
            "nullable": true,
            "type": "string"
          },
          "target_type": {
            "description": "Target level at which the policy permissions are applied. Defaults to company",
            "enum": [
              "callcenter",
              "company",
              "office"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "company_id",
          "id",
          "name",
          "owner_id",
          "permission_sets",
          "state"
        ],
        "title": "API custom access control policy proto definition.",
        "type": "object"
      },
      "protos.access_control_policies.PolicyTargetProto": {
        "properties": {
          "target_id": {
            "description": "All targets associated with the policy.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "default": "company",
            "description": "Policy permissions applied at this target level. Defaults to company target type.",
            "enum": [
              "callcenter",
              "company",
              "office"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "target_id"
        ],
        "type": "object"
      },
      "protos.access_control_policies.UnassignmentPolicyMessage": {
        "properties": {
          "target_id": {
            "description": "Required if the policy is associated with a target (Office or Contact Center). Not required for a company level policy or if unassign_all is True.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "default": "company",
            "description": "Policy permissions applied at this target level. Defaults to company target type.",
            "enum": [
              "callcenter",
              "company",
              "office"
            ],
            "nullable": true,
            "type": "string"
          },
          "unassign_all": {
            "default": false,
            "description": "Unassign all associated target groups from the user for a policy.",
            "nullable": true,
            "type": "boolean"
          },
          "user_id": {
            "description": "The user's id to be assigned to the policy.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "user_id"
        ],
        "title": "Policy unassignment message.",
        "type": "object"
      },
      "protos.access_control_policies.UpdatePolicyMessage": {
        "properties": {
          "description": {
            "description": "[single-line only]\n\nOptional description for the policy.",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "[single-line only]\n\nA human-readable display name for the policy.",
            "nullable": true,
            "type": "string"
          },
          "permission_sets": {
            "description": "List of permission associated with this policy.",
            "items": {
              "enum": [
                "agent_settings_write",
                "agents_admins_manage_agents_settings_write",
                "agents_admins_skill_level_write",
                "auto_call_recording_and_transcription_settings_write",
                "business_hours_write",
                "call_blocking_spam_prevention_settings_write",
                "call_dispositions_settings_write",
                "call_routing_hours_settings_write",
                "cc_call_settings_write",
                "chrome_extension_compliance_settings_write",
                "csat_surveys_write",
                "dashboard_and_alerts_write",
                "dialpad_ai_settings_write",
                "holiday_hours_settings_write",
                "integrations_settings_write",
                "name_language_description_settings_write",
                "number_settings_write",
                "supervisor_settings_write"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "state": {
            "description": "Restore a deleted policy.",
            "enum": [
              "active"
            ],
            "nullable": true,
            "type": "string"
          },
          "user_id": {
            "description": "user id updating this policy. Must be a company admin",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "Update policy message.",
        "type": "object"
      },
      "protos.agent_status_event_subscription.AgentStatusEventSubscriptionCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of SMS event subscriptions.",
            "items": {
              "$ref": "#/components/schemas/protos.agent_status_event_subscription.AgentStatusEventSubscriptionProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of agent status event subscriptions.",
        "type": "object"
      },
      "protos.agent_status_event_subscription.AgentStatusEventSubscriptionProto": {
        "properties": {
          "agent_type": {
            "description": "The agent type this event subscription subscribes to.",
            "enum": [
              "callcenter"
            ],
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "default": true,
            "description": "Whether or not the this agent status event subscription is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "id": {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "webhook": {
            "$ref": "#/components/schemas/protos.webhook.WebhookProto",
            "description": "The webhook's ID, which is generated after creating a webhook successfully.",
            "nullable": true,
            "type": "object"
          },
          "websocket": {
            "$ref": "#/components/schemas/protos.websocket.WebsocketProto",
            "description": "The websocket's ID, which is generated after creating a webhook successfully.",
            "nullable": true,
            "type": "object"
          }
        },
        "required": [
          "agent_type"
        ],
        "title": "Agent-status event subscription.",
        "type": "object"
      },
      "protos.agent_status_event_subscription.CreateAgentStatusEventSubscription": {
        "properties": {
          "agent_type": {
            "description": "The agent type this event subscription subscribes to.",
            "enum": [
              "callcenter"
            ],
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "default": true,
            "description": "Whether or not the this agent status event subscription is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "endpoint_id": {
            "description": "The logging endpoint's ID, which is generated after creating a webhook or websocket successfully.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "agent_type"
        ],
        "type": "object"
      },
      "protos.agent_status_event_subscription.UpdateAgentStatusEventSubscription": {
        "properties": {
          "agent_type": {
            "default": "callcenter",
            "description": "The agent type this event subscription subscribes to.",
            "enum": [
              "callcenter"
            ],
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "default": true,
            "description": "Whether or not the this agent status event subscription is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "endpoint_id": {
            "description": "The logging endpoint's ID, which is generated after creating a webhook or websocket successfully. If you plan to pair this event subscription with another logging endpoint,\nplease provide a valid webhook ID here.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "protos.app.setting.AppSettingProto": {
        "properties": {
          "enabled": {
            "default": false,
            "description": "Whether or not the OAuth app is enabled for the target.",
            "nullable": true,
            "type": "boolean"
          },
          "is_preferred_service": {
            "default": false,
            "description": "Whether or not Oauth app is preferred service for screen pop.",
            "nullable": true,
            "type": "boolean"
          },
          "settings": {
            "description": "A dynamic object that maps settings to their values.\n\nIt includes all standard settings, i.e. call_logging_enabled, call_recording_logging_enabled,\nvoicemail_logging_enabled and sms_logging_enabled, and any custom settings this OAuth app supports.",
            "nullable": true,
            "type": "object"
          }
        },
        "title": "App settings object.",
        "type": "object"
      },
      "protos.blocked_number.AddBlockedNumbersProto": {
        "properties": {
          "numbers": {
            "description": "A list of E164 formatted numbers.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "protos.blocked_number.BlockedNumber": {
        "properties": {
          "number": {
            "description": "A phone number (e164 format).",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Blocked number.",
        "type": "object"
      },
      "protos.blocked_number.BlockedNumberCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of blocked numbers.",
            "items": {
              "$ref": "#/components/schemas/protos.blocked_number.BlockedNumber",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of blocked numbers.",
        "type": "object"
      },
      "protos.blocked_number.RemoveBlockedNumbersProto": {
        "properties": {
          "numbers": {
            "description": "A list of E164 formatted numbers.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "protos.breadcrumbs.ApiCallRouterBreadcrumb": {
        "properties": {
          "breadcrumb_type": {
            "description": "Breadcrumb type",
            "enum": [
              "callrouter",
              "external_api"
            ],
            "nullable": true,
            "type": "string"
          },
          "date": {
            "description": "Date when this breadcrumb was added",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "request": {
            "description": "The HTTP request payload associated with this breadcrumb",
            "nullable": true,
            "type": "object"
          },
          "response": {
            "description": "The HTTP response associated with this breadcrumb",
            "nullable": true,
            "type": "object"
          },
          "target_id": {
            "description": "The target id",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "The target type from call",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The URL that should be used to drive call routing decisions.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Call routing breadcrumb.",
        "type": "object"
      },
      "protos.call.ActiveCallProto": {
        "properties": {
          "call_state": {
            "description": "The current state of the call.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "A unique number ID automatically assigned to each call.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "is_recording": {
            "description": "A boolean indicating whether the call is currently being recorded.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "title": "Active call.",
        "type": "object"
      },
      "protos.call.AddCallLabelsMessage": {
        "properties": {
          "labels": {
            "description": "The list of labels to attach to the call",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Create labels for a call",
        "type": "object"
      },
      "protos.call.AddParticipantMessage": {
        "properties": {
          "participant": {
            "description": "New member of the call to add. Can be a number or a Target. In case of a target, it must have a primary number assigned.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/protos.call.NumberTransferDestination"
              },
              {
                "$ref": "#/components/schemas/protos.call.TargetTransferDestination"
              }
            ]
          }
        },
        "required": [
          "participant"
        ],
        "title": "Add participant into a Call.",
        "type": "object"
      },
      "protos.call.CallCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of calls.",
            "items": {
              "$ref": "#/components/schemas/protos.call.CallProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of calls.",
        "type": "object"
      },
      "protos.call.CallContactProto": {
        "properties": {
          "email": {
            "description": "The primary email address of the contact.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "A unique number ID for the contact.",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "[single-line only]\n\nName of contact.",
            "nullable": true,
            "type": "string"
          },
          "phone": {
            "description": "The primary phone number of the contact.",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Type of the contact.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Call contact.",
        "type": "object"
      },
      "protos.call.CallProto": {
        "properties": {
          "admin_call_recording_share_links": {
            "description": "A list of admin call recording share links.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "call_id": {
            "description": "A unique number ID automatically assigned to each call.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "call_recording_share_links": {
            "description": "A list of call recording share links.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "contact": {
            "$ref": "#/components/schemas/protos.call.CallContactProto",
            "description": "This is the contact involved in the call.",
            "nullable": true,
            "type": "object"
          },
          "csat_recording_urls": {
            "description": "A list of CSAT urls related to the call.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "csat_score": {
            "description": "CSAT score related to the call.",
            "nullable": true,
            "type": "string"
          },
          "csat_transcriptions": {
            "description": "A list of CSAT texts related to the call.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "custom_data": {
            "description": "Any custom data.",
            "nullable": true,
            "type": "string"
          },
          "date_connected": {
            "description": "Timestamp when Dialpad connected the call.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "date_ended": {
            "description": "Timestamp when the call was hung up.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "date_rang": {
            "description": "Timestamp when Dialpad first detects an inbound call toa mainline, department, or person.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "date_started": {
            "description": "Timestamp when the call began in the Dialpad system before being connected.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "direction": {
            "description": "Call direction. Indicates whether a call was outbound or inbound.",
            "nullable": true,
            "type": "string"
          },
          "duration": {
            "description": "Duration of the call in milliseconds.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "entry_point_call_id": {
            "description": "Call ID of the associated entry point call.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "entry_point_target": {
            "$ref": "#/components/schemas/protos.call.CallContactProto",
            "description": "Where a call initially dialed for inbound calls to Dialpad.",
            "nullable": true,
            "type": "object"
          },
          "event_timestamp": {
            "description": "Timestamp of when this call event happened.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "external_number": {
            "description": "The phone number external to your organization.",
            "nullable": true,
            "type": "string"
          },
          "group_id": {
            "description": "Unique ID of the department, mainline, or call queue associated with the call.",
            "nullable": true,
            "type": "string"
          },
          "internal_number": {
            "description": "The phone number internal to your organization.",
            "nullable": true,
            "type": "string"
          },
          "is_transferred": {
            "description": "Boolean indicating whether or not the call was transferred.",
            "nullable": true,
            "type": "boolean"
          },
          "labels": {
            "description": "The label's associated to this call.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "master_call_id": {
            "description": "The master id of the specified call.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "mos_score": {
            "description": "Mean Opinion Score",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "operator_call_id": {
            "description": "The id of operator.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "proxy_target": {
            "$ref": "#/components/schemas/protos.call.CallContactProto",
            "description": "Caller ID used by the Dialpad user for outbound calls.",
            "nullable": true,
            "type": "object"
          },
          "recording_details": {
            "description": "List of associated recording details.",
            "items": {
              "$ref": "#/components/schemas/protos.call.CallRecordingDetailsProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "routing_breadcrumbs": {
            "description": "The routing breadcrumbs",
            "items": {
              "$ref": "#/components/schemas/protos.breadcrumbs.ApiCallRouterBreadcrumb",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "screen_recording_urls": {
            "description": "A list of screen recording urls.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "state": {
            "description": "Current call state.",
            "nullable": true,
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/protos.call.CallContactProto",
            "description": "This is the target that the Dialpad user dials or receives a call from.",
            "nullable": true,
            "type": "object"
          },
          "total_duration": {
            "description": "Duration of the call in milliseconds, including ring time.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "transcription_text": {
            "description": "Text of call transcription.",
            "nullable": true,
            "type": "string"
          },
          "voicemail_share_link": {
            "description": "Share link to the voicemail recording.",
            "nullable": true,
            "type": "string"
          },
          "was_recorded": {
            "description": "Boolean indicating whether or not the call was recorded.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "title": "Call.",
        "type": "object"
      },
      "protos.call.CallRecordingDetailsProto": {
        "properties": {
          "duration": {
            "description": "The duration of the recording in milliseconds",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "The recording ID",
            "nullable": true,
            "type": "string"
          },
          "recording_type": {
            "description": "The recording type",
            "enum": [
              "admincallrecording",
              "callrecording",
              "voicemail"
            ],
            "nullable": true,
            "type": "string"
          },
          "start_time": {
            "description": "The recording start timestamp",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "url": {
            "description": "The access URL of the recording",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Call recording details.",
        "type": "object"
      },
      "protos.call.CallTransferDestination": {
        "properties": {
          "call_id": {
            "description": "The id of the ongoing call which the call should be transferred to.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "call_id"
        ],
        "type": "object"
      },
      "protos.call.CallbackMessage": {
        "properties": {
          "call_center_id": {
            "description": "The ID of a call center that will be used to fulfill the callback.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "phone_number": {
            "description": "The e164-formatted number to call back",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.call.CallbackProto": {
        "description": "Note: Position indicates the new callback request's position in the queue, with 1 being at the front.",
        "properties": {
          "position": {
            "description": "Indicates the new callback request's position in the queue, with 1 being at the front.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "Callback.",
        "type": "object"
      },
      "protos.call.InitiateCallMessage": {
        "properties": {
          "custom_data": {
            "description": "Extra data to associate with the call. This will be passed through to any subscribed call events.",
            "nullable": true,
            "type": "string"
          },
          "group_id": {
            "description": "The ID of a group that will be used to initiate the call.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "group_type": {
            "description": "The type of a group that will be used to initiate the call.",
            "enum": [
              "callcenter",
              "department",
              "office"
            ],
            "nullable": true,
            "type": "string"
          },
          "outbound_caller_id": {
            "description": "The e164-formatted number shown to the call recipient (or \"blocked\").\n\nIf set to \"blocked\", the recipient will receive a call from \"unknown caller\". The number can be the caller's number, or the caller's group number if the group is provided,\nor the caller's company reserved number.",
            "nullable": true,
            "type": "string"
          },
          "phone_number": {
            "description": "The e164-formatted number to call.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.call.InitiatedCallProto": {
        "properties": {
          "device": {
            "$ref": "#/components/schemas/protos.userdevice.UserDeviceProto",
            "description": "The device used to initiate the call.",
            "nullable": true,
            "type": "object"
          }
        },
        "title": "Initiated call.",
        "type": "object"
      },
      "protos.call.InitiatedIVRCallProto": {
        "properties": {
          "call_id": {
            "description": "The ID of the initiated call.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "call_id"
        ],
        "title": "Initiated IVR call.",
        "type": "object"
      },
      "protos.call.NumberTransferDestination": {
        "properties": {
          "number": {
            "description": "The phone number which the call should be transferred to.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "number"
        ],
        "type": "object"
      },
      "protos.call.OutboundIVRMessage": {
        "properties": {
          "custom_data": {
            "description": "Extra data to associate with the call. This will be passed through to any subscribed call events.",
            "nullable": true,
            "type": "string"
          },
          "outbound_caller_id": {
            "description": "The e164-formatted number shown to the call recipient (or \"blocked\").",
            "nullable": true,
            "type": "string"
          },
          "phone_number": {
            "description": "The e164-formatted number to call.",
            "nullable": true,
            "type": "string"
          },
          "target_id": {
            "description": "The ID of a group that will be used to initiate the call.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "The type of a group that will be used to initiate the call.",
            "enum": [
              "callcenter",
              "department",
              "office"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "phone_number",
          "target_id",
          "target_type"
        ],
        "type": "object"
      },
      "protos.call.RingCallMessage": {
        "properties": {
          "custom_data": {
            "description": "Extra data to associate with the call. This will be passed through to any subscribed call events.",
            "nullable": true,
            "type": "string"
          },
          "device_id": {
            "description": "The device's id.",
            "nullable": true,
            "type": "string"
          },
          "group_id": {
            "description": "The ID of a group that will be used to initiate the call.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "group_type": {
            "description": "The type of a group that will be used to initiate the call.",
            "enum": [
              "callcenter",
              "department",
              "office"
            ],
            "nullable": true,
            "type": "string"
          },
          "is_consult": {
            "default": false,
            "description": "Enables the creation of a second call. If there is an ongoing call, it puts it on hold.",
            "nullable": true,
            "type": "boolean"
          },
          "outbound_caller_id": {
            "description": "The e164-formatted number shown to the call recipient (or \"blocked\").\n\nIf set to \"blocked\", the recipient will receive a call from \"unknown caller\". The number can be the caller's number, or the caller's group number if the group is provided, or the caller's company reserved number.",
            "nullable": true,
            "type": "string"
          },
          "phone_number": {
            "description": "The e164-formatted number to call.",
            "nullable": true,
            "type": "string"
          },
          "user_id": {
            "description": "The id of the user who should make the outbound call.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "phone_number",
          "user_id"
        ],
        "type": "object"
      },
      "protos.call.RingCallProto": {
        "properties": {
          "call_id": {
            "description": "The ID of the created call.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "Ringing call.",
        "type": "object"
      },
      "protos.call.TargetTransferDestination": {
        "properties": {
          "target_id": {
            "description": "The ID of the target that will be used to transfer the call.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "Type of target that will be used to transfer the call.",
            "enum": [
              "callcenter",
              "department",
              "office",
              "user"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "target_id",
          "target_type"
        ],
        "type": "object"
      },
      "protos.call.ToggleViMessage": {
        "properties": {
          "enable_vi": {
            "description": "Whether or not call vi should be enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "vi_locale": {
            "description": "The locale to use for vi.",
            "enum": [
              "en-au",
              "en-ca",
              "en-de",
              "en-fr",
              "en-gb",
              "en-it",
              "en-jp",
              "en-mx",
              "en-nl",
              "en-nz",
              "en-pt",
              "en-us",
              "es-au",
              "es-ca",
              "es-de",
              "es-es",
              "es-fr",
              "es-gb",
              "es-it",
              "es-jp",
              "es-mx",
              "es-nl",
              "es-nz",
              "es-pt",
              "es-us",
              "fr-au",
              "fr-ca",
              "fr-de",
              "fr-es",
              "fr-fr",
              "fr-gb",
              "fr-it",
              "fr-jp",
              "fr-mx",
              "fr-nl",
              "fr-nz",
              "fr-pt",
              "fr-us"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.call.ToggleViProto": {
        "properties": {
          "call_state": {
            "description": "Current call state.",
            "nullable": true,
            "type": "string"
          },
          "enable_vi": {
            "description": "Whether vi is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "id": {
            "description": "The id of the toggled call.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "vi_locale": {
            "description": "The locale used for vi.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "VI state.",
        "type": "object"
      },
      "protos.call.TransferCallMessage": {
        "properties": {
          "custom_data": {
            "description": "Extra data to associate with the call. This will be passed through to any subscribed call events.",
            "nullable": true,
            "type": "string"
          },
          "to": {
            "description": "Destination of the call that will be transfer. It can be a single option between a number, \nan existing call or a target",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/protos.call.CallTransferDestination"
              },
              {
                "$ref": "#/components/schemas/protos.call.NumberTransferDestination"
              },
              {
                "$ref": "#/components/schemas/protos.call.TargetTransferDestination"
              }
            ]
          },
          "transfer_state": {
            "description": "The state which the call should take when it's transferred to.",
            "enum": [
              "hold",
              "parked",
              "preanswer",
              "voicemail"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.call.TransferredCallProto": {
        "properties": {
          "call_id": {
            "description": "The call's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "transferred_to_number": {
            "description": "The phone number which the call has been transferred to.",
            "nullable": true,
            "type": "string"
          },
          "transferred_to_state": {
            "description": "The state which the call has been transferred to.",
            "enum": [
              "hold",
              "parked",
              "preanswer",
              "voicemail"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Transferred call.",
        "type": "object"
      },
      "protos.call.UnparkCallMessage": {
        "properties": {
          "user_id": {
            "description": "The id of the user who should unpark the call.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "user_id"
        ],
        "type": "object"
      },
      "protos.call.UpdateActiveCallMessage": {
        "properties": {
          "is_recording": {
            "description": "Whether or not recording should be enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "play_message": {
            "default": true,
            "description": "Whether or not to play a message to indicate the call is being recorded (or recording has stopped).",
            "nullable": true,
            "type": "boolean"
          },
          "recording_type": {
            "default": "user",
            "description": "Whether or not to toggle recording for the operator call (personal recording),\nthe group call (department recording), or both.\n\nOnly applicable for group calls (call centers, departments, etc.)",
            "enum": [
              "all",
              "group",
              "user"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.call.ValidateCallbackProto": {
        "properties": {
          "success": {
            "description": "Whether the callback request would have been queued successfully.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "title": "Callback (validation).",
        "type": "object"
      },
      "protos.call_event_subscription.CallEventSubscriptionCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of call event subscriptions.",
            "items": {
              "$ref": "#/components/schemas/protos.call_event_subscription.CallEventSubscriptionProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of call event subscriptions.",
        "type": "object"
      },
      "protos.call_event_subscription.CallEventSubscriptionProto": {
        "properties": {
          "call_states": {
            "description": "The call event subscription's list of call states.",
            "items": {
              "enum": [
                "admin",
                "admin_recording",
                "ai_playbook",
                "all",
                "barge",
                "blocked",
                "call_transcription",
                "calling",
                "connected",
                "csat",
                "dispositions",
                "eavesdrop",
                "hangup",
                "hold",
                "merged",
                "missed",
                "monitor",
                "parked",
                "pcsat",
                "postcall",
                "preanswer",
                "queued",
                "recap_action_items",
                "recap_outcome",
                "recap_purposes",
                "recap_summary",
                "recording",
                "ringing",
                "takeover",
                "transcription",
                "voicemail",
                "voicemail_uploaded"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "enabled": {
            "default": true,
            "description": "Whether or not the call event subscription is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "group_calls_only": {
            "description": "Call event subscription for group calls only.",
            "nullable": true,
            "type": "boolean"
          },
          "id": {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_id": {
            "description": "The ID of the specific target for which events should be sent.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "The target type.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          },
          "webhook": {
            "$ref": "#/components/schemas/protos.webhook.WebhookProto",
            "description": "The webhook that's associated with this event subscription.",
            "nullable": true,
            "type": "object"
          },
          "websocket": {
            "$ref": "#/components/schemas/protos.websocket.WebsocketProto",
            "description": "The websocket's ID, which is generated after creating a webhook successfully.",
            "nullable": true,
            "type": "object"
          }
        },
        "title": "Call event subscription.",
        "type": "object"
      },
      "protos.call_event_subscription.CreateCallEventSubscription": {
        "properties": {
          "call_states": {
            "description": "The call event subscription's list of call states.",
            "items": {
              "enum": [
                "admin",
                "admin_recording",
                "ai_playbook",
                "all",
                "barge",
                "blocked",
                "call_transcription",
                "calling",
                "connected",
                "csat",
                "dispositions",
                "eavesdrop",
                "hangup",
                "hold",
                "merged",
                "missed",
                "monitor",
                "parked",
                "pcsat",
                "postcall",
                "preanswer",
                "queued",
                "recap_action_items",
                "recap_outcome",
                "recap_purposes",
                "recap_summary",
                "recording",
                "ringing",
                "takeover",
                "transcription",
                "voicemail",
                "voicemail_uploaded"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "enabled": {
            "default": true,
            "description": "Whether or not the call event subscription is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "endpoint_id": {
            "description": "The logging endpoint's ID, which is generated after creating a webhook or websocket successfully.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "group_calls_only": {
            "description": "Call event subscription for group calls only.",
            "nullable": true,
            "type": "boolean"
          },
          "target_id": {
            "description": "The ID of the specific target for which events should be sent.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "The target type.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.call_event_subscription.UpdateCallEventSubscription": {
        "properties": {
          "call_states": {
            "description": "The call event subscription's list of call states.",
            "items": {
              "enum": [
                "admin",
                "admin_recording",
                "ai_playbook",
                "all",
                "barge",
                "blocked",
                "call_transcription",
                "calling",
                "connected",
                "csat",
                "dispositions",
                "eavesdrop",
                "hangup",
                "hold",
                "merged",
                "missed",
                "monitor",
                "parked",
                "pcsat",
                "postcall",
                "preanswer",
                "queued",
                "recap_action_items",
                "recap_outcome",
                "recap_purposes",
                "recap_summary",
                "recording",
                "ringing",
                "takeover",
                "transcription",
                "voicemail",
                "voicemail_uploaded"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "enabled": {
            "default": true,
            "description": "Whether or not the call event subscription is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "endpoint_id": {
            "description": "The logging endpoint's ID, which is generated after creating a webhook or websocket successfully. If you plan to pair this event subscription with another logging endpoint,\nplease provide a valid webhook ID here.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "group_calls_only": {
            "description": "Call event subscription for group calls only.",
            "nullable": true,
            "type": "boolean"
          },
          "target_id": {
            "description": "The ID of the specific target for which events should be sent.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "The target type.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.call_label.CompanyCallLabels": {
        "properties": {
          "labels": {
            "description": "The labels associated to this company.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Company Labels.",
        "type": "object"
      },
      "protos.call_review_share_link.CallReviewShareLink": {
        "properties": {
          "access_link": {
            "description": "The access link where the call review can be listened or downloaded.",
            "nullable": true,
            "type": "string"
          },
          "call_id": {
            "description": "The call's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "The call review share link's ID.",
            "nullable": true,
            "type": "string"
          },
          "privacy": {
            "description": "The privacy state of the call review sharel link.",
            "enum": [
              "company",
              "public"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Reponse for the call review share link.",
        "type": "object"
      },
      "protos.call_review_share_link.CreateCallReviewShareLink": {
        "properties": {
          "call_id": {
            "description": "The call's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "privacy": {
            "default": "company",
            "description": "The privacy state of the recording share link, 'company' will be set as default.",
            "enum": [
              "company",
              "public"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Input for POST request to create a call review share link.",
        "type": "object"
      },
      "protos.call_review_share_link.UpdateCallReviewShareLink": {
        "properties": {
          "privacy": {
            "description": "The privacy state of the recording share link",
            "enum": [
              "company",
              "public"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "privacy"
        ],
        "title": "Input for PUT request to update a call review share link.",
        "type": "object"
      },
      "protos.call_router.ApiCallRouterCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of call routers.",
            "items": {
              "$ref": "#/components/schemas/protos.call_router.ApiCallRouterProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of API call routers.",
        "type": "object"
      },
      "protos.call_router.ApiCallRouterProto": {
        "properties": {
          "default_target_id": {
            "description": "The ID of the target that should be used as a fallback destination for calls if the call router is disabled or fails.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "default_target_type": {
            "description": "The entity type of the default target.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "description": "If set to False, the call router will skip the routing url and instead forward calls straight to the default target.",
            "nullable": true,
            "type": "boolean"
          },
          "id": {
            "description": "The API call router's ID.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "[single-line only]\n\nA human-readable display name for the router.",
            "nullable": true,
            "type": "string"
          },
          "office_id": {
            "description": "The ID of the office to which this router belongs.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "phone_numbers": {
            "description": "The phone numbers that will cause inbound calls to hit this call router.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "routing_url": {
            "description": "The URL that should be used to drive call routing decisions.",
            "nullable": true,
            "type": "string"
          },
          "signature": {
            "$ref": "#/components/schemas/protos.signature.SignatureProto",
            "description": "The signature that will be used to sign JWTs for routing requests.",
            "nullable": true,
            "type": "object"
          }
        },
        "title": "API call router.",
        "type": "object"
      },
      "protos.call_router.CreateApiCallRouterMessage": {
        "properties": {
          "default_target_id": {
            "description": "The ID of the target that should be used as a fallback destination for calls if the call router is disabled or fails.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "default_target_type": {
            "description": "The entity type of the default target.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "description": "If set to False, the call router will skip the routing url and instead forward calls straight to the default target.",
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "[single-line only]\n\nA human-readable display name for the router.",
            "nullable": true,
            "type": "string"
          },
          "office_id": {
            "description": "The ID of the office to which this router belongs.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "routing_url": {
            "description": "The URL that should be used to drive call routing decisions.",
            "nullable": true,
            "type": "string"
          },
          "secret": {
            "description": "[single-line only]\n\nThe call router's signature secret. This is a plain text string that you should generate with a minimum length of 32 characters.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "default_target_id",
          "default_target_type",
          "name",
          "office_id",
          "routing_url"
        ],
        "type": "object"
      },
      "protos.call_router.UpdateApiCallRouterMessage": {
        "properties": {
          "default_target_id": {
            "description": "The ID of the target that should be used as a fallback destination for calls if the call router is disabled or fails.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "default_target_type": {
            "description": "The entity type of the default target.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "description": "If set to False, the call router will skip the routing url and instead forward calls straight to the default target.",
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "[single-line only]\n\nA human-readable display name for the router.",
            "nullable": true,
            "type": "string"
          },
          "office_id": {
            "description": "The ID of the office to which this router belongs.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "reset_error_count": {
            "description": "Sets the auto-disablement routing error count back to zero.\n\nCall routers maintain a count of the number of errors that have occured within the past hour, and automatically become disabled when that count exceeds 10.\n\nSetting enabled to true via the API will not reset that count, which means that the router will likely become disabled again after one more error. In most cases, this will be useful for testing fixes in your routing API, but in some circumstances it may be desirable to reset that counter.",
            "nullable": true,
            "type": "boolean"
          },
          "routing_url": {
            "description": "The URL that should be used to drive call routing decisions.",
            "nullable": true,
            "type": "string"
          },
          "secret": {
            "description": "[single-line only]\n\nThe call router's signature secret. This is a plain text string that you should generate with a minimum length of 32 characters.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.caller_id.CallerIdProto": {
        "properties": {
          "caller_id": {
            "description": "The caller id number for the user",
            "nullable": true,
            "type": "string"
          },
          "forwarding_numbers": {
            "description": "A list of phone numbers that should be dialed in addition to the user's Dialpad number(s)\nupon receiving a call.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "groups": {
            "description": "The groups from the user",
            "items": {
              "$ref": "#/components/schemas/protos.caller_id.GroupProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "The ID of the user.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "office_main_line": {
            "description": "The office main line number",
            "nullable": true,
            "type": "string"
          },
          "phone_numbers": {
            "description": "A list of phone numbers belonging to this user.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "primary_phone": {
            "description": "The user primary phone number",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "title": "Caller ID.",
        "type": "object"
      },
      "protos.caller_id.GroupProto": {
        "properties": {
          "caller_id": {
            "description": "A caller id from the operator group. (e164-formatted)",
            "nullable": true,
            "type": "string"
          },
          "display_name": {
            "description": "[single-line only]\n\nThe operator group display name",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Group caller ID.",
        "type": "object"
      },
      "protos.caller_id.SetCallerIdMessage": {
        "properties": {
          "caller_id": {
            "description": "Phone number (e164 formatted) that will be defined as a Caller ID for the target. Use 'blocked' to block the Caller ID.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "caller_id"
        ],
        "type": "object"
      },
      "protos.change_log_event_subscription.ChangeLogEventSubscriptionCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of change log event subscriptions.",
            "items": {
              "$ref": "#/components/schemas/protos.change_log_event_subscription.ChangeLogEventSubscriptionProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of change log event subscriptions.",
        "type": "object"
      },
      "protos.change_log_event_subscription.ChangeLogEventSubscriptionProto": {
        "properties": {
          "enabled": {
            "default": true,
            "description": "Whether or not the change log event subscription is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "id": {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "webhook": {
            "$ref": "#/components/schemas/protos.webhook.WebhookProto",
            "description": "The webhook's ID, which is generated after creating a webhook successfully.",
            "nullable": true,
            "type": "object"
          },
          "websocket": {
            "$ref": "#/components/schemas/protos.websocket.WebsocketProto",
            "description": "The websocket's ID, which is generated after creating a webhook successfully.",
            "nullable": true,
            "type": "object"
          }
        },
        "title": "Change log event subscription.",
        "type": "object"
      },
      "protos.change_log_event_subscription.CreateChangeLogEventSubscription": {
        "properties": {
          "enabled": {
            "default": true,
            "description": "Whether or not the this change log event subscription is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "endpoint_id": {
            "description": "The logging endpoint's ID, which is generated after creating a webhook or websocket successfully.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "protos.change_log_event_subscription.UpdateChangeLogEventSubscription": {
        "properties": {
          "enabled": {
            "default": true,
            "description": "Whether or not the change log event subscription is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "endpoint_id": {
            "description": "The logging endpoint's ID, which is generated after creating a webhook or websocket successfully. If you plan to pair this event subscription with another logging endpoint,\nplease provide a valid webhook ID here.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "protos.channel.ChannelCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of results.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of channels.",
            "items": {
              "$ref": "#/components/schemas/protos.channel.ChannelProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of channels.",
        "type": "object"
      },
      "protos.channel.ChannelProto": {
        "properties": {
          "id": {
            "description": "The channel id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "[single-line only]\n\nThe channel name.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "Channel.",
        "type": "object"
      },
      "protos.channel.CreateChannelMessage": {
        "properties": {
          "description": {
            "description": "The description of the channel.",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "[single-line only]\n\nThe name of the channel.",
            "nullable": true,
            "type": "string"
          },
          "privacy_type": {
            "description": "The privacy type of the channel.",
            "enum": [
              "private",
              "public"
            ],
            "nullable": true,
            "type": "string"
          },
          "user_id": {
            "description": "The ID of the user who owns the channel. Just for company level API key.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "description",
          "name",
          "privacy_type"
        ],
        "type": "object"
      },
      "protos.coaching_team.CoachingTeamCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of results.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of coaching teams.",
            "items": {
              "$ref": "#/components/schemas/protos.coaching_team.CoachingTeamProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of coaching team.",
        "type": "object"
      },
      "protos.coaching_team.CoachingTeamMemberCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of results.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of team members.",
            "items": {
              "$ref": "#/components/schemas/protos.coaching_team.CoachingTeamMemberProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of coaching team members.",
        "type": "object"
      },
      "protos.coaching_team.CoachingTeamMemberMessage": {
        "properties": {
          "member_id": {
            "description": "The id of the user added to the coaching team.",
            "nullable": true,
            "type": "string"
          },
          "role": {
            "description": "The role of the user added.",
            "enum": [
              "coach",
              "trainee"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "member_id",
          "role"
        ],
        "title": "Coaching team membership.",
        "type": "object"
      },
      "protos.coaching_team.CoachingTeamMemberProto": {
        "properties": {
          "admin_office_ids": {
            "description": "The list of ids of offices where the user is an admin.",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "company_id": {
            "description": "The id of user's company.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "country": {
            "description": "Country of the user.",
            "nullable": true,
            "type": "string"
          },
          "date_active": {
            "description": "The date when the user is activated.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_added": {
            "description": "The date when the user is added.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_first_login": {
            "description": "The date when the user is logged in first time.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "do_not_disturb": {
            "description": "Boolean to tell if the user is on DND.",
            "nullable": true,
            "type": "boolean"
          },
          "emails": {
            "description": "Emails of the user.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "extension": {
            "description": "Extension of the user.",
            "nullable": true,
            "type": "string"
          },
          "first_name": {
            "description": "[single-line only]\n\nFirst name of the user.",
            "nullable": true,
            "type": "string"
          },
          "forwarding_numbers": {
            "description": "The list of forwarding numbers set for the user.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Unique id of the user.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "image_url": {
            "description": "Link to the user's profile image.",
            "nullable": true,
            "type": "string"
          },
          "is_admin": {
            "description": "Boolean to tell if the user is admin.",
            "nullable": true,
            "type": "boolean"
          },
          "is_available": {
            "description": "Boolean to tell if the user is available.",
            "nullable": true,
            "type": "boolean"
          },
          "is_on_duty": {
            "description": "Boolean to tell if the user is on duty.",
            "nullable": true,
            "type": "boolean"
          },
          "is_online": {
            "description": "Boolean to tell if the user is online.",
            "nullable": true,
            "type": "boolean"
          },
          "is_super_admin": {
            "description": "Boolean to tell if the user is super admin.",
            "nullable": true,
            "type": "boolean"
          },
          "job_title": {
            "description": "[single-line only]\n\nJob title of the user.",
            "nullable": true,
            "type": "string"
          },
          "language": {
            "description": "Language of the user.",
            "nullable": true,
            "type": "string"
          },
          "last_name": {
            "description": "[single-line only]\n\nLast name of the User.",
            "nullable": true,
            "type": "string"
          },
          "license": {
            "description": "License of the user.",
            "enum": [
              "admins",
              "agents",
              "dpde_all",
              "dpde_one",
              "lite_lines",
              "lite_support_agents",
              "magenta_lines",
              "talk"
            ],
            "nullable": true,
            "type": "string"
          },
          "location": {
            "description": "[single-line only]\n\nThe self-reported location of the user.",
            "nullable": true,
            "type": "string"
          },
          "muted": {
            "description": "Boolean to tell if the user is muted.",
            "nullable": true,
            "type": "boolean"
          },
          "office_id": {
            "description": "Id of the user's office.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "phone_numbers": {
            "description": "The list of phone numbers assigned to the user.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "role": {
            "description": "The role of the user within the coaching team.",
            "enum": [
              "coach",
              "trainee"
            ],
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "The enablement state of the user.",
            "enum": [
              "active",
              "cancelled",
              "deleted",
              "pending",
              "suspended"
            ],
            "nullable": true,
            "type": "string"
          },
          "status_message": {
            "description": "[single-line only]\n\nStatus message set by the user.",
            "nullable": true,
            "type": "string"
          },
          "timezone": {
            "description": "Timezone of the user.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "id",
          "role"
        ],
        "title": "Coaching team member.",
        "type": "object"
      },
      "protos.coaching_team.CoachingTeamProto": {
        "properties": {
          "allow_trainee_eavesdrop": {
            "description": "The boolean to tell if trainees are allowed to eavesdrop.",
            "nullable": true,
            "type": "boolean"
          },
          "company_id": {
            "description": "The company's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "country": {
            "description": "The country in which the coaching team is situated.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Id of the coaching team.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "[single-line only]\n\nName of the coaching team.",
            "nullable": true,
            "type": "string"
          },
          "office_id": {
            "description": "The office's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "phone_numbers": {
            "description": "The phone number(s) assigned to this coaching team.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "ring_seconds": {
            "description": "The number of seconds to ring the main line before going to voicemail.\n\n(or an other-wise-specified no_operators_action).",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "state": {
            "description": "The enablement state of the team.",
            "enum": [
              "active",
              "cancelled",
              "deleted",
              "pending",
              "suspended"
            ],
            "nullable": true,
            "type": "string"
          },
          "team_description": {
            "description": "Description of the coaching team.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Coaching team.",
        "type": "object"
      },
      "protos.company.CompanyProto": {
        "properties": {
          "account_type": {
            "description": "Company pricing tier.",
            "enum": [
              "enterprise",
              "free",
              "pro",
              "standard"
            ],
            "nullable": true,
            "type": "string"
          },
          "admin_email": {
            "description": "Email address of the company administrator.",
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Primary country of the company.",
            "nullable": true,
            "type": "string"
          },
          "domain": {
            "description": "[single-line only]\n\nDomain name of user emails.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The company's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "[single-line only]\n\nThe name of the company.",
            "nullable": true,
            "type": "string"
          },
          "office_count": {
            "description": "The number of offices belonging to this company",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "state": {
            "description": "Enablement state of the company.",
            "enum": [
              "active",
              "cancelled",
              "deleted",
              "pending",
              "suspended"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Company.",
        "type": "object"
      },
      "protos.contact.ContactCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of contact objects.",
            "items": {
              "$ref": "#/components/schemas/protos.contact.ContactProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of contacts.",
        "type": "object"
      },
      "protos.contact.ContactProto": {
        "properties": {
          "company_name": {
            "description": "[single-line only]\n\nThe name of the company that this contact is employed by.",
            "nullable": true,
            "type": "string"
          },
          "display_name": {
            "description": "[single-line only]\n\nThe formatted name that will be displayed for this contact.",
            "nullable": true,
            "type": "string"
          },
          "emails": {
            "description": "The email addresses associated with this contact.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "extension": {
            "description": "The contact's extension number.",
            "nullable": true,
            "type": "string"
          },
          "first_name": {
            "description": "[single-line only]\n\nThe given name of the contact.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The ID of the contact.",
            "nullable": true,
            "type": "string"
          },
          "job_title": {
            "description": "[single-line only]\n\nThe job title of this contact.",
            "nullable": true,
            "type": "string"
          },
          "last_name": {
            "description": "[single-line only]\n\nThe family name of the contact.",
            "nullable": true,
            "type": "string"
          },
          "owner_id": {
            "description": "The ID of the entity that owns this contact.",
            "nullable": true,
            "type": "string"
          },
          "phones": {
            "description": "The phone numbers associated with this contact.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "primary_email": {
            "description": "The email address to display in a context where only one email can be shown.",
            "nullable": true,
            "type": "string"
          },
          "primary_phone": {
            "description": "The primary phone number to be used when calling this contact.",
            "nullable": true,
            "type": "string"
          },
          "trunk_group": {
            "description": "[Deprecated]",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Either shared or local.",
            "enum": [
              "local",
              "shared"
            ],
            "nullable": true,
            "type": "string"
          },
          "urls": {
            "description": "A list of websites associated with or belonging to this contact.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Contact.",
        "type": "object"
      },
      "protos.contact.CreateContactMessage": {
        "properties": {
          "company_name": {
            "description": "[single-line only]\n\nThe contact's company name.",
            "nullable": true,
            "type": "string"
          },
          "emails": {
            "description": "The contact's emails.\n\nThe first email in the list is the contact's primary email.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "extension": {
            "description": "The contact's extension number.",
            "nullable": true,
            "type": "string"
          },
          "first_name": {
            "description": "[single-line only]\n\nThe contact's first name.",
            "nullable": true,
            "type": "string"
          },
          "job_title": {
            "description": "[single-line only]\n\nThe contact's job title.",
            "nullable": true,
            "type": "string"
          },
          "last_name": {
            "description": "[single-line only]\n\nThe contact's last name.",
            "nullable": true,
            "type": "string"
          },
          "owner_id": {
            "description": "The id of the user who will own this contact.\n\nIf provided, a local contact will be created for this user. Otherwise, the contact will be created as a shared contact in your company.",
            "nullable": true,
            "type": "string"
          },
          "phones": {
            "description": "The contact's phone numbers.\n\nThe phone number must be in e164 format. The first number in the list is the contact's primary phone.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "trunk_group": {
            "description": "[Deprecated]",
            "nullable": true,
            "type": "string"
          },
          "urls": {
            "description": "A list of websites associated with or belonging to this contact.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "first_name",
          "last_name"
        ],
        "type": "object"
      },
      "protos.contact.CreateContactMessageWithUid": {
        "properties": {
          "company_name": {
            "description": "[single-line only]\n\nThe contact's company name.",
            "nullable": true,
            "type": "string"
          },
          "emails": {
            "description": "The contact's emails.\n\nThe first email in the list is the contact's primary email.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "extension": {
            "description": "The contact's extension number.",
            "nullable": true,
            "type": "string"
          },
          "first_name": {
            "description": "[single-line only]\n\nThe contact's first name.",
            "nullable": true,
            "type": "string"
          },
          "job_title": {
            "description": "[single-line only]\n\nThe contact's job title.",
            "nullable": true,
            "type": "string"
          },
          "last_name": {
            "description": "[single-line only]\n\nThe contact's last name.",
            "nullable": true,
            "type": "string"
          },
          "phones": {
            "description": "The contact's phone numbers.\n\nThe phone number must be in e164 format. The first number in the list is the contact's primary phone.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "trunk_group": {
            "description": "[Deprecated]",
            "nullable": true,
            "type": "string"
          },
          "uid": {
            "description": "The unique id to be included as part of the contact's generated id.",
            "nullable": true,
            "type": "string"
          },
          "urls": {
            "description": "A list of websites associated with or belonging to this contact.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "uid"
        ],
        "type": "object"
      },
      "protos.contact.UpdateContactMessage": {
        "properties": {
          "company_name": {
            "description": "[single-line only]\n\nThe contact's company name.",
            "nullable": true,
            "type": "string"
          },
          "emails": {
            "description": "The contact's emails.\n\nThe first email in the list is the contact's primary email.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "extension": {
            "description": "The contact's extension number.",
            "nullable": true,
            "type": "string"
          },
          "first_name": {
            "description": "[single-line only]\n\nThe contact's first name.",
            "nullable": true,
            "type": "string"
          },
          "job_title": {
            "description": "[single-line only]\n\nThe contact's job title.",
            "nullable": true,
            "type": "string"
          },
          "last_name": {
            "description": "[single-line only]\n\nThe contact's last name.",
            "nullable": true,
            "type": "string"
          },
          "phones": {
            "description": "The contact's phone numbers.\n\nThe phone number must be in e164 format. The first number in the list is the contact's primary phone.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "trunk_group": {
            "description": "[Deprecated]",
            "nullable": true,
            "type": "string"
          },
          "urls": {
            "description": "A list of websites associated with or belonging to this contact.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "protos.contact_event_subscription.ContactEventSubscriptionCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list event subscriptions.",
            "items": {
              "$ref": "#/components/schemas/protos.contact_event_subscription.ContactEventSubscriptionProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of contact event subscriptions.",
        "type": "object"
      },
      "protos.contact_event_subscription.ContactEventSubscriptionProto": {
        "properties": {
          "contact_type": {
            "description": "The contact type this event subscription subscribes to.",
            "enum": [
              "local",
              "shared"
            ],
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "default": true,
            "description": "Whether or not the contact event subscription is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "id": {
            "description": "The ID of the contact event subscription object.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "webhook": {
            "$ref": "#/components/schemas/protos.webhook.WebhookProto",
            "description": "The webhook's ID, which is generated after creating a webhook successfully.",
            "nullable": true,
            "type": "object"
          },
          "websocket": {
            "$ref": "#/components/schemas/protos.websocket.WebsocketProto",
            "description": "The websocket's ID, which is generated after creating a webhook successfully.",
            "nullable": true,
            "type": "object"
          }
        },
        "title": "Contact event subscription.",
        "type": "object"
      },
      "protos.contact_event_subscription.CreateContactEventSubscription": {
        "properties": {
          "contact_type": {
            "description": "The contact type this event subscription subscribes to.",
            "enum": [
              "local",
              "shared"
            ],
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "default": true,
            "description": "Whether or not the contact event subscription is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "endpoint_id": {
            "description": "The logging endpoint's ID, which is generated after creating a webhook or websocket successfully.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "contact_type"
        ],
        "type": "object"
      },
      "protos.contact_event_subscription.UpdateContactEventSubscription": {
        "properties": {
          "contact_type": {
            "description": "The contact type this event subscription subscribes to.",
            "enum": [
              "local",
              "shared"
            ],
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "default": true,
            "description": "Whether or not the contact event subscription is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "endpoint_id": {
            "description": "The logging endpoint's ID, which is generated after creating a webhook or websocket successfully. If you plan to pair this event subscription with another logging endpoint,\nplease provide a valid webhook ID here.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "contact_type"
        ],
        "type": "object"
      },
      "protos.custom_ivr.CreateCustomIvrMessage": {
        "properties": {
          "description": {
            "description": "[single-line only]\n\nThe description of the new IVR. Max 256 characters.",
            "nullable": true,
            "type": "string"
          },
          "file": {
            "description": "An MP3 audio file. The file needs to be Base64-encoded.",
            "format": "byte",
            "nullable": true,
            "type": "string"
          },
          "ivr_type": {
            "description": "Type of IVR.",
            "enum": [
              "ASK_FIRST_OPERATOR_NOT_AVAILABLE",
              "AUTO_RECORDING",
              "CALLAI_AUTO_RECORDING",
              "CG_AUTO_RECORDING",
              "CLOSED",
              "CLOSED_DEPARTMENT_INTRO",
              "CLOSED_MENU",
              "CLOSED_MENU_OPTION",
              "CSAT_INTRO",
              "CSAT_OUTRO",
              "CSAT_PREAMBLE",
              "CSAT_QUESTION",
              "DEPARTMENT_INTRO",
              "GREETING",
              "HOLD_AGENT_READY",
              "HOLD_APPREC",
              "HOLD_CALLBACK_ACCEPT",
              "HOLD_CALLBACK_ACCEPTED",
              "HOLD_CALLBACK_CONFIRM",
              "HOLD_CALLBACK_CONFIRM_NUMBER",
              "HOLD_CALLBACK_DIFFERENT_NUMBER",
              "HOLD_CALLBACK_DIRECT",
              "HOLD_CALLBACK_FULFILLED",
              "HOLD_CALLBACK_INVALID_NUMBER",
              "HOLD_CALLBACK_KEYPAD",
              "HOLD_CALLBACK_REJECT",
              "HOLD_CALLBACK_REJECTED",
              "HOLD_CALLBACK_REQUEST",
              "HOLD_CALLBACK_REQUESTED",
              "HOLD_CALLBACK_SAME_NUMBER",
              "HOLD_CALLBACK_TRY_AGAIN",
              "HOLD_CALLBACK_UNDIALABLE",
              "HOLD_ESCAPE_VM_EIGHT",
              "HOLD_ESCAPE_VM_FIVE",
              "HOLD_ESCAPE_VM_FOUR",
              "HOLD_ESCAPE_VM_NINE",
              "HOLD_ESCAPE_VM_ONE",
              "HOLD_ESCAPE_VM_POUND",
              "HOLD_ESCAPE_VM_SEVEN",
              "HOLD_ESCAPE_VM_SIX",
              "HOLD_ESCAPE_VM_STAR",
              "HOLD_ESCAPE_VM_TEN",
              "HOLD_ESCAPE_VM_THREE",
              "HOLD_ESCAPE_VM_TWO",
              "HOLD_ESCAPE_VM_ZERO",
              "HOLD_INTERRUPT",
              "HOLD_INTRO",
              "HOLD_MUSIC",
              "HOLD_POSITION_EIGHT",
              "HOLD_POSITION_FIVE",
              "HOLD_POSITION_FOUR",
              "HOLD_POSITION_MORE",
              "HOLD_POSITION_NINE",
              "HOLD_POSITION_ONE",
              "HOLD_POSITION_SEVEN",
              "HOLD_POSITION_SIX",
              "HOLD_POSITION_TEN",
              "HOLD_POSITION_THREE",
              "HOLD_POSITION_TWO",
              "HOLD_POSITION_ZERO",
              "HOLD_WAIT",
              "MENU",
              "MENU_OPTION",
              "NEXT_TARGET",
              "VM_DROP_MESSAGE",
              "VM_UNAVAILABLE",
              "VM_UNAVAILABLE_CLOSED"
            ],
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "[single-line only]\n\nThe name of the new IVR. Max 100 characters.",
            "nullable": true,
            "type": "string"
          },
          "target_id": {
            "description": "The ID of the target to which you want to assign this IVR.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "The type of the target to which you want to assign this IVR.",
            "enum": [
              "callcenter",
              "coachingteam",
              "department",
              "office",
              "user"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "file",
          "ivr_type",
          "target_id",
          "target_type"
        ],
        "type": "object"
      },
      "protos.custom_ivr.CustomIvrCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of IVRs.",
            "items": {
              "$ref": "#/components/schemas/protos.custom_ivr.CustomIvrProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of Custom IVRs.",
        "type": "object"
      },
      "protos.custom_ivr.CustomIvrDetailsProto": {
        "properties": {
          "date_added": {
            "description": "Date when this IVR was added.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "description": {
            "description": "[single-line only]\n\nThe description of the IVR.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Id of this IVR.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "[single-line only]\n\nThe name of this IVR.",
            "nullable": true,
            "type": "string"
          },
          "selected": {
            "description": "True if this IVR is selected for this type of IVR.",
            "nullable": true,
            "type": "boolean"
          },
          "text": {
            "description": "The text for this IVR if there is no mp3.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Custom IVR details.",
        "type": "object"
      },
      "protos.custom_ivr.CustomIvrProto": {
        "properties": {
          "ivr_type": {
            "description": "Type of IVR.",
            "enum": [
              "ASK_FIRST_OPERATOR_NOT_AVAILABLE",
              "AUTO_RECORDING",
              "CALLAI_AUTO_RECORDING",
              "CG_AUTO_RECORDING",
              "CLOSED",
              "CLOSED_DEPARTMENT_INTRO",
              "CLOSED_MENU",
              "CLOSED_MENU_OPTION",
              "CSAT_INTRO",
              "CSAT_OUTRO",
              "CSAT_PREAMBLE",
              "CSAT_QUESTION",
              "DEPARTMENT_INTRO",
              "GREETING",
              "HOLD_AGENT_READY",
              "HOLD_APPREC",
              "HOLD_CALLBACK_ACCEPT",
              "HOLD_CALLBACK_ACCEPTED",
              "HOLD_CALLBACK_CONFIRM",
              "HOLD_CALLBACK_CONFIRM_NUMBER",
              "HOLD_CALLBACK_DIFFERENT_NUMBER",
              "HOLD_CALLBACK_DIRECT",
              "HOLD_CALLBACK_FULFILLED",
              "HOLD_CALLBACK_INVALID_NUMBER",
              "HOLD_CALLBACK_KEYPAD",
              "HOLD_CALLBACK_REJECT",
              "HOLD_CALLBACK_REJECTED",
              "HOLD_CALLBACK_REQUEST",
              "HOLD_CALLBACK_REQUESTED",
              "HOLD_CALLBACK_SAME_NUMBER",
              "HOLD_CALLBACK_TRY_AGAIN",
              "HOLD_CALLBACK_UNDIALABLE",
              "HOLD_ESCAPE_VM_EIGHT",
              "HOLD_ESCAPE_VM_FIVE",
              "HOLD_ESCAPE_VM_FOUR",
              "HOLD_ESCAPE_VM_NINE",
              "HOLD_ESCAPE_VM_ONE",
              "HOLD_ESCAPE_VM_POUND",
              "HOLD_ESCAPE_VM_SEVEN",
              "HOLD_ESCAPE_VM_SIX",
              "HOLD_ESCAPE_VM_STAR",
              "HOLD_ESCAPE_VM_TEN",
              "HOLD_ESCAPE_VM_THREE",
              "HOLD_ESCAPE_VM_TWO",
              "HOLD_ESCAPE_VM_ZERO",
              "HOLD_INTERRUPT",
              "HOLD_INTRO",
              "HOLD_MUSIC",
              "HOLD_POSITION_EIGHT",
              "HOLD_POSITION_FIVE",
              "HOLD_POSITION_FOUR",
              "HOLD_POSITION_MORE",
              "HOLD_POSITION_NINE",
              "HOLD_POSITION_ONE",
              "HOLD_POSITION_SEVEN",
              "HOLD_POSITION_SIX",
              "HOLD_POSITION_TEN",
              "HOLD_POSITION_THREE",
              "HOLD_POSITION_TWO",
              "HOLD_POSITION_ZERO",
              "HOLD_WAIT",
              "MENU",
              "MENU_OPTION",
              "NEXT_TARGET",
              "VM_DROP_MESSAGE",
              "VM_UNAVAILABLE",
              "VM_UNAVAILABLE_CLOSED"
            ],
            "nullable": true,
            "type": "string"
          },
          "ivrs": {
            "description": "A list of IVR detail objects.",
            "items": {
              "$ref": "#/components/schemas/protos.custom_ivr.CustomIvrDetailsProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Custom IVR.",
        "type": "object"
      },
      "protos.custom_ivr.UpdateCustomIvrDetailsMessage": {
        "properties": {
          "description": {
            "description": "[single-line only]\n\nThe description of the IVR.",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "[single-line only]\n\nThe name of this IVR.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.custom_ivr.UpdateCustomIvrMessage": {
        "properties": {
          "ivr_id": {
            "description": "The id of the ivr that you want to use for the ivr type.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "select_option": {
            "description": "For call center auto call recording only. Set ivr for inbound or outbound. Default is both.",
            "enum": [
              "inbound",
              "outbound"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "ivr_id"
        ],
        "type": "object"
      },
      "protos.deskphone.DeskPhone": {
        "properties": {
          "byod": {
            "description": "Boolean indicating whether this desk phone was purchased through Dialpad.",
            "nullable": true,
            "type": "boolean"
          },
          "device_model": {
            "description": "[single-line only]\n\nThe model name of the device.",
            "nullable": true,
            "type": "string"
          },
          "firmware_version": {
            "description": "[single-line only]\n\nThe firmware version currently loaded onto the device.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The ID of the desk phone.",
            "nullable": true,
            "type": "string"
          },
          "mac_address": {
            "description": "[single-line only]\n\nThe MAC address of the device.",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "[single-line only]\n\nA user-prescibed name for this device.",
            "nullable": true,
            "type": "string"
          },
          "owner_id": {
            "description": "The ID of the device owner.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "owner_type": {
            "description": "The entity type of the device owner.",
            "enum": [
              "room",
              "user"
            ],
            "nullable": true,
            "type": "string"
          },
          "password": {
            "description": "[single-line only]\n\nA password required to make calls on with the device.",
            "nullable": true,
            "type": "string"
          },
          "phone_number": {
            "description": "The phone number associated with this device.",
            "nullable": true,
            "type": "string"
          },
          "port": {
            "description": "The SIP port number.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "realm": {
            "description": "The SIP realm that this device should use.",
            "nullable": true,
            "type": "string"
          },
          "ring_notification": {
            "description": "A boolean indicating whether this device should ring when the user receives a call.",
            "nullable": true,
            "type": "boolean"
          },
          "sip_transport_type": {
            "description": "The SIP transport layer protocol.",
            "enum": [
              "tls"
            ],
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "User phone, or room phone.",
            "enum": [
              "ata",
              "audiocodes",
              "c2t",
              "ciscompp",
              "dect",
              "grandstream",
              "mini",
              "mitel",
              "obi",
              "polyandroid",
              "polycom",
              "sip",
              "tickiot",
              "yealink"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Desk phone.",
        "type": "object"
      },
      "protos.deskphone.DeskPhoneCollection": {
        "properties": {
          "items": {
            "description": "A list of desk phones.",
            "items": {
              "$ref": "#/components/schemas/protos.deskphone.DeskPhone",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of desk phones.",
        "type": "object"
      },
      "protos.e164_format.FormatNumberResponse": {
        "properties": {
          "area_code": {
            "description": "First portion of local formatted number. e.g. \"(555)\"",
            "nullable": true,
            "type": "string"
          },
          "country_code": {
            "description": "Abbreviated country name in ISO 3166-1 alpha-2 format. e.g. \"US\"",
            "nullable": true,
            "type": "string"
          },
          "e164_number": {
            "description": "Number in local format.\n\ne.g. \"(555) 555-5555\"",
            "nullable": true,
            "type": "string"
          },
          "local_number": {
            "description": "Number in E.164 format. e.g. \"+15555555555\"",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Formatted number.",
        "type": "object"
      },
      "protos.faxline.CreateFaxNumberMessage": {
        "properties": {
          "line": {
            "description": "Line to assign.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/protos.faxline.ReservedLineType"
              },
              {
                "$ref": "#/components/schemas/protos.faxline.SearchLineType"
              },
              {
                "$ref": "#/components/schemas/protos.faxline.TollfreeLineType"
              }
            ]
          },
          "target": {
            "$ref": "#/components/schemas/protos.faxline.Target",
            "description": "The target to assign the number to.",
            "nullable": true,
            "type": "object"
          }
        },
        "required": [
          "line",
          "target"
        ],
        "type": "object"
      },
      "protos.faxline.FaxNumberProto": {
        "properties": {
          "area_code": {
            "description": "The area code of the number.",
            "nullable": true,
            "type": "string"
          },
          "company_id": {
            "description": "The ID of the associated company.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "number": {
            "description": "A mock parameter for testing.",
            "nullable": true,
            "type": "string"
          },
          "office_id": {
            "description": "The ID of the associate office.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_id": {
            "description": "The ID of the target to which this number is assigned.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "The type of the target to which this number is assigned.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "number"
        ],
        "title": "Fax number details.",
        "type": "object"
      },
      "protos.faxline.ReservedLineType": {
        "properties": {
          "number": {
            "description": "A phone number to assign. (e164-formatted)",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Type of line.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "number",
          "type"
        ],
        "title": "Reserved number fax line assignment.",
        "type": "object"
      },
      "protos.faxline.SearchLineType": {
        "properties": {
          "area_code": {
            "description": "An area code in which to find an available phone number for assignment. If there is no area code provided, office's area code will be used.",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Type of line.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "area_code",
          "type"
        ],
        "title": "Search fax line assignment.",
        "type": "object"
      },
      "protos.faxline.Target": {
        "properties": {
          "target_id": {
            "description": "The ID of the target to assign the fax line to.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "Type of the target to assign the fax line to.",
            "enum": [
              "department",
              "user"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "target_id",
          "target_type"
        ],
        "type": "object"
      },
      "protos.faxline.TollfreeLineType": {
        "properties": {
          "type": {
            "description": "Type of line.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Tollfree fax line assignment.",
        "type": "object"
      },
      "protos.group.AddCallCenterOperatorMessage": {
        "properties": {
          "keep_paid_numbers": {
            "default": true,
            "description": "Whether or not to keep phone numbers when switching to a support license.\n\nNote: Phone numbers require additional number licenses under a support license.",
            "nullable": true,
            "type": "boolean"
          },
          "license_type": {
            "default": "agents",
            "description": "The type of license to assign to the new operator if a license is required.\n(`agents` or `lite_support_agents`). Defaults to `agents`",
            "enum": [
              "agents",
              "lite_support_agents"
            ],
            "nullable": true,
            "type": "string"
          },
          "role": {
            "default": "operator",
            "description": "The role the user should assume.",
            "enum": [
              "admin",
              "operator",
              "supervisor"
            ],
            "nullable": true,
            "type": "string"
          },
          "skill_level": {
            "default": 100,
            "description": "Skill level of the operator. Integer value in range 1 - 100. Default 100.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "user_id": {
            "description": "The ID of the user.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "user_id"
        ],
        "type": "object"
      },
      "protos.group.AddOperatorMessage": {
        "properties": {
          "operator_id": {
            "description": "ID of the operator to add.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "operator_type": {
            "description": "Type of the operator to add. (`user` or `room`)",
            "enum": [
              "room",
              "user"
            ],
            "nullable": true,
            "type": "string"
          },
          "role": {
            "default": "operator",
            "description": "The role of the new operator. (`operator` or `admin`)",
            "enum": [
              "admin",
              "operator"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "operator_id",
          "operator_type"
        ],
        "type": "object"
      },
      "protos.group.AdvancedSettings": {
        "properties": {
          "auto_call_recording": {
            "$ref": "#/components/schemas/protos.group.AutoCallRecording",
            "description": "Choose which calls to and from this call center get automatically recorded. Recordings are only available to administrators of this call center, which can be found in the Dialpad app and the Calls List.",
            "nullable": true,
            "type": "object"
          },
          "max_wrap_up_seconds": {
            "description": "Include a post-call wrap-up time before agents can receive their next call. Default is 0.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "protos.group.Alerts": {
        "properties": {
          "cc_service_level": {
            "description": "Alert supervisors when the service level drops below how many percent. Default is 95%.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "cc_service_level_seconds": {
            "description": "Inbound calls should be answered within how many seconds. Default is 60.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "protos.group.AutoCallRecording": {
        "properties": {
          "allow_pause_recording": {
            "description": "Allow agents to stop/restart a recording during a call. Default is False.",
            "nullable": true,
            "type": "boolean"
          },
          "call_recording_inbound": {
            "description": "Whether or not inbound calls to this call center get automatically recorded. Default is False.",
            "nullable": true,
            "type": "boolean"
          },
          "call_recording_outbound": {
            "description": "Whether or not outbound calls from this call center get automatically recorded. Default is False.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "protos.group.AvailabilityStatusProto": {
        "properties": {
          "name": {
            "description": "[single-line only]\n\nA descriptive name for the status. If the Call Center is within any holiday, it displays it.",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Status of this Call Center. It can be open, closed, holiday_open or holiday_closed",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "status"
        ],
        "title": "Availability Status for a Call Center.",
        "type": "object"
      },
      "protos.group.CallCenterCollection": {
        "properties": {
          "cursor": {
            "description": "A cursor string that can be used to fetch the subsequent page.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list containing the first page of results.",
            "items": {
              "$ref": "#/components/schemas/protos.group.CallCenterProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of call centers.",
        "type": "object"
      },
      "protos.group.CallCenterProto": {
        "properties": {
          "advanced_settings": {
            "$ref": "#/components/schemas/protos.group.AdvancedSettings",
            "description": "Configure call center advanced settings.",
            "nullable": true,
            "type": "object"
          },
          "alerts": {
            "$ref": "#/components/schemas/protos.group.Alerts",
            "description": "Set when alerts will be triggered.",
            "nullable": true,
            "type": "object"
          },
          "availability_status": {
            "description": "Availability status of the group.",
            "enum": [
              "closed",
              "holiday_closed",
              "holiday_open",
              "open"
            ],
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "The country in which the user group resides.",
            "nullable": true,
            "type": "string"
          },
          "first_action": {
            "description": "The initial action to take upon receiving a new call.",
            "enum": [
              "menu",
              "operators"
            ],
            "nullable": true,
            "type": "string"
          },
          "friday_hours": {
            "description": "The Friday hours of operation. Default value is [\"08:00\", \"18:00\"]",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "group_description": {
            "description": "The description of the call center.",
            "nullable": true,
            "type": "string"
          },
          "hold_queue": {
            "$ref": "#/components/schemas/protos.group.HoldQueueCallCenter",
            "description": "Configure how the calls are sent to a hold queue when all operators are busy on other calls.",
            "nullable": true,
            "type": "object"
          },
          "hours_on": {
            "description": "The time frame when the call center wants to receive calls. Default value is false, which means the call center will always take calls (24/7).",
            "nullable": true,
            "type": "boolean"
          },
          "id": {
            "description": "The ID of the group entity.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "monday_hours": {
            "description": "The Monday hours of operation. To specify when hours_on is set to True. e.g. [\"08:00\", \"12:00\", \"14:00\", \"18:00\"] => open from 8AM to Noon, and from 2PM to 6PM. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "[single-line only]\n\nThe name of the group.",
            "nullable": true,
            "type": "string"
          },
          "no_operators_action": {
            "description": "The action to take if there are no operators available to accept an inbound call.",
            "enum": [
              "bridge_target",
              "company_directory",
              "department",
              "directory",
              "disabled",
              "extension",
              "menu",
              "message",
              "operator",
              "person",
              "scripted_ivr",
              "voicemail"
            ],
            "nullable": true,
            "type": "string"
          },
          "office_id": {
            "description": "The ID of the office in which this group resides.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "phone_numbers": {
            "description": "A list of phone numbers belonging to this group.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "ring_seconds": {
            "description": "The number of seconds to allow the group line to ring before going to voicemail.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "routing_options": {
            "$ref": "#/components/schemas/protos.group.RoutingOptions",
            "description": "Call routing options for this group.",
            "nullable": true,
            "type": "object"
          },
          "saturday_hours": {
            "description": "The Saturday hours of operation. Default is empty array.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "state": {
            "description": "The current enablement state of this group.",
            "enum": [
              "active",
              "cancelled",
              "deleted",
              "pending",
              "suspended"
            ],
            "nullable": true,
            "type": "string"
          },
          "sunday_hours": {
            "description": "The Sunday hours of operation. Default is empty array.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "thursday_hours": {
            "description": "The Thursday hours of operation. Default value is [\"08:00\", \"18:00\"]",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "timezone": {
            "description": "The timezone of the group.",
            "nullable": true,
            "type": "string"
          },
          "tuesday_hours": {
            "description": "The Tuesday hours of operation. Default value is [\"08:00\", \"18:00\"]",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "voice_intelligence": {
            "$ref": "#/components/schemas/protos.group.VoiceIntelligence",
            "description": "Configure voice intelligence.",
            "nullable": true,
            "type": "object"
          },
          "wednesday_hours": {
            "description": "The Wednesday hours of operation. Default value is [\"08:00\", \"18:00\"]",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Call center.",
        "type": "object"
      },
      "protos.group.CallCenterStatusProto": {
        "properties": {
          "availability": {
            "$ref": "#/components/schemas/protos.group.AvailabilityStatusProto",
            "description": "Availability of the Call Center.",
            "nullable": true,
            "type": "object"
          },
          "capacity": {
            "description": "The number of available operators.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "longest_call_wait_time": {
            "description": "The longest queued call, in seconds.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "on_duty_operators": {
            "description": "The amount of operators On Duty",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "pending": {
            "description": "The number of on-hold calls.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "availability",
          "capacity",
          "longest_call_wait_time",
          "on_duty_operators",
          "pending"
        ],
        "title": "Status information for a Call Center.",
        "type": "object"
      },
      "protos.group.CreateCallCenterMessage": {
        "properties": {
          "advanced_settings": {
            "$ref": "#/components/schemas/protos.group.AdvancedSettings",
            "description": "Configure advanced call center settings.",
            "nullable": true,
            "type": "object"
          },
          "alerts": {
            "$ref": "#/components/schemas/protos.group.Alerts",
            "description": "Set when alerts will be triggered.",
            "nullable": true,
            "type": "object"
          },
          "friday_hours": {
            "description": "The Friday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "group_description": {
            "description": "The description of the call center. Max 256 characters.",
            "nullable": true,
            "type": "string"
          },
          "hold_queue": {
            "$ref": "#/components/schemas/protos.group.HoldQueueCallCenter",
            "description": "Configure how the calls are sent to a hold queue when all operators are busy on other calls.",
            "nullable": true,
            "type": "object"
          },
          "hours_on": {
            "description": "The time frame when the call center wants to receive calls. Default value is false, which means the call center will always take calls (24/7).",
            "nullable": true,
            "type": "boolean"
          },
          "monday_hours": {
            "description": "The Monday hours of operation. To specify when hours_on is set to True. e.g. [\"08:00\", \"12:00\", \"14:00\", \"18:00\"] => open from 8AM to Noon, and from 2PM to 6PM. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "[single-line only]\n\nThe name of the call center. Max 100 characters.",
            "nullable": true,
            "type": "string"
          },
          "office_id": {
            "description": "The id of the office to which the call center belongs..",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "ring_seconds": {
            "description": "The number of seconds to allow the group line to ring before going to voicemail. Choose from 10 seconds to 45 seconds. Default is 30 seconds.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "routing_options": {
            "$ref": "#/components/schemas/protos.group.RoutingOptions",
            "description": "Call routing options for this group.",
            "nullable": true,
            "type": "object"
          },
          "saturday_hours": {
            "description": "The Saturday hours of operation. Default is empty array.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "sunday_hours": {
            "description": "The Sunday hours of operation. Default is empty array.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "thursday_hours": {
            "description": "The Thursday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "tuesday_hours": {
            "description": "The Tuesday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "voice_intelligence": {
            "$ref": "#/components/schemas/protos.group.VoiceIntelligence",
            "description": "Configure voice intelligence.",
            "nullable": true,
            "type": "object"
          },
          "wednesday_hours": {
            "description": "The Wednesday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "name",
          "office_id"
        ],
        "type": "object"
      },
      "protos.group.CreateDepartmentMessage": {
        "properties": {
          "auto_call_recording": {
            "description": "Whether or not automatically record all calls of this department. Default is False.",
            "nullable": true,
            "type": "boolean"
          },
          "friday_hours": {
            "description": "The Friday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "group_description": {
            "description": "The description of the department. Max 256 characters.",
            "nullable": true,
            "type": "string"
          },
          "hold_queue": {
            "$ref": "#/components/schemas/protos.group.HoldQueueDepartment",
            "description": "Configure how the calls are sent to a hold queue when all operators are busy on other calls.",
            "nullable": true,
            "type": "object"
          },
          "hours_on": {
            "description": "The time frame when the department wants to receive calls. Default value is false, which means the call center will always take calls (24/7).",
            "nullable": true,
            "type": "boolean"
          },
          "monday_hours": {
            "description": "The Monday hours of operation. To specify when hours_on is set to True. e.g. [\"08:00\", \"12:00\", \"14:00\", \"18:00\"] => open from 8AM to Noon, and from 2PM to 6PM. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "[single-line only]\n\nThe name of the department. Max 100 characters.",
            "nullable": true,
            "type": "string"
          },
          "office_id": {
            "description": "The id of the office to which the department belongs..",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "ring_seconds": {
            "description": "The number of seconds to allow the group line to ring before going to voicemail. Choose from 10 seconds to 45 seconds. Default is 30 seconds.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "routing_options": {
            "$ref": "#/components/schemas/protos.group.RoutingOptions",
            "description": "Call routing options for this group.",
            "nullable": true,
            "type": "object"
          },
          "saturday_hours": {
            "description": "The Saturday hours of operation. Default is empty array.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "sunday_hours": {
            "description": "The Sunday hours of operation. Default is empty array.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "thursday_hours": {
            "description": "The Thursday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "tuesday_hours": {
            "description": "The Tuesday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "voice_intelligence": {
            "$ref": "#/components/schemas/protos.group.VoiceIntelligence",
            "description": "Configure voice intelligence.",
            "nullable": true,
            "type": "object"
          },
          "wednesday_hours": {
            "description": "The Wednesday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "name",
          "office_id"
        ],
        "type": "object"
      },
      "protos.group.DepartmentCollection": {
        "properties": {
          "cursor": {
            "description": "A cursor string that can be used to fetch the subsequent page.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list containing the first page of results.",
            "items": {
              "$ref": "#/components/schemas/protos.group.DepartmentProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of departments.",
        "type": "object"
      },
      "protos.group.DepartmentProto": {
        "properties": {
          "auto_call_recording": {
            "description": "Whether or not automatically record all calls of this department. Default is False.",
            "nullable": true,
            "type": "boolean"
          },
          "availability_status": {
            "description": "Availability status of the group.",
            "enum": [
              "closed",
              "holiday_closed",
              "holiday_open",
              "open"
            ],
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "The country in which the user group resides.",
            "nullable": true,
            "type": "string"
          },
          "first_action": {
            "description": "The initial action to take upon receiving a new call.",
            "enum": [
              "menu",
              "operators"
            ],
            "nullable": true,
            "type": "string"
          },
          "friday_hours": {
            "description": "The Friday hours of operation. Default value is [\"08:00\", \"18:00\"]",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "group_description": {
            "description": "The description of the call center.",
            "nullable": true,
            "type": "string"
          },
          "hold_queue": {
            "$ref": "#/components/schemas/protos.group.HoldQueueDepartment",
            "description": "Configure how the calls are sent to a hold queue when all operators are busy on other calls.",
            "nullable": true,
            "type": "object"
          },
          "hours_on": {
            "description": "The time frame when the call center wants to receive calls. Default value is false, which means the call center will always take calls (24/7).",
            "nullable": true,
            "type": "boolean"
          },
          "id": {
            "description": "The ID of the group entity.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "monday_hours": {
            "description": "The Monday hours of operation. To specify when hours_on is set to True. e.g. [\"08:00\", \"12:00\", \"14:00\", \"18:00\"] => open from 8AM to Noon, and from 2PM to 6PM. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "[single-line only]\n\nThe name of the group.",
            "nullable": true,
            "type": "string"
          },
          "no_operators_action": {
            "description": "The action to take if there are no operators available to accept an inbound call.",
            "enum": [
              "bridge_target",
              "company_directory",
              "department",
              "directory",
              "disabled",
              "extension",
              "menu",
              "message",
              "operator",
              "person",
              "scripted_ivr",
              "voicemail"
            ],
            "nullable": true,
            "type": "string"
          },
          "office_id": {
            "description": "The ID of the office in which this group resides.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "phone_numbers": {
            "description": "A list of phone numbers belonging to this group.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "ring_seconds": {
            "description": "The number of seconds to allow the group line to ring before going to voicemail.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "routing_options": {
            "$ref": "#/components/schemas/protos.group.RoutingOptions",
            "description": "Call routing options for this group.",
            "nullable": true,
            "type": "object"
          },
          "saturday_hours": {
            "description": "The Saturday hours of operation. Default is empty array.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "state": {
            "description": "The current enablement state of this group.",
            "enum": [
              "active",
              "cancelled",
              "deleted",
              "pending",
              "suspended"
            ],
            "nullable": true,
            "type": "string"
          },
          "sunday_hours": {
            "description": "The Sunday hours of operation. Default is empty array.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "thursday_hours": {
            "description": "The Thursday hours of operation. Default value is [\"08:00\", \"18:00\"]",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "timezone": {
            "description": "The timezone of the group.",
            "nullable": true,
            "type": "string"
          },
          "tuesday_hours": {
            "description": "The Tuesday hours of operation. Default value is [\"08:00\", \"18:00\"]",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "voice_intelligence": {
            "$ref": "#/components/schemas/protos.group.VoiceIntelligence",
            "description": "Configure voice intelligence.",
            "nullable": true,
            "type": "object"
          },
          "wednesday_hours": {
            "description": "The Wednesday hours of operation. Default value is [\"08:00\", \"18:00\"]",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Department.",
        "type": "object"
      },
      "protos.group.DtmfMapping": {
        "properties": {
          "input": {
            "description": "The DTMF key associated with this menu item. (0-9)",
            "nullable": true,
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/protos.group.DtmfOptions",
            "description": "The action that should be taken if the input key is pressed.",
            "nullable": true,
            "type": "object"
          }
        },
        "type": "object"
      },
      "protos.group.DtmfOptions": {
        "properties": {
          "action": {
            "description": "The routing action type.",
            "enum": [
              "bridge_target",
              "company_directory",
              "department",
              "directory",
              "disabled",
              "extension",
              "menu",
              "message",
              "operator",
              "person",
              "scripted_ivr",
              "voicemail"
            ],
            "nullable": true,
            "type": "string"
          },
          "action_target_id": {
            "description": "The ID of the target that should be dialed.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "action_target_type": {
            "description": "The type of the target that should be dialed.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "contact",
              "contactgroup",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "DTMF routing options.",
        "type": "object"
      },
      "protos.group.HoldQueueCallCenter": {
        "properties": {
          "allow_queue_callback": {
            "description": "Whether or not to allow callers to request a callback. Default is False.",
            "nullable": true,
            "type": "boolean"
          },
          "announce_position": {
            "description": "Whether or not to let callers know their place in the queue. This option is not available when a maximum queue wait time of less than 2 minutes is selected. Default is True.",
            "nullable": true,
            "type": "boolean"
          },
          "announcement_interval_seconds": {
            "description": "Hold announcement interval wait time. Default is 2 min.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "max_hold_count": {
            "description": "If all operators are busy on other calls, send callers to a hold queue. This is to specify your queue size. Choose from 1-1000. Default is 50.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "max_hold_seconds": {
            "description": "Maximum queue wait time in seconds. Choose from 30s to 18000s (3 hours). Default is 900s (15 min).",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "queue_callback_dtmf": {
            "description": "Allow callers to request a callback when the queue has more than queue_callback_threshold number of calls by pressing one of the followings: [0,1,2,3,4,5,6,7,8,9,*,#]. Default is 9.",
            "nullable": true,
            "type": "string"
          },
          "queue_callback_threshold": {
            "description": "Allow callers to request a callback when the queue has more than this number of calls. Default is 5.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "queue_escape_dtmf": {
            "description": "Allow callers to exit the hold queue to voicemail by pressing one of the followings:\n[0,1,2,3,4,5,6,7,8,9,*,#]. Default is *.",
            "nullable": true,
            "type": "string"
          },
          "stay_in_queue_after_closing": {
            "description": "Whether or not to allow existing calls to stay in queue after the call center has closed. Default is False.",
            "nullable": true,
            "type": "boolean"
          },
          "unattended_queue": {
            "description": "Whether or not to allow callers to be placed in your hold queue when no agents are available. Default is False.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "protos.group.HoldQueueDepartment": {
        "properties": {
          "allow_queuing": {
            "description": "Whether or not send callers to a hold queue, if all operators are busy on other calls. Default is False.",
            "nullable": true,
            "type": "boolean"
          },
          "max_hold_count": {
            "description": "If all operators are busy on other calls, send callers to a hold queue. This is to specify your queue size. Choose from 1-50. Default is 50.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "max_hold_seconds": {
            "description": "Maximum queue wait time in seconds. Choose from 30s to 18000s (3 hours). Default is 900s (15 min).",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "protos.group.OperatorCollection": {
        "description": "Operators can be users or rooms.",
        "properties": {
          "rooms": {
            "description": "A list of rooms that can currently act as operators for this group.",
            "items": {
              "$ref": "#/components/schemas/protos.room.RoomProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "users": {
            "description": "A list of users who are currently operators of this group.",
            "items": {
              "$ref": "#/components/schemas/protos.user.UserProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of operators.",
        "type": "object"
      },
      "protos.group.OperatorDutyStatusProto": {
        "properties": {
          "duty_status_reason": {
            "description": "[single-line only]\n\nA description of this status.",
            "nullable": true,
            "type": "string"
          },
          "duty_status_started": {
            "description": "The time stamp, in UTC, when the current on duty status changed.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "on_duty": {
            "description": "Whether the operator is currently on duty or off duty.",
            "nullable": true,
            "type": "boolean"
          },
          "on_duty_started": {
            "description": "The time stamp, in UTC, when this operator became available for contact center calls.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "on_duty_status": {
            "description": "A description of operator's on duty status.",
            "enum": [
              "available",
              "busy",
              "occupied",
              "occupied-end",
              "unavailable",
              "wrapup",
              "wrapup-end"
            ],
            "nullable": true,
            "type": "string"
          },
          "user_id": {
            "description": "The ID of the operator.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "protos.group.OperatorSkillLevelProto": {
        "properties": {
          "call_center_id": {
            "description": "The call center's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "skill_level": {
            "description": "New skill level of the operator.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "user_id": {
            "description": "The ID of the operator.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "protos.group.RemoveCallCenterOperatorMessage": {
        "properties": {
          "user_id": {
            "description": "ID of the operator to remove.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "user_id"
        ],
        "type": "object"
      },
      "protos.group.RemoveOperatorMessage": {
        "properties": {
          "operator_id": {
            "description": "ID of the operator to remove.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "operator_type": {
            "description": "Type of the operator to remove (`user` or `room`).",
            "enum": [
              "room",
              "user"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "operator_id",
          "operator_type"
        ],
        "type": "object"
      },
      "protos.group.RoutingOptions": {
        "properties": {
          "closed": {
            "$ref": "#/components/schemas/protos.group.RoutingOptionsInner",
            "description": "Routing options to use during off hours.",
            "nullable": true,
            "type": "object"
          },
          "open": {
            "$ref": "#/components/schemas/protos.group.RoutingOptionsInner",
            "description": "Routing options to use during open hours.",
            "nullable": true,
            "type": "object"
          }
        },
        "required": [
          "closed",
          "open"
        ],
        "title": "Group routing options.",
        "type": "object"
      },
      "protos.group.RoutingOptionsInner": {
        "properties": {
          "action": {
            "description": "The action that should be taken if no operators are available.",
            "enum": [
              "bridge_target",
              "company_directory",
              "department",
              "directory",
              "disabled",
              "extension",
              "menu",
              "message",
              "operator",
              "person",
              "scripted_ivr",
              "voicemail"
            ],
            "nullable": true,
            "type": "string"
          },
          "action_target_id": {
            "description": "The ID of the Target that inbound calls should be routed to.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "action_target_type": {
            "description": "The type of the Target that inbound calls should be routed to.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "contact",
              "contactgroup",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          },
          "dtmf": {
            "description": "DTMF menu options.",
            "items": {
              "$ref": "#/components/schemas/protos.group.DtmfMapping",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "operator_routing": {
            "description": "The routing strategy that should be used when dialing operators.",
            "enum": [
              "fixedorder",
              "longestidle",
              "mostskilled",
              "random",
              "roundrobin",
              "simultaneous"
            ],
            "nullable": true,
            "type": "string"
          },
          "try_dial_operators": {
            "description": "Whether operators should be dialed on inbound calls.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": [
          "action",
          "try_dial_operators"
        ],
        "title": "Group routing options for open or closed states.",
        "type": "object"
      },
      "protos.group.UpdateCallCenterMessage": {
        "properties": {
          "advanced_settings": {
            "$ref": "#/components/schemas/protos.group.AdvancedSettings",
            "description": "Configure advanced call center settings.",
            "nullable": true,
            "type": "object"
          },
          "alerts": {
            "$ref": "#/components/schemas/protos.group.Alerts",
            "description": "Set when alerts will be triggered.",
            "nullable": true,
            "type": "object"
          },
          "friday_hours": {
            "description": "The Friday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "group_description": {
            "description": "The description of the call center. Max 256 characters.",
            "nullable": true,
            "type": "string"
          },
          "hold_queue": {
            "$ref": "#/components/schemas/protos.group.HoldQueueCallCenter",
            "description": "Configure how the calls are sent to a hold queue when all operators are busy on other calls.",
            "nullable": true,
            "type": "object"
          },
          "hours_on": {
            "description": "The time frame when the call center wants to receive calls. Default value is false, which means the call center will always take calls (24/7).",
            "nullable": true,
            "type": "boolean"
          },
          "monday_hours": {
            "description": "The Monday hours of operation. To specify when hours_on is set to True. e.g. [\"08:00\", \"12:00\", \"14:00\", \"18:00\"] => open from 8AM to Noon, and from 2PM to 6PM. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "[single-line only]\n\nThe name of the call center. Max 100 characters.",
            "nullable": true,
            "type": "string"
          },
          "ring_seconds": {
            "description": "The number of seconds to allow the group line to ring before going to voicemail. Choose from 10 seconds to 45 seconds. Default is 30 seconds.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "routing_options": {
            "$ref": "#/components/schemas/protos.group.RoutingOptions",
            "description": "Call routing options for this group.",
            "nullable": true,
            "type": "object"
          },
          "saturday_hours": {
            "description": "The Saturday hours of operation. Default is empty array.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "sunday_hours": {
            "description": "The Sunday hours of operation. Default is empty array.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "thursday_hours": {
            "description": "The Thursday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "tuesday_hours": {
            "description": "The Tuesday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "voice_intelligence": {
            "$ref": "#/components/schemas/protos.group.VoiceIntelligence",
            "description": "Configure voice intelligence.",
            "nullable": true,
            "type": "object"
          },
          "wednesday_hours": {
            "description": "The Wednesday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "protos.group.UpdateDepartmentMessage": {
        "properties": {
          "auto_call_recording": {
            "description": "Whether or not automatically record all calls of this department. Default is False.",
            "nullable": true,
            "type": "boolean"
          },
          "friday_hours": {
            "description": "The Friday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "group_description": {
            "description": "The description of the department. Max 256 characters.",
            "nullable": true,
            "type": "string"
          },
          "hold_queue": {
            "$ref": "#/components/schemas/protos.group.HoldQueueDepartment",
            "description": "Configure how the calls are sent to a hold queue when all operators are busy on other calls.",
            "nullable": true,
            "type": "object"
          },
          "hours_on": {
            "description": "The time frame when the department wants to receive calls. Default value is false, which means the call center will always take calls (24/7).",
            "nullable": true,
            "type": "boolean"
          },
          "monday_hours": {
            "description": "The Monday hours of operation. To specify when hours_on is set to True. e.g. [\"08:00\", \"12:00\", \"14:00\", \"18:00\"] => open from 8AM to Noon, and from 2PM to 6PM. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "[single-line only]\n\nThe name of the department. Max 100 characters.",
            "nullable": true,
            "type": "string"
          },
          "ring_seconds": {
            "description": "The number of seconds to allow the group line to ring before going to voicemail. Choose from 10 seconds to 45 seconds. Default is 30 seconds.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "routing_options": {
            "$ref": "#/components/schemas/protos.group.RoutingOptions",
            "description": "Call routing options for this group.",
            "nullable": true,
            "type": "object"
          },
          "saturday_hours": {
            "description": "The Saturday hours of operation. Default is empty array.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "sunday_hours": {
            "description": "The Sunday hours of operation. Default is empty array.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "thursday_hours": {
            "description": "The Thursday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "tuesday_hours": {
            "description": "The Tuesday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "voice_intelligence": {
            "$ref": "#/components/schemas/protos.group.VoiceIntelligence",
            "description": "Configure voice intelligence.",
            "nullable": true,
            "type": "object"
          },
          "wednesday_hours": {
            "description": "The Wednesday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "protos.group.UpdateOperatorDutyStatusMessage": {
        "properties": {
          "duty_status_reason": {
            "description": "[single-line only]\n\nA description of this status.",
            "nullable": true,
            "type": "string"
          },
          "on_duty": {
            "description": "True if this status message indicates an \"on-duty\" status.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": [
          "on_duty"
        ],
        "type": "object"
      },
      "protos.group.UpdateOperatorSkillLevelMessage": {
        "properties": {
          "skill_level": {
            "description": "New skill level to set the operator in the call center. It must be an integer value between 0 and 100.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "skill_level"
        ],
        "type": "object"
      },
      "protos.group.UserOrRoomProto": {
        "properties": {
          "company_id": {
            "description": "The company to which this entity belongs.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "country": {
            "description": "The country in which the entity resides.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The ID of this entity.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "image_url": {
            "description": "The url of this entity's profile image.",
            "nullable": true,
            "type": "string"
          },
          "is_on_duty": {
            "description": "Whether the entity is currently acting as an operator.",
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "[single-line only]\n\nThe entity's name.",
            "nullable": true,
            "type": "string"
          },
          "office_id": {
            "description": "The office in which this entity resides.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "phone_numbers": {
            "description": "The phone numbers associated with this entity.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "state": {
            "description": "The current enablement state of this entity.",
            "enum": [
              "active",
              "cancelled",
              "deleted",
              "pending",
              "suspended"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Operator.",
        "type": "object"
      },
      "protos.group.VoiceIntelligence": {
        "properties": {
          "allow_pause": {
            "description": "Allow individual users to start and stop Vi during calls. Default is True.",
            "nullable": true,
            "type": "boolean"
          },
          "auto_start": {
            "description": "Auto start Vi for this call center. Default is True.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "protos.member_channel.AddChannelMemberMessage": {
        "properties": {
          "user_id": {
            "description": "The user id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "user_id"
        ],
        "title": "Input to add members to a channel",
        "type": "object"
      },
      "protos.member_channel.MembersCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of results.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of membser from channels.",
            "items": {
              "$ref": "#/components/schemas/protos.member_channel.MembersProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of channel members.",
        "type": "object"
      },
      "protos.member_channel.MembersProto": {
        "properties": {
          "id": {
            "description": "The user id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "[single-line only]\n\nThe user name.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Channel member.",
        "type": "object"
      },
      "protos.member_channel.RemoveChannelMemberMessage": {
        "properties": {
          "user_id": {
            "description": "The user id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "user_id"
        ],
        "title": "Input to remove members from a channel",
        "type": "object"
      },
      "protos.number.AreaCodeSwap": {
        "properties": {
          "area_code": {
            "description": "An area code in which to find an available phone number for assignment.",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Type of swap.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Swap number with a number in the specified area code.",
        "type": "object"
      },
      "protos.number.AssignNumberMessage": {
        "properties": {
          "area_code": {
            "description": "An area code in which to find an available phone number for assignment.",
            "nullable": true,
            "type": "string"
          },
          "number": {
            "description": "A phone number to assign. (e164-formatted)",
            "nullable": true,
            "type": "string"
          },
          "primary": {
            "default": true,
            "description": "A boolean indicating whether this should become the primary phone number.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "protos.number.AssignNumberTargetGenericMessage": {
        "properties": {
          "area_code": {
            "description": "An area code in which to find an available phone number for assignment.",
            "nullable": true,
            "type": "string"
          },
          "number": {
            "description": "A phone number to assign. (e164-formatted)",
            "nullable": true,
            "type": "string"
          },
          "primary": {
            "default": true,
            "description": "A boolean indicating whether this should become the target's primary phone number.",
            "nullable": true,
            "type": "boolean"
          },
          "target_id": {
            "description": "The ID of the target to reassign this number to.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "The type of the target.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "target_id",
          "target_type"
        ],
        "type": "object"
      },
      "protos.number.AssignNumberTargetMessage": {
        "properties": {
          "primary": {
            "default": true,
            "description": "A boolean indicating whether this should become the target's primary phone number.",
            "nullable": true,
            "type": "boolean"
          },
          "target_id": {
            "description": "The ID of the target to reassign this number to.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "The type of the target.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "target_id",
          "target_type"
        ],
        "type": "object"
      },
      "protos.number.AutoSwap": {
        "properties": {
          "type": {
            "description": "Type of swap.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Swap number with an auto-assigned number.",
        "type": "object"
      },
      "protos.number.NumberCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of phone numbers.",
            "items": {
              "$ref": "#/components/schemas/protos.number.NumberProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of numbers.",
        "type": "object"
      },
      "protos.number.NumberProto": {
        "properties": {
          "area_code": {
            "description": "The area code of the number.",
            "nullable": true,
            "type": "string"
          },
          "company_id": {
            "description": "The ID of the associated company.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "deleted": {
            "description": "A boolean indicating whether this number has been ported out of Dialpad.",
            "nullable": true,
            "type": "boolean"
          },
          "number": {
            "description": "The e164-formatted number.",
            "nullable": true,
            "type": "string"
          },
          "office_id": {
            "description": "The ID of the associate office.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "status": {
            "description": "The current assignment status of this number.",
            "enum": [
              "available",
              "call_center",
              "call_router",
              "department",
              "dynamic_caller",
              "office",
              "pending",
              "porting",
              "room",
              "user"
            ],
            "nullable": true,
            "type": "string"
          },
          "target_id": {
            "description": "The ID of the target to which this number is assigned.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "The type of the target to which this number is assigned.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The number type.",
            "enum": [
              "free",
              "local",
              "mobile",
              "softbank",
              "tollfree"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Number details.",
        "type": "object"
      },
      "protos.number.ProvidedNumberSwap": {
        "properties": {
          "number": {
            "description": "A phone number to swap. (e164-formatted)",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Type of swap.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Swap number with provided number.",
        "type": "object"
      },
      "protos.number.SwapNumberMessage": {
        "properties": {
          "swap_details": {
            "description": "Type of number swap (area_code, auto, provided_number).",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/protos.number.AreaCodeSwap"
              },
              {
                "$ref": "#/components/schemas/protos.number.AutoSwap"
              },
              {
                "$ref": "#/components/schemas/protos.number.ProvidedNumberSwap"
              }
            ]
          },
          "target": {
            "$ref": "#/components/schemas/protos.number.Target",
            "description": "The target for swap number.",
            "nullable": true,
            "type": "object"
          }
        },
        "required": [
          "target"
        ],
        "type": "object"
      },
      "protos.number.Target": {
        "properties": {
          "target_id": {
            "description": "The ID of the target to swap number.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "The type of the target.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "target_id",
          "target_type"
        ],
        "type": "object"
      },
      "protos.number.UnassignNumberMessage": {
        "properties": {
          "number": {
            "description": "A phone number to unassign. (e164-formatted)",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "number"
        ],
        "type": "object"
      },
      "protos.office.CreateOfficeMessage": {
        "properties": {
          "annual_commit_monthly_billing": {
            "description": "A flag indicating if the primary office's plan is categorized as annual commit monthly billing.",
            "nullable": true,
            "type": "boolean"
          },
          "auto_call_recording": {
            "default": false,
            "description": "Whether or not automatically record all calls of this office. Default is False.",
            "nullable": true,
            "type": "boolean"
          },
          "billing_address": {
            "$ref": "#/components/schemas/protos.plan.BillingContactMessage",
            "description": "The billing address of this created office.",
            "nullable": true,
            "type": "object"
          },
          "billing_contact": {
            "$ref": "#/components/schemas/protos.plan.BillingPointOfContactMessage",
            "description": "The billing contact information of this created office.",
            "nullable": true,
            "type": "object"
          },
          "country": {
            "description": "The office country.",
            "enum": [
              "AR",
              "AT",
              "AU",
              "BD",
              "BE",
              "BG",
              "BH",
              "BR",
              "CA",
              "CH",
              "CI",
              "CL",
              "CN",
              "CO",
              "CR",
              "CY",
              "CZ",
              "DE",
              "DK",
              "DO",
              "DP",
              "EC",
              "EE",
              "EG",
              "ES",
              "FI",
              "FR",
              "GB",
              "GH",
              "GR",
              "GT",
              "HK",
              "HR",
              "HU",
              "ID",
              "IE",
              "IL",
              "IN",
              "IS",
              "IT",
              "JP",
              "KE",
              "KH",
              "KR",
              "KZ",
              "LK",
              "LT",
              "LU",
              "LV",
              "MA",
              "MD",
              "MM",
              "MT",
              "MX",
              "MY",
              "NG",
              "NL",
              "NO",
              "NZ",
              "PA",
              "PE",
              "PH",
              "PK",
              "PL",
              "PR",
              "PT",
              "PY",
              "RO",
              "RU",
              "SA",
              "SE",
              "SG",
              "SI",
              "SK",
              "SV",
              "TH",
              "TR",
              "TW",
              "UA",
              "US",
              "UY",
              "VE",
              "VN",
              "ZA"
            ],
            "nullable": true,
            "type": "string"
          },
          "currency": {
            "description": "The office's billing currency.",
            "enum": [
              "AUD",
              "CAD",
              "EUR",
              "GBP",
              "JPY",
              "NZD",
              "USD"
            ],
            "nullable": true,
            "type": "string"
          },
          "e911_address": {
            "$ref": "#/components/schemas/protos.office.E911Message",
            "description": "The emergency address of the created office.\n\nRequired for country codes of US, CA, AU, FR, GB, NZ.",
            "nullable": true,
            "type": "object"
          },
          "first_action": {
            "description": "The desired action when the office receives a call.",
            "enum": [
              "menu",
              "operators"
            ],
            "nullable": true,
            "type": "string"
          },
          "friday_hours": {
            "description": "The Friday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "group_description": {
            "description": "The description of the office. Max 256 characters.",
            "nullable": true,
            "type": "string"
          },
          "hours_on": {
            "default": false,
            "description": "The time frame when the office wants to receive calls. Default value is false, which means the office will always take calls (24/7).",
            "nullable": true,
            "type": "boolean"
          },
          "international_enabled": {
            "description": "A flag indicating if the primary office is able to make international phone calls.",
            "nullable": true,
            "type": "boolean"
          },
          "invoiced": {
            "description": "A flag indicating if the payment will be paid by invoice.",
            "nullable": true,
            "type": "boolean"
          },
          "mainline_number": {
            "description": "The mainline of the office.",
            "nullable": true,
            "type": "string"
          },
          "monday_hours": {
            "description": "The Monday hours of operation. To specify when hours_on is set to True. e.g. [\"08:00\", \"12:00\", \"14:00\", \"18:00\"] => open from 8AM to Noon, and from 2PM to 6PM. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "[single-line only]\n\nThe office name.",
            "nullable": true,
            "type": "string"
          },
          "no_operators_action": {
            "description": "The action to take if there is no one available to answer calls.",
            "enum": [
              "bridge_target",
              "company_directory",
              "department",
              "directory",
              "disabled",
              "extension",
              "menu",
              "message",
              "operator",
              "person",
              "scripted_ivr",
              "voicemail"
            ],
            "nullable": true,
            "type": "string"
          },
          "plan_period": {
            "description": "The frequency at which the company will be billed.",
            "enum": [
              "monthly",
              "yearly"
            ],
            "nullable": true,
            "type": "string"
          },
          "ring_seconds": {
            "description": "The number of seconds to allow the group line to ring before going to voicemail. Choose from 10 seconds to 45 seconds.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "routing_options": {
            "$ref": "#/components/schemas/protos.group.RoutingOptions",
            "description": "Call routing options for this group.",
            "nullable": true,
            "type": "object"
          },
          "saturday_hours": {
            "description": "The Saturday hours of operation. Default is empty array.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "sunday_hours": {
            "description": "The Sunday hours of operation. Default is empty array.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "thursday_hours": {
            "description": "The Thursday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "timezone": {
            "description": "Timezone using a tz database name.",
            "nullable": true,
            "type": "string"
          },
          "tuesday_hours": {
            "description": "The Tuesday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "unified_billing": {
            "description": "A flag indicating if to send a unified invoice.",
            "nullable": true,
            "type": "boolean"
          },
          "use_same_address": {
            "description": "A flag indicating if the billing address and the emergency address are the same.",
            "nullable": true,
            "type": "boolean"
          },
          "voice_intelligence": {
            "$ref": "#/components/schemas/protos.group.VoiceIntelligence",
            "description": "Configure voice intelligence.",
            "nullable": true,
            "type": "object"
          },
          "wednesday_hours": {
            "description": "The Wednesday hours of operation. Default value is [\"08:00\", \"18:00\"].",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "annual_commit_monthly_billing",
          "billing_address",
          "country",
          "currency",
          "invoiced",
          "name",
          "plan_period",
          "unified_billing"
        ],
        "title": "Secondary Office creation.",
        "type": "object"
      },
      "protos.office.E911GetProto": {
        "properties": {
          "address": {
            "description": "[single-line only]\n\nLine 1 of the E911 address.",
            "nullable": true,
            "type": "string"
          },
          "address2": {
            "description": "[single-line only]\n\nLine 2 of the E911 address.",
            "nullable": true,
            "type": "string"
          },
          "city": {
            "description": "[single-line only]\n\nCity of the E911 address.",
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Country of the E911 address.",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "[single-line only]\n\nState or Province of the E911 address.",
            "nullable": true,
            "type": "string"
          },
          "zip": {
            "description": "[single-line only]\n\nZip code of the E911 address.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "E911 address.",
        "type": "object"
      },
      "protos.office.E911Message": {
        "properties": {
          "address": {
            "description": "[single-line only]\n\nLine 1 of the E911 address.",
            "nullable": true,
            "type": "string"
          },
          "address2": {
            "description": "[single-line only]\n\nLine 2 of the E911 address.",
            "nullable": true,
            "type": "string"
          },
          "city": {
            "description": "[single-line only]\n\nCity of the E911 address.",
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Country of the E911 address.",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "[single-line only]\n\nState or Province of the E911 address.",
            "nullable": true,
            "type": "string"
          },
          "zip": {
            "description": "[single-line only]\n\nZip code of the E911 address.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "address",
          "city",
          "country",
          "state",
          "zip"
        ],
        "title": "E911 address.",
        "type": "object"
      },
      "protos.office.E911UpdateMessage": {
        "properties": {
          "address": {
            "description": "[single-line only]\n\nLine 1 of the new E911 address.",
            "nullable": true,
            "type": "string"
          },
          "address2": {
            "default": "",
            "description": "[single-line only]\n\nLine 2 of the new E911 address.",
            "nullable": true,
            "type": "string"
          },
          "city": {
            "description": "[single-line only]\n\nCity of the new E911 address.",
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Country of the new E911 address.",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "[single-line only]\n\nState or Province of the new E911 address.",
            "nullable": true,
            "type": "string"
          },
          "update_all": {
            "description": "Update E911 for all users in this office.",
            "nullable": true,
            "type": "boolean"
          },
          "use_validated_option": {
            "description": "Whether to use the validated address option from our service.",
            "nullable": true,
            "type": "boolean"
          },
          "zip": {
            "description": "[single-line only]\n\nZip code of the new E911 address.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "address",
          "city",
          "country",
          "state",
          "zip"
        ],
        "type": "object"
      },
      "protos.office.OffDutyStatusesProto": {
        "properties": {
          "id": {
            "description": "The office ID.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "off_duty_statuses": {
            "description": "The off-duty statuses configured for this office.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Off-duty statuses.",
        "type": "object"
      },
      "protos.office.OfficeCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of results.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of offices.",
            "items": {
              "$ref": "#/components/schemas/protos.office.OfficeProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of offices.",
        "type": "object"
      },
      "protos.office.OfficeProto": {
        "properties": {
          "availability_status": {
            "description": "Availability status of the office.",
            "enum": [
              "closed",
              "holiday_closed",
              "holiday_open",
              "open"
            ],
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "The country in which the office is situated.",
            "nullable": true,
            "type": "string"
          },
          "e911_address": {
            "$ref": "#/components/schemas/protos.office.E911GetProto",
            "description": "The e911 address of the office.",
            "nullable": true,
            "type": "object"
          },
          "first_action": {
            "description": "The desired action when the office receives a call.",
            "enum": [
              "menu",
              "operators"
            ],
            "nullable": true,
            "type": "string"
          },
          "friday_hours": {
            "description": "The Friday hours of operation.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "The office's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "is_primary_office": {
            "description": "A flag indicating if the office is a primary office of its company.",
            "nullable": true,
            "type": "boolean"
          },
          "monday_hours": {
            "description": "The Monday hours of operation.\n(e.g. [\"08:00\", \"12:00\", \"14:00\", \"18:00\"] => open from 8AM to Noon, and from 2PM to 6PM.)",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "[single-line only]\n\nThe name of the office.",
            "nullable": true,
            "type": "string"
          },
          "no_operators_action": {
            "description": "The action to take if there is no one available to answer calls.",
            "enum": [
              "bridge_target",
              "company_directory",
              "department",
              "directory",
              "disabled",
              "extension",
              "menu",
              "message",
              "operator",
              "person",
              "scripted_ivr",
              "voicemail"
            ],
            "nullable": true,
            "type": "string"
          },
          "office_id": {
            "description": "The office's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "office_settings": {
            "$ref": "#/components/schemas/protos.office.OfficeSettings",
            "description": "Office-specific settings object.",
            "nullable": true,
            "type": "object"
          },
          "phone_numbers": {
            "description": "The phone number(s) assigned to this office.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "ring_seconds": {
            "description": "The number of seconds to ring the main line before going to voicemail.\n(or an other-wise-specified no_operators_action).",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "routing_options": {
            "$ref": "#/components/schemas/protos.group.RoutingOptions",
            "description": "Specific call routing action to take when the office is open or closed.",
            "nullable": true,
            "type": "object"
          },
          "saturday_hours": {
            "description": "The Saturday hours of operation.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "state": {
            "description": "The enablement-state of the office.",
            "enum": [
              "active",
              "cancelled",
              "deleted",
              "pending",
              "suspended"
            ],
            "nullable": true,
            "type": "string"
          },
          "sunday_hours": {
            "description": "The Sunday hours of operation.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "thursday_hours": {
            "description": "The Thursday hours of operation.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "timezone": {
            "description": "Timezone of the office.",
            "nullable": true,
            "type": "string"
          },
          "tuesday_hours": {
            "description": "The Tuesday hours of operation.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "wednesday_hours": {
            "description": "The Wednesday hours of operation.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Office.",
        "type": "object"
      },
      "protos.office.OfficeSettings": {
        "properties": {
          "allow_device_guest_login": {
            "description": "Allows guests to use desk phones within the office.",
            "nullable": true,
            "type": "boolean"
          },
          "block_caller_id_disabled": {
            "description": "Whether the block-caller-ID option is disabled.",
            "nullable": true,
            "type": "boolean"
          },
          "bridged_target_recording_allowed": {
            "description": "Whether recordings are enabled for sub-groups of this office.\n(e.g. departments or call centers).",
            "nullable": true,
            "type": "boolean"
          },
          "disable_desk_phone_self_provision": {
            "description": "Whether desk-phone self-provisioning is disabled.",
            "nullable": true,
            "type": "boolean"
          },
          "disable_ivr_voicemail": {
            "description": "Whether the default IVR voicemail feature is disabled.",
            "nullable": true,
            "type": "boolean"
          },
          "no_recording_message_on_user_calls": {
            "description": "Whether recording of user calls should be disabled.",
            "nullable": true,
            "type": "boolean"
          },
          "set_caller_id_disabled": {
            "description": "Whether the caller-ID option is disabled.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "protos.office.OfficeUpdateResponse": {
        "properties": {
          "office": {
            "$ref": "#/components/schemas/protos.office.OfficeProto",
            "description": "The updated office object.",
            "nullable": true,
            "type": "object"
          },
          "plan": {
            "$ref": "#/components/schemas/protos.plan.PlanProto",
            "description": "The updated office plan object.",
            "nullable": true,
            "type": "object"
          }
        },
        "title": "Office update.",
        "type": "object"
      },
      "protos.plan.AvailableLicensesProto": {
        "properties": {
          "additional_number_lines": {
            "description": "The number of additional-number lines allocated for this plan.\n\nadditional-number lines are consumed when multiple numbers are assigned to a target. i.e. if any callable entity has more than one direct number, one additional-number line is consumed for each number after the first number. This line type is available for all account types.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "contact_center_lines": {
            "description": "The number of contact-center lines allocated for this plan.\n\nContact-center lines are consumed for new users that can serve as call center agents, but does\n*not* include a primary number for the user. This line type is only available for pro and enterprise accounts.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "fax_lines": {
            "description": "The number of fax lines allocated for this plan.\n\nFax lines are consumed when a fax number is assigned to a user, office, department etc. Fax lines can be used with or without a physical fax machine, as received faxes are exposed as PDFs in the Dialpad app. This line type is available for all account types.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "room_lines": {
            "description": "The number of room lines allocated for this plan.\n\nRoom lines are consumed when a new room with a dedicated number is created. This line type is available for all account types.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "sell_lines": {
            "description": "The number of sell lines allocated for this plan.\n\nSell lines are consumed for new users that can serve as call center agents and includes a primary number for that user. This line type is only available for pro and enterprise accounts.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "talk_lines": {
            "description": "The number of talk lines allocated for this plan.\n\nTalk lines are consumed when a new user with a primary number is created. This line type is available for all account types, and does not include the ability for the user to be a call center agent.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "tollfree_additional_number_lines": {
            "description": "The number of toll-free-additional-number lines allocated for this plan.\n\nThese are functionally equivalent to additional-number lines, except that the number is a toll-free number. This line type is available for all account types.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "tollfree_room_lines": {
            "description": "The number of toll-free room lines allocated for this plan.\n\nThese are functionally equivalent to room lines, except that the room's primary number is a toll-free number (subsequent numbers for a given room will still consume additional-number/toll-free-additional-number lines rather than multiple room lines). This line type is available for all account types.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "tollfree_uberconference_lines": {
            "description": "The number of toll-free uberconference lines allocated for this plan.\n\nUberconference lines are consumed when a direct number is allocated for a User's uberconference room. This line type is available for all account types.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "uberconference_lines": {
            "description": "The number of uberconference lines available for this office.\n\nUberconference lines are consumed when a direct number is allocated for a User's uberconference room. This line type is available for all account types.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "Available licenses.",
        "type": "object"
      },
      "protos.plan.BillingContactMessage": {
        "properties": {
          "address_line_1": {
            "description": "[single-line only]\n\nThe first line of the billing address.",
            "nullable": true,
            "type": "string"
          },
          "address_line_2": {
            "description": "[single-line only]\n\nThe second line of the billing address.",
            "nullable": true,
            "type": "string"
          },
          "city": {
            "description": "[single-line only]\n\nThe billing address city.",
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "The billing address country.",
            "nullable": true,
            "type": "string"
          },
          "postal_code": {
            "description": "[single-line only]\n\nThe billing address postal code.",
            "nullable": true,
            "type": "string"
          },
          "region": {
            "description": "[single-line only]\n\nThe billing address region.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "address_line_1",
          "city",
          "country",
          "postal_code",
          "region"
        ],
        "title": "Billing contact.",
        "type": "object"
      },
      "protos.plan.BillingContactProto": {
        "properties": {
          "address_line_1": {
            "description": "[single-line only]\n\nThe first line of the billing address.",
            "nullable": true,
            "type": "string"
          },
          "address_line_2": {
            "description": "[single-line only]\n\nThe second line of the billing address.",
            "nullable": true,
            "type": "string"
          },
          "city": {
            "description": "[single-line only]\n\nThe billing address city.",
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "The billing address country.",
            "nullable": true,
            "type": "string"
          },
          "postal_code": {
            "description": "[single-line only]\n\nThe billing address postal code.",
            "nullable": true,
            "type": "string"
          },
          "region": {
            "description": "[single-line only]\n\nThe billing address region.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.plan.BillingPointOfContactMessage": {
        "properties": {
          "email": {
            "description": "The contact email.",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "[single-line only]\n\nThe contact name.",
            "nullable": true,
            "type": "string"
          },
          "phone": {
            "description": "The contact phone number.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "email",
          "name"
        ],
        "type": "object"
      },
      "protos.plan.PlanProto": {
        "properties": {
          "additional_number_lines": {
            "description": "The number of additional-number lines allocated for this plan.\n\nadditional-number lines are consumed when multiple numbers are assigned to a target. i.e. if any callable entity has more than one direct number, one additional-number line is consumed for each number after the first number. This line type is available for all account types.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "balance": {
            "description": "The remaining balance for this plan.\n\nThe balance will be expressed as string-encoded floating point values and will be provided in terms of USD.",
            "nullable": true,
            "type": "string"
          },
          "contact_center_lines": {
            "description": "The number of contact-center lines allocated for this plan.\n\nContact-center lines are consumed for new users that can serve as call center agents, but does\n*not* include a primary number for the user. This line type is only available for pro and enterprise accounts.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "fax_lines": {
            "description": "The number of fax lines allocated for this plan.\n\nFax lines are consumed when a fax number is assigned to a user, office, department etc. Fax lines can be used with or without a physical fax machine, as received faxes are exposed as PDFs in the Dialpad app. This line type is available for all account types.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "next_billing_date": {
            "description": "The UTC timestamp of the start of the next billing cycle.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "ppu_address": {
            "$ref": "#/components/schemas/protos.plan.BillingContactProto",
            "description": "The \"Place of Primary Use\" address.",
            "nullable": true,
            "type": "object"
          },
          "room_lines": {
            "description": "The number of room lines allocated for this plan.\n\nRoom lines are consumed when a new room with a dedicated number is created. This line type is available for all account types.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "sell_lines": {
            "description": "The number of sell lines allocated for this plan.\n\nSell lines are consumed for new users that can serve as call center agents and includes a primary number for that user. This line type is only available for pro and enterprise accounts.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "talk_lines": {
            "description": "The number of talk lines allocated for this plan.\n\nTalk lines are consumed when a new user with a primary number is created. This line type is available for all account types, and does not include the ability for the user to be a call center agent.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "tollfree_additional_number_lines": {
            "description": "The number of toll-free-additional-number lines allocated for this plan.\n\nThese are functionally equivalent to additional-number lines, except that the number is a toll-free number. This line type is available for all account types.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "tollfree_room_lines": {
            "description": "The number of toll-free room lines allocated for this plan.\n\nThese are functionally equivalent to room lines, except that the room's primary number is a toll-free number (subsequent numbers for a given room will still consume additional-number/toll-free-additional-number lines rather than multiple room lines). This line type is available for all account types.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "tollfree_uberconference_lines": {
            "description": "The number of toll-free uberconference lines allocated for this plan.\n\nUberconference lines are consumed when a direct number is allocated for a User's uberconference room. This line type is available for all account types.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "uberconference_lines": {
            "description": "The number of uberconference lines available for this office.\n\nUberconference lines are consumed when a direct number is allocated for a User's uberconference room. This line type is available for all account types.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "Billing plan.",
        "type": "object"
      },
      "protos.recording_share_link.CreateRecordingShareLink": {
        "properties": {
          "privacy": {
            "default": "owner",
            "description": "The privacy state of the recording share link.",
            "enum": [
              "admin",
              "company",
              "owner",
              "public"
            ],
            "nullable": true,
            "type": "string"
          },
          "recording_id": {
            "description": "The recording entity's ID.",
            "nullable": true,
            "type": "string"
          },
          "recording_type": {
            "description": "The type of the recording entity shared via the link.",
            "enum": [
              "admincallrecording",
              "callrecording",
              "voicemail"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "recording_id",
          "recording_type"
        ],
        "type": "object"
      },
      "protos.recording_share_link.RecordingShareLink": {
        "properties": {
          "access_link": {
            "description": "The access link where recording can be listened or downloaded.",
            "nullable": true,
            "type": "string"
          },
          "call_id": {
            "description": "The call's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "created_by_id": {
            "description": "The ID of the target who created the link.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "date_added": {
            "description": "The date when the recording share link is created.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The recording share link's ID.",
            "nullable": true,
            "type": "string"
          },
          "item_id": {
            "description": "The ID of the recording entity shared via the link.",
            "nullable": true,
            "type": "string"
          },
          "privacy": {
            "description": "The privacy state of the recording share link.",
            "enum": [
              "admin",
              "company",
              "owner",
              "public"
            ],
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of the recording entity shared via the link.",
            "enum": [
              "admincallrecording",
              "callrecording",
              "voicemail"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Recording share link.",
        "type": "object"
      },
      "protos.recording_share_link.UpdateRecordingShareLink": {
        "properties": {
          "privacy": {
            "description": "The privacy state of the recording share link.",
            "enum": [
              "admin",
              "company",
              "owner",
              "public"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "privacy"
        ],
        "type": "object"
      },
      "protos.room.CreateInternationalPinProto": {
        "properties": {
          "customer_ref": {
            "description": "[single-line only]\n\nAn identifier to be printed in the usage summary. Typically used for identifying the person who requested the PIN.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Input to create a PIN for protected international calls from room.",
        "type": "object"
      },
      "protos.room.CreateRoomMessage": {
        "properties": {
          "name": {
            "description": "[single-line only]\n\nThe name of the room.",
            "nullable": true,
            "type": "string"
          },
          "office_id": {
            "description": "The office in which this room resides.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "name",
          "office_id"
        ],
        "type": "object"
      },
      "protos.room.InternationalPinProto": {
        "properties": {
          "customer_ref": {
            "description": "[single-line only]\n\nAn identifier to be printed in the usage summary. Typically used for identifying the person who requested the PIN.",
            "nullable": true,
            "type": "string"
          },
          "expires_on": {
            "description": "A time after which the PIN will no longer be valid.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "pin": {
            "description": "A PIN that must be entered to make international calls.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Full response body for get pin operation.",
        "type": "object"
      },
      "protos.room.RoomCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of rooms.",
            "items": {
              "$ref": "#/components/schemas/protos.room.RoomProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of rooms.",
        "type": "object"
      },
      "protos.room.RoomProto": {
        "properties": {
          "company_id": {
            "description": "The ID of this room's company.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "country": {
            "description": "The country in which the room resides.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The ID of the room.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "image_url": {
            "description": "The profile image to use when displaying this room in the Dialpad app.",
            "nullable": true,
            "type": "string"
          },
          "is_free": {
            "description": "A boolean indicating whether this room is consuming a license with an associated cost.",
            "nullable": true,
            "type": "boolean"
          },
          "is_on_duty": {
            "description": "A boolean indicating whether this room is actively acting as an operator.",
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "[single-line only]\n\nThe name of the room.",
            "nullable": true,
            "type": "string"
          },
          "office_id": {
            "description": "The ID of this room's office.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "phone_numbers": {
            "description": "The phone numbers assigned to this room.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "state": {
            "description": "The current enablement state of this room.",
            "enum": [
              "active",
              "cancelled",
              "deleted",
              "pending",
              "suspended"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Room.",
        "type": "object"
      },
      "protos.room.UpdateRoomMessage": {
        "properties": {
          "name": {
            "description": "[single-line only]\n\nThe name of the room.",
            "nullable": true,
            "type": "string"
          },
          "phone_numbers": {
            "description": "A list of all phone numbers assigned to the room.\n\nNumbers can be re-ordered or removed from this list to unassign them.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "protos.schedule_reports.ProcessScheduleReportsMessage": {
        "properties": {
          "at": {
            "description": "Hour of the day when the report will execute considering the frequency and timezones between 0 and 23  e.g. 10 will be 10:00 am.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "coaching_group": {
            "default": false,
            "description": "Whether the the statistics should be for trainees of the coach group with the given target_id.",
            "nullable": true,
            "type": "boolean"
          },
          "enabled": {
            "default": true,
            "description": "Whether or not this schedule reports event subscription is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "endpoint_id": {
            "description": "The logging endpoint's ID, which is generated after creating a webhook or websocket successfully.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "frequency": {
            "description": "How often the report will execute.",
            "enum": [
              "daily",
              "monthly",
              "weekly"
            ],
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "[single-line only]\n\nThe name of the schedule reports.",
            "nullable": true,
            "type": "string"
          },
          "on_day": {
            "description": "The day of the week or month when the report will execute considering the frequency. daily=0, weekly=0-6, monthly=0-30.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "report_type": {
            "description": "The type of report that will be generated.",
            "enum": [
              "call_logs",
              "daily_statistics",
              "recordings",
              "user_statistics",
              "voicemails"
            ],
            "nullable": true,
            "type": "string"
          },
          "target_id": {
            "description": "The target's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "Target's type.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          },
          "timezone": {
            "description": "Timezone using a tz database name.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "at",
          "endpoint_id",
          "frequency",
          "name",
          "on_day",
          "report_type"
        ],
        "type": "object"
      },
      "protos.schedule_reports.ScheduleReportsCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of results.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of schedule reports.",
            "items": {
              "$ref": "#/components/schemas/protos.schedule_reports.ScheduleReportsStatusEventSubscriptionProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Schedule reports collection.",
        "type": "object"
      },
      "protos.schedule_reports.ScheduleReportsStatusEventSubscriptionProto": {
        "properties": {
          "at": {
            "description": "Hour of the day when the report will execute considering the frequency and timezones between 0 and 23  e.g. 10 will be 10:00 am.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "coaching_group": {
            "default": false,
            "description": "Whether the the statistics should be for trainees of the coach group with the given target_id.",
            "nullable": true,
            "type": "boolean"
          },
          "enabled": {
            "default": true,
            "description": "Whether or not the this agent status event subscription is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "frequency": {
            "description": "The frequency of the schedule reports.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The schedule reports subscription's ID, which is generated after creating an schedule reports subscription successfully.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "[single-line only]\n\nThe day to be send the schedule reports.",
            "nullable": true,
            "type": "string"
          },
          "on_day": {
            "description": "The day of the week or month when the report will execute considering the frequency. daily=0, weekly=0-6, monthly=0-30.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "report_type": {
            "description": "The report options filters.",
            "enum": [
              "call_logs",
              "daily_statistics",
              "recordings",
              "user_statistics",
              "voicemails"
            ],
            "nullable": true,
            "type": "string"
          },
          "target_id": {
            "description": "The target's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "Target's type.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "company",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          },
          "timezone": {
            "description": "Timezone using a tz database name.",
            "nullable": true,
            "type": "string"
          },
          "webhook": {
            "$ref": "#/components/schemas/protos.webhook.WebhookProto",
            "description": "The webhook's ID, which is generated after creating a webhook successfully.",
            "nullable": true,
            "type": "object"
          },
          "websocket": {
            "$ref": "#/components/schemas/protos.websocket.WebsocketProto",
            "description": "The websocket's ID, which is generated after creating a webhook successfully.",
            "nullable": true,
            "type": "object"
          }
        },
        "required": [
          "report_type"
        ],
        "title": "Schedule report status event subscription.",
        "type": "object"
      },
      "protos.screen_pop.InitiateScreenPopMessage": {
        "properties": {
          "screen_pop_uri": {
            "description": "The screen pop's url.\n\nMost Url should start with scheme name such as http or https. Be aware that url with userinfo subcomponent, such as\n\"https://username:password@www.example.com\" is not supported for security reasons. Launching native apps is also supported through a format such as \"customuri://domain.com\"",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "screen_pop_uri"
        ],
        "type": "object"
      },
      "protos.screen_pop.InitiateScreenPopResponse": {
        "properties": {
          "device": {
            "$ref": "#/components/schemas/protos.userdevice.UserDeviceProto",
            "description": "A device owned by the user.",
            "nullable": true,
            "type": "object"
          }
        },
        "title": "Screen pop initiation.",
        "type": "object"
      },
      "protos.signature.SignatureProto": {
        "properties": {
          "algo": {
            "description": "The hash algorithm used to compute the signature.",
            "nullable": true,
            "type": "string"
          },
          "secret": {
            "description": "[single-line only]\n\nThe secret string that will be used to sign the payload.",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The signature token type.\n\n(i.e. `jwt`)",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Signature settings.",
        "type": "object"
      },
      "protos.sms.SMSProto": {
        "properties": {
          "contact_id": {
            "description": "The ID of the specific contact which SMS should be sent to.",
            "nullable": true,
            "type": "string"
          },
          "created_date": {
            "description": "Date of SMS creation.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "device_type": {
            "description": "The device type.",
            "enum": [
              "android",
              "ata",
              "audiocodes",
              "c2t",
              "ciscompp",
              "dect",
              "dpmroom",
              "grandstream",
              "harness",
              "iframe_cti_extension",
              "iframe_front",
              "iframe_hubspot",
              "iframe_ms_teams",
              "iframe_open_cti",
              "iframe_salesforce",
              "iframe_service_titan",
              "iframe_zendesk",
              "ipad",
              "iphone",
              "mini",
              "mitel",
              "msteams",
              "native",
              "obi",
              "packaged_app",
              "polyandroid",
              "polycom",
              "proxy",
              "public_api",
              "salesforce",
              "sip",
              "tickiot",
              "web",
              "yealink"
            ],
            "nullable": true,
            "type": "string"
          },
          "direction": {
            "description": "SMS direction.",
            "enum": [
              "inbound",
              "outbound"
            ],
            "nullable": true,
            "type": "string"
          },
          "from_number": {
            "description": "The phone number from which the SMS was sent.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The ID of the SMS.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "message_delivery_result": {
            "description": "The final message delivery result.",
            "enum": [
              "accepted",
              "internal_error",
              "invalid_destination",
              "invalid_source",
              "no_route",
              "not_supported",
              "rejected",
              "rejected_spam",
              "time_out"
            ],
            "nullable": true,
            "type": "string"
          },
          "message_status": {
            "description": "The status of the SMS.",
            "enum": [
              "failed",
              "pending",
              "success"
            ],
            "nullable": true,
            "type": "string"
          },
          "target_id": {
            "description": "The target's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "Target's type.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          },
          "text": {
            "description": "The contents of the message that was sent.",
            "nullable": true,
            "type": "string"
          },
          "to_numbers": {
            "description": "Up to 10 E164-formatted phone numbers who received the SMS.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "user_id": {
            "description": "The ID of the user who sent the SMS.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "SMS message.",
        "type": "object"
      },
      "protos.sms.SendSMSMessage": {
        "properties": {
          "channel_hashtag": {
            "description": "[single-line only]\n\nThe hashtag of the channel which should receive the SMS.",
            "nullable": true,
            "type": "string"
          },
          "from_number": {
            "description": "The number of who sending the SMS. The number must be assigned to user or a user group. It will override user_id and sender_group_id.",
            "nullable": true,
            "type": "string"
          },
          "infer_country_code": {
            "default": false,
            "description": "If true, to_numbers will be assumed to be from the specified user's country, and the E164 format requirement will be relaxed.",
            "nullable": true,
            "type": "boolean"
          },
          "media": {
            "description": "Base64-encoded media attachment (will cause the message to be sent as MMS).\n(Max 500 KiB raw file size)",
            "format": "byte",
            "nullable": true,
            "type": "string"
          },
          "sender_group_id": {
            "description": "The ID of an office, department, or call center that the User should send the message on behalf of.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "sender_group_type": {
            "description": "The sender group's type (i.e. office, department, or callcenter).",
            "enum": [
              "callcenter",
              "department",
              "office"
            ],
            "nullable": true,
            "type": "string"
          },
          "text": {
            "default": "",
            "description": "The contents of the message that should be sent.",
            "nullable": true,
            "type": "string"
          },
          "to_numbers": {
            "description": "Up to 10 E164-formatted phone numbers who should receive the SMS.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "user_id": {
            "description": "The ID of the user who should be the sender of the SMS.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "protos.sms_event_subscription.CreateSmsEventSubscription": {
        "properties": {
          "direction": {
            "description": "The SMS direction this event subscription subscribes to.",
            "enum": [
              "all",
              "inbound",
              "outbound"
            ],
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "default": true,
            "description": "Whether or not the SMS event subscription is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "endpoint_id": {
            "description": "The logging endpoint's ID, which is generated after creating a webhook or websocket successfully.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "include_internal": {
            "default": false,
            "description": "Whether or not to trigger SMS events for SMS sent between two users from the same company.",
            "nullable": true,
            "type": "boolean"
          },
          "status": {
            "default": false,
            "description": "Whether or not to update on each SMS delivery status.",
            "nullable": true,
            "type": "boolean"
          },
          "target_id": {
            "description": "The ID of the specific target for which events should be sent.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "The target's type.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "direction"
        ],
        "type": "object"
      },
      "protos.sms_event_subscription.SmsEventSubscriptionCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of SMS event subscriptions.",
            "items": {
              "$ref": "#/components/schemas/protos.sms_event_subscription.SmsEventSubscriptionProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of sms event subscriptions.",
        "type": "object"
      },
      "protos.sms_event_subscription.SmsEventSubscriptionProto": {
        "properties": {
          "direction": {
            "description": "The SMS direction this event subscription subscribes to.",
            "enum": [
              "all",
              "inbound",
              "outbound"
            ],
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "default": true,
            "description": "Whether or not the SMS event subscription is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "id": {
            "description": "The ID of the SMS event subscription.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "include_internal": {
            "default": false,
            "description": "Whether or not to trigger SMS events for SMS sent between two users from the same company.",
            "nullable": true,
            "type": "boolean"
          },
          "status": {
            "default": false,
            "description": "Whether or not to update on each SMS delivery status.",
            "nullable": true,
            "type": "boolean"
          },
          "target_id": {
            "description": "The ID of the specific target for which events should be sent.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "The target's type.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          },
          "webhook": {
            "$ref": "#/components/schemas/protos.webhook.WebhookProto",
            "description": "The webhook that's associated with this event subscription.",
            "nullable": true,
            "type": "object"
          },
          "websocket": {
            "$ref": "#/components/schemas/protos.websocket.WebsocketProto",
            "description": "The websocket's ID, which is generated after creating a webhook successfully.",
            "nullable": true,
            "type": "object"
          }
        },
        "type": "object"
      },
      "protos.sms_event_subscription.UpdateSmsEventSubscription": {
        "properties": {
          "direction": {
            "description": "The SMS direction this event subscription subscribes to.",
            "enum": [
              "all",
              "inbound",
              "outbound"
            ],
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "default": true,
            "description": "Whether or not the SMS event subscription is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "endpoint_id": {
            "description": "The logging endpoint's ID, which is generated after creating a webhook or websocket successfully. If you plan to pair this event subscription with another logging endpoint,\nplease provide a valid webhook ID here.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "include_internal": {
            "default": false,
            "description": "Whether or not to trigger SMS events for SMS sent between two users from the same company.",
            "nullable": true,
            "type": "boolean"
          },
          "status": {
            "default": false,
            "description": "Whether or not to update on each SMS delivery status.",
            "nullable": true,
            "type": "boolean"
          },
          "target_id": {
            "description": "The ID of the specific target for which events should be sent.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "The target's type.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.sms_opt_out.OptOutScopeInfo": {
        "description": "Note, this info should be present for a particular entry in the result set if and only if the given external endpoint is actually opted out (i.e. see OptOutState.opted_out documentation); in other words, this does not apply for results in the 'opted_back_in' state.",
        "properties": {
          "opt_out_scope_level": {
            "description": "Scope level that the external endpoint is opted out of.",
            "enum": [
              "a2p_campaign",
              "company"
            ],
            "nullable": true,
            "type": "string"
          },
          "scope_id": {
            "description": "Unique ID of the scope entity (Company or A2P Campaign).\n\nNote, this refers to the ID assigned to this entity by Dialpad, as opposed to the TCR-assigned id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "opt_out_scope_level",
          "scope_id"
        ],
        "title": "Description of the opt-out scope.",
        "type": "object"
      },
      "protos.sms_opt_out.SmsOptOutEntryProto": {
        "properties": {
          "date": {
            "description": "An optional timestamp in (milliseconds-since-epoch UTC format) representing the time at which the given external endpoint transitioned to the opt_out_state.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "external_endpoint": {
            "description": "An E.164-formatted DID representing the 'external endpoint' used to contact the 'external user'\n.",
            "nullable": true,
            "type": "string"
          },
          "opt_out_scope_info": {
            "$ref": "#/components/schemas/protos.sms_opt_out.OptOutScopeInfo",
            "description": "Description of the scope of communications that this external endpoint is opted out from.\n\nAs explained in the OptOutScopeInfo documentation, this must be provided if this list entry describes an endpoint that is opted out of some scope (indicated by the value of 'opt_out_state'). If the 'opt_out_state' for this entry is not 'opted_out', then this parameter will be excluded entirely or set to a null value.\n\nFor SMS opt-out-import requests: in the A2P-campaign-scope case, opt_out_scope_info.id must refer to the id of a valid, registered A2P campaign entity owned by this company. In the company-scope case, opt_out_scope_info.id must be set to the company id.",
            "nullable": true,
            "type": "object"
          },
          "opt_out_state": {
            "description": "Opt-out state for this entry in the list.",
            "enum": [
              "opted_back_in",
              "opted_out"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "external_endpoint",
          "opt_out_state"
        ],
        "title": "Individual sms-opt-out list entry.",
        "type": "object"
      },
      "protos.sms_opt_out.SmsOptOutListProto": {
        "properties": {
          "cursor": {
            "description": "A token that can be used to return the next page of results, if there are any remaining; to fetch the next page, the requester must pass this value as an argument in a new request.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "List of sms opt-out entries.",
            "items": {
              "$ref": "#/components/schemas/protos.sms_opt_out.SmsOptOutEntryProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "A list of sms-opt-out entries to be returned in the API response.",
        "type": "object"
      },
      "protos.stats.ProcessStatsMessage": {
        "properties": {
          "coaching_group": {
            "description": "Whether or not the the statistics should be for trainees of the coach group with the given target_id.",
            "nullable": true,
            "type": "boolean"
          },
          "coaching_team": {
            "description": "Whether or not the the statistics should be for trainees of the coach team with the given target_id.",
            "nullable": true,
            "type": "boolean"
          },
          "days_ago_end": {
            "default": 30,
            "description": "End of the date range to get statistics for.\n\nThis is the number of days to look back relative to the current day. Used in conjunction with days_ago_start to specify a range.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "days_ago_start": {
            "default": 1,
            "description": "Start of the date range to get statistics for.\n\nThis is the number of days to look back relative to the current day. Used in conjunction with days_ago_end to specify a range.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "export_type": {
            "description": "Whether to return aggregated statistics (stats), or individual rows for each record (records).\n\nNOTE: For stat_type \"csat\" or \"dispositions\", only \"records\" is supported.",
            "enum": [
              "records",
              "stats"
            ],
            "nullable": true,
            "type": "string"
          },
          "group_by": {
            "description": "This param is only applicable when the stat_type is specified as call. For call stats, group calls by user per day (default), get total metrics by day, or break down by department and call center (office only).",
            "enum": [
              "date",
              "group",
              "user"
            ],
            "nullable": true,
            "type": "string"
          },
          "is_today": {
            "description": "Whether or not the statistics are for the current day.\n\nNOTE: days_ago_start and days_ago_end are ignored if this is passed in.",
            "nullable": true,
            "type": "boolean"
          },
          "office_id": {
            "description": "ID of the office to get statistics for.\n\nIf a target_id and target_type are passed in this value is ignored and instead the target is used.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "stat_type": {
            "description": "The type of statistics to be returned.\n\nNOTE: if the value is \"csat\" or \"dispositions\", target_id and target_type must be specified.",
            "enum": [
              "calls",
              "csat",
              "dispositions",
              "onduty",
              "recordings",
              "screenshare",
              "texts",
              "voicemails"
            ],
            "nullable": true,
            "type": "string"
          },
          "target_id": {
            "description": "The target's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "target_type": {
            "description": "Target's type.",
            "enum": [
              "callcenter",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          },
          "timezone": {
            "default": "UTC",
            "description": "Timezone using a tz database name.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "export_type",
          "stat_type"
        ],
        "type": "object"
      },
      "protos.stats.ProcessingProto": {
        "properties": {
          "already_started": {
            "description": "A boolean indicating whether this request has already begun processing.",
            "nullable": true,
            "type": "boolean"
          },
          "request_id": {
            "description": "The processing request ID.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Processing status.",
        "type": "object"
      },
      "protos.stats.StatsProto": {
        "properties": {
          "download_url": {
            "description": "The URL of the resulting stats file.",
            "nullable": true,
            "type": "string"
          },
          "file_type": {
            "description": "The file format of the resulting stats file.",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "The current status of the processing request.",
            "enum": [
              "complete",
              "failed",
              "processing"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Stats export.",
        "type": "object"
      },
      "protos.transcript.TranscriptLineProto": {
        "properties": {
          "contact_id": {
            "description": "The ID of the contact who was speaking.",
            "nullable": true,
            "type": "string"
          },
          "content": {
            "description": "The transcribed text.",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the call participant who was speaking.",
            "nullable": true,
            "type": "string"
          },
          "time": {
            "description": "The time at which the line was spoken.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Either \"moment\" or \"transcript\".",
            "enum": [
              "ai_question",
              "custom_moment",
              "moment",
              "real_time_moment",
              "transcript"
            ],
            "nullable": true,
            "type": "string"
          },
          "user_id": {
            "description": "The ID of the user who was speaking.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "Transcript line.",
        "type": "object"
      },
      "protos.transcript.TranscriptProto": {
        "properties": {
          "call_id": {
            "description": "The call's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "lines": {
            "description": "An array of individual lines of the transcript.",
            "items": {
              "$ref": "#/components/schemas/protos.transcript.TranscriptLineProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Transcript.",
        "type": "object"
      },
      "protos.transcript.TranscriptUrlProto": {
        "properties": {
          "call_id": {
            "description": "The call's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "url": {
            "description": "The url with which the call transcript can be accessed.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Transcript URL.",
        "type": "object"
      },
      "protos.uberconference.meeting.MeetingParticipantProto": {
        "properties": {
          "call_in_method": {
            "description": "The method this participant used to joined the meeting.",
            "nullable": true,
            "type": "string"
          },
          "display_name": {
            "description": "Name of the meeting participant.",
            "nullable": true,
            "type": "string"
          },
          "email": {
            "description": "The email address of the participant. (if applicable)",
            "nullable": true,
            "type": "string"
          },
          "is_organizer": {
            "description": "Whether or not the participant is the meeting's organizer.",
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the meeting participant.",
            "nullable": true,
            "type": "string"
          },
          "phone": {
            "description": "The number that the participant dialed in from. (if applicable)",
            "nullable": true,
            "type": "string"
          },
          "phone_number": {
            "description": "The number that the participant dialed in from. (if applicable)",
            "nullable": true,
            "type": "string"
          },
          "talk_time": {
            "description": "The amount of time this participant was speaking. (in milliseconds)",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "Public API representation of an UberConference meeting participant.",
        "type": "object"
      },
      "protos.uberconference.meeting.MeetingRecordingProto": {
        "properties": {
          "size": {
            "description": "Human-readable size of the recording files. (e.g. 14.3MB)",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The URL of the audio recording of the meeting.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Public API representation of an UberConference meeting recording.",
        "type": "object"
      },
      "protos.uberconference.meeting.MeetingSummaryCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request.\n\nUse the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of meeting summaries.",
            "items": {
              "$ref": "#/components/schemas/protos.uberconference.meeting.MeetingSummaryProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of rooms for get all room operations.",
        "type": "object"
      },
      "protos.uberconference.meeting.MeetingSummaryProto": {
        "properties": {
          "duration_ms": {
            "description": "The duration of the meeting in milliseconds.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "end_time": {
            "description": "The time at which the meeting was ended. (ISO-8601 format)",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "host_name": {
            "description": "The name of the host of the meeting.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The ID of the meeting.",
            "nullable": true,
            "type": "string"
          },
          "participants": {
            "description": "The list of users that participated in the meeting.",
            "items": {
              "$ref": "#/components/schemas/protos.uberconference.meeting.MeetingParticipantProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "recordings": {
            "description": "A list of recordings from the meeting.",
            "items": {
              "$ref": "#/components/schemas/protos.uberconference.meeting.MeetingRecordingProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "room_id": {
            "description": "The ID of the conference room in which the meeting took place.",
            "nullable": true,
            "type": "string"
          },
          "start_time": {
            "description": "The time at which the first participant joined the meeting. (ISO-8601 format)",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "title": {
            "description": "The name of the meeting.",
            "nullable": true,
            "type": "string"
          },
          "transcript_url": {
            "description": "The URL of the meeting transcript.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Public API representation of an UberConference meeting.",
        "type": "object"
      },
      "protos.uberconference.room.RoomCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request.\n\nUse the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of meeting rooms.",
            "items": {
              "$ref": "#/components/schemas/protos.uberconference.room.RoomProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of rooms for get all room operations.",
        "type": "object"
      },
      "protos.uberconference.room.RoomProto": {
        "properties": {
          "company_name": {
            "description": "The name of the company that owns the room.",
            "nullable": true,
            "type": "string"
          },
          "display_name": {
            "description": "The name of the room.",
            "nullable": true,
            "type": "string"
          },
          "email": {
            "description": "The email associated with the room owner.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The ID of the meeting room.",
            "nullable": true,
            "type": "string"
          },
          "number": {
            "description": "The e164-formatted dial-in number for the room.",
            "nullable": true,
            "type": "string"
          },
          "path": {
            "description": "The access URL for the meeting room.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Public API representation of an UberConference room.",
        "type": "object"
      },
      "protos.user.CreateUserMessage": {
        "properties": {
          "auto_assign": {
            "default": false,
            "description": "If set to true, a number will be automatically assigned.",
            "nullable": true,
            "type": "boolean"
          },
          "email": {
            "description": "The user's email.",
            "nullable": true,
            "type": "string"
          },
          "first_name": {
            "description": "[single-line only]\n\nThe user's first name.",
            "nullable": true,
            "type": "string"
          },
          "last_name": {
            "description": "[single-line only]\n\nThe user's last name.",
            "nullable": true,
            "type": "string"
          },
          "license": {
            "default": "talk",
            "description": "The user's license type. This affects billing for the user.",
            "enum": [
              "admins",
              "agents",
              "dpde_all",
              "dpde_one",
              "lite_lines",
              "lite_support_agents",
              "magenta_lines",
              "talk"
            ],
            "nullable": true,
            "type": "string"
          },
          "office_id": {
            "description": "The user's office id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "email",
          "office_id"
        ],
        "type": "object"
      },
      "protos.user.E911UpdateMessage": {
        "properties": {
          "address": {
            "description": "[single-line only]\n\nLine 1 of the new E911 address.",
            "nullable": true,
            "type": "string"
          },
          "address2": {
            "default": "",
            "description": "[single-line only]\n\nLine 2 of the new E911 address.",
            "nullable": true,
            "type": "string"
          },
          "city": {
            "description": "[single-line only]\n\nCity of the new E911 address.",
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Country of the new E911 address.",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "[single-line only]\n\nState or Province of the new E911 address.",
            "nullable": true,
            "type": "string"
          },
          "use_validated_option": {
            "description": "Whether to use the validated address option from our service.",
            "nullable": true,
            "type": "boolean"
          },
          "zip": {
            "description": "[single-line only]\n\nZip of the new E911 address.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "address",
          "city",
          "country",
          "state",
          "zip"
        ],
        "type": "object"
      },
      "protos.user.GroupDetailsProto": {
        "properties": {
          "do_not_disturb": {
            "description": "Whether the user is currently in do-not-disturb mode for this group.",
            "nullable": true,
            "type": "boolean"
          },
          "group_id": {
            "description": "The ID of the group.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "group_type": {
            "description": "The group type.",
            "enum": [
              "callcenter",
              "callrouter",
              "channel",
              "coachinggroup",
              "coachingteam",
              "department",
              "office",
              "room",
              "staffgroup",
              "unknown",
              "user"
            ],
            "nullable": true,
            "type": "string"
          },
          "role": {
            "description": "The user's role in the group.",
            "enum": [
              "admin",
              "operator",
              "supervisor"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.user.MoveOfficeMessage": {
        "properties": {
          "office_id": {
            "description": "The user's office id. When provided, the user will be moved to this office.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "protos.user.PersonaCollection": {
        "properties": {
          "items": {
            "description": "A list of user personas.",
            "items": {
              "$ref": "#/components/schemas/protos.user.PersonaProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of personas.",
        "type": "object"
      },
      "protos.user.PersonaProto": {
        "properties": {
          "caller_id": {
            "description": "Persona caller ID shown to receivers of calls from this persona.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The user's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "image_url": {
            "description": "Persona image URL.",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "[single-line only]\n\nPersona name.",
            "nullable": true,
            "type": "string"
          },
          "phone_numbers": {
            "description": "List of persona phone numbers.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "type": {
            "description": "Persona type.\n\n(corresponds to a target type)",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Persona.",
        "type": "object"
      },
      "protos.user.PresenceStatus": {
        "properties": {
          "message": {
            "description": "The presence status message to be updated.",
            "nullable": true,
            "type": "string"
          },
          "provider": {
            "description": "The provider requesting the presence status update.",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Predefined templates will be only used for the supported types.\n\nAccepts the following types:\n- `default` -- status message template: \"{provider}: {message}\"\n- `conference` -- status message template: \"On {provider}: in the {message} meeting\"\n\n`provider` and `message` should be chosen with the message template in mind.",
            "enum": [
              "conference",
              "default"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.user.SetStatusMessage": {
        "properties": {
          "expiration": {
            "description": "The expiration of this status. None for no expiration.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "status_message": {
            "description": "The status message for the user.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.user.SetStatusProto": {
        "properties": {
          "expiration": {
            "description": "The expiration of this status. None for no expiration.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "The user's id.\n\n('me' can be used if you are using a user level API key)",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "status_message": {
            "description": "The status message for the user.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Set user status.",
        "type": "object"
      },
      "protos.user.ToggleDNDMessage": {
        "properties": {
          "do_not_disturb": {
            "description": "Determines if DND is ON or OFF.",
            "nullable": true,
            "type": "boolean"
          },
          "group_id": {
            "description": "The ID of the group which the user's DND status will be updated for.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "group_type": {
            "description": "The type of the group which the user's DND status will be updated for.",
            "enum": [
              "callcenter",
              "department",
              "office"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "do_not_disturb"
        ],
        "type": "object"
      },
      "protos.user.ToggleDNDProto": {
        "properties": {
          "do_not_disturb": {
            "description": "Boolean to tell if the user is on DND.",
            "nullable": true,
            "type": "boolean"
          },
          "group_id": {
            "description": "The ID of the group which the user's DND status will be updated for.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "group_type": {
            "description": "The type of the group which the user's DND status will be updated for.",
            "enum": [
              "callcenter",
              "department",
              "office"
            ],
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The user's id.\n\n('me' can be used if you are using a user level API key)",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "DND toggle.",
        "type": "object"
      },
      "protos.user.UpdateUserMessage": {
        "properties": {
          "admin_office_ids": {
            "description": "The list of admin office IDs.\n\nThis is used to set the user as an office admin for the offices with the provided IDs.",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "emails": {
            "description": "The user's emails.\n\nThis can be used to add, remove, or re-order emails. The first email in the list is the user's primary email.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "extension": {
            "description": "The user's new extension number.\n\nExtensions are optional in Dialpad and turned off by default. If you want extensions please contact support to enable them.",
            "nullable": true,
            "type": "string"
          },
          "first_name": {
            "description": "[single-line only]\n\nThe user's first name.",
            "nullable": true,
            "type": "string"
          },
          "forwarding_numbers": {
            "description": "A list of phone numbers that should be dialed in addition to the user's Dialpad number(s)\nupon receiving a call.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "international_dialing_enabled": {
            "description": "Whether or not the user is enabled to dial internationally.",
            "nullable": true,
            "type": "boolean"
          },
          "is_super_admin": {
            "description": "Whether or not the user is a super admin. (company level administrator)",
            "nullable": true,
            "type": "boolean"
          },
          "job_title": {
            "description": "[single-line only]\n\nThe user's job title.",
            "nullable": true,
            "type": "string"
          },
          "keep_paid_numbers": {
            "default": true,
            "description": "Whether or not to keep phone numbers when switching to a support license.\n\nNote: Phone numbers require additional number licenses under a support license.",
            "nullable": true,
            "type": "boolean"
          },
          "last_name": {
            "description": "[single-line only]\n\nThe user's last name.",
            "nullable": true,
            "type": "string"
          },
          "license": {
            "description": "The user's license type.\n\nChanging this affects billing for the user. For a Sell license, specify the type as `agents`. For a Support license, specify the type as `support`.",
            "enum": [
              "admins",
              "agents",
              "dpde_all",
              "dpde_one",
              "lite_lines",
              "lite_support_agents",
              "magenta_lines",
              "talk"
            ],
            "nullable": true,
            "type": "string"
          },
          "office_id": {
            "description": "The user's office id.\n\nIf provided, the user will be moved to this office. For international offices, the user must not have phone numbers assigned. Once the transfer is complete, your admin can add the phone numbers via the user assign number API. Only supported on paid accounts and there must be enough licenses to transfer the user to the destination office.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "phone_numbers": {
            "description": "A list of the phone number(s) assigned to this user.\n\nThis can be used to re-order or remove numbers. To assign a new number, use the assign number API instead.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "presence_status": {
            "$ref": "#/components/schemas/protos.user.PresenceStatus",
            "description": "The presence status can be seen when you hover your mouse over the presence state indicator.\n\nNOTE: this is only used for Highfive and will be deprecated soon.\n\nPresence status will be set to \"{provider}: {message}\" when both are provided. Otherwise,\npresence status will be set to \"{provider}\".\n\n\"type\" is optional and presence status will only include predefined templates when \"type\" is provided. Please refer to the \"type\" parameter to check the supported types.\n\nTo clear the presence status, make an api call with the \"presence_status\" param set to empty or null. ex: `\"presence_status\": {}` or `\"presence_status\": null`\n\nTranslations will be available for the text in predefined templates. Translations for others should be provided.",
            "nullable": true,
            "type": "object"
          },
          "state": {
            "description": "The user's state.\n\nThis is used to suspend or re-activate a user.",
            "enum": [
              "active",
              "suspended"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.user.UserCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of users.",
            "items": {
              "$ref": "#/components/schemas/protos.user.UserProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of users.",
        "type": "object"
      },
      "protos.user.UserProto": {
        "properties": {
          "admin_office_ids": {
            "description": "A list of office IDs for which this user has admin privilages.",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "company_id": {
            "description": "The id of the user's company.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "country": {
            "description": "The country in which the user resides.",
            "nullable": true,
            "type": "string"
          },
          "date_active": {
            "description": "The date when the user activated their Dialpad account.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_added": {
            "description": "A timestamp indicating when this user was created.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_first_login": {
            "description": "A timestamp indicating the first time that this user logged in to Dialpad.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "display_name": {
            "description": "The user's name, for display purposes.",
            "nullable": true,
            "type": "string"
          },
          "do_not_disturb": {
            "description": "A boolean indicating whether the user is currently in \"Do not disturb\" mode.",
            "nullable": true,
            "type": "boolean"
          },
          "duty_status_reason": {
            "description": "[single-line only]\n\nA description of this status.",
            "nullable": true,
            "type": "string"
          },
          "duty_status_started": {
            "description": "The timestamp, in UTC, when the current on duty status changed.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "emails": {
            "description": "A list of email addresses belonging to this user.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "extension": {
            "description": "The extension that should be associated with this user in the company or office IVR directory.",
            "nullable": true,
            "type": "string"
          },
          "first_name": {
            "description": "[single-line only]\n\nThe given name of the user.",
            "nullable": true,
            "type": "string"
          },
          "forwarding_numbers": {
            "description": "A list of phone numbers that should be dialed in addition to the user's Dialpad number(s)\nupon receiving a call.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "group_details": {
            "description": "Details regarding the groups that this user is a member of.",
            "items": {
              "$ref": "#/components/schemas/protos.user.GroupDetailsProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "The user's id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "image_url": {
            "description": "The url of the user's profile image.",
            "nullable": true,
            "type": "string"
          },
          "international_dialing_enabled": {
            "description": "Whether or not the user is enabled to dial internationally.",
            "nullable": true,
            "type": "boolean"
          },
          "is_admin": {
            "description": "A boolean indicating whether this user has administor privilages.",
            "nullable": true,
            "type": "boolean"
          },
          "is_available": {
            "description": "A boolean indicating whether the user is not currently on a call.",
            "nullable": true,
            "type": "boolean"
          },
          "is_on_duty": {
            "description": "A boolean indicating whether this user is currently acting as an operator.",
            "nullable": true,
            "type": "boolean"
          },
          "is_online": {
            "description": "A boolean indicating whether the user currently has an active Dialpad device.",
            "nullable": true,
            "type": "boolean"
          },
          "is_super_admin": {
            "description": "A boolean indicating whether this user has company-wide administor privilages.",
            "nullable": true,
            "type": "boolean"
          },
          "job_title": {
            "description": "[single-line only]\n\nThe user's job title.",
            "nullable": true,
            "type": "string"
          },
          "language": {
            "description": "The preferred spoken language of the user.",
            "nullable": true,
            "type": "string"
          },
          "last_name": {
            "description": "[single-line only]\n\nThe family name of the user.",
            "nullable": true,
            "type": "string"
          },
          "license": {
            "description": "The license type that has been allocated to this user.",
            "enum": [
              "admins",
              "agents",
              "dpde_all",
              "dpde_one",
              "lite_lines",
              "lite_support_agents",
              "magenta_lines",
              "talk"
            ],
            "nullable": true,
            "type": "string"
          },
          "location": {
            "description": "[single-line only]\n\nThe self-reported location of the user.",
            "nullable": true,
            "type": "string"
          },
          "muted": {
            "description": "A boolean indicating whether the user has muted thier microphone.",
            "nullable": true,
            "type": "boolean"
          },
          "office_id": {
            "description": "The ID of the user's office.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "on_duty_started": {
            "description": "The timestamp, in UTC, when this operator became available for contact center calls.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "on_duty_status": {
            "description": "A description of operator's on duty status.",
            "enum": [
              "available",
              "busy",
              "occupied",
              "occupied-end",
              "unavailable",
              "wrapup",
              "wrapup-end"
            ],
            "nullable": true,
            "type": "string"
          },
          "phone_numbers": {
            "description": "A list of phone numbers belonging to this user.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "state": {
            "description": "The current enablement state of the user.",
            "enum": [
              "active",
              "cancelled",
              "deleted",
              "pending",
              "suspended"
            ],
            "nullable": true,
            "type": "string"
          },
          "status_message": {
            "description": "[single-line only]\n\nA message indicating the activity that the user is currently engaged in.",
            "nullable": true,
            "type": "string"
          },
          "timezone": {
            "description": "The timezone that this user abides by.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "User.",
        "type": "object"
      },
      "protos.userdevice.UserDeviceCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request.\n\nUse the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of user devices.",
            "items": {
              "$ref": "#/components/schemas/protos.userdevice.UserDeviceProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of user devices.",
        "type": "object"
      },
      "protos.userdevice.UserDeviceProto": {
        "properties": {
          "app_version": {
            "description": "The device firmware version, or Dialpad app version.",
            "nullable": true,
            "type": "string"
          },
          "date_created": {
            "description": "The time at which this device was created.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_registered": {
            "description": "The most recent time at which the device registered with the backend.\n\nDevices register with the backend roughly once per hour, with the exception of mobile devices\n(iphone, ipad, android) for which this field will always be blank.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_updated": {
            "description": "The most recent time at which the device data was modified.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "display_name": {
            "description": "[single-line only]\n\nThe name of this device.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The ID of the device.",
            "nullable": true,
            "type": "string"
          },
          "phone_number": {
            "description": "The phone number associated with this device.",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The device type.",
            "enum": [
              "android",
              "ata",
              "audiocodes",
              "c2t",
              "ciscompp",
              "dect",
              "dpmroom",
              "grandstream",
              "harness",
              "iframe_cti_extension",
              "iframe_front",
              "iframe_hubspot",
              "iframe_ms_teams",
              "iframe_open_cti",
              "iframe_salesforce",
              "iframe_service_titan",
              "iframe_zendesk",
              "ipad",
              "iphone",
              "mini",
              "mitel",
              "msteams",
              "native",
              "obi",
              "packaged_app",
              "polyandroid",
              "polycom",
              "proxy",
              "public_api",
              "salesforce",
              "sip",
              "tickiot",
              "web",
              "yealink"
            ],
            "nullable": true,
            "type": "string"
          },
          "user_id": {
            "description": "The ID of the user who owns the device.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "Dialpad user device.",
        "type": "object"
      },
      "protos.webhook.CreateWebhook": {
        "properties": {
          "hook_url": {
            "description": "The webhook's URL. Triggered events will be sent to the url provided here.",
            "nullable": true,
            "type": "string"
          },
          "secret": {
            "description": "[single-line only]\n\nWebhook's signature secret that's used to confirm the validity of the request.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "hook_url"
        ],
        "type": "object"
      },
      "protos.webhook.UpdateWebhook": {
        "properties": {
          "hook_url": {
            "description": "The webhook's URL. Triggered events will be sent to the url provided here.",
            "nullable": true,
            "type": "string"
          },
          "secret": {
            "description": "[single-line only]\n\nWebhook's signature secret that's used to confirm the validity of the request.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.webhook.WebhookCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of webhook objects.",
            "items": {
              "$ref": "#/components/schemas/protos.webhook.WebhookProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of webhooks.",
        "type": "object"
      },
      "protos.webhook.WebhookProto": {
        "properties": {
          "hook_url": {
            "description": "The webhook's URL. Triggered events will be sent to the url provided here.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The webhook's ID, which is generated after creating a webhook successfully.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "signature": {
            "$ref": "#/components/schemas/protos.signature.SignatureProto",
            "description": "Webhook's signature containing the secret.",
            "nullable": true,
            "type": "object"
          }
        },
        "title": "Webhook.",
        "type": "object"
      },
      "protos.websocket.CreateWebsocket": {
        "properties": {
          "secret": {
            "description": "[single-line only]\n\nWebsocket's signature secret that's used to confirm the validity of the request.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.websocket.UpdateWebsocket": {
        "properties": {
          "secret": {
            "description": "[single-line only]\n\nWebsocket's signature secret that's used to confirm the validity of the request.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "protos.websocket.WebsocketCollection": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of websocket objects.",
            "items": {
              "$ref": "#/components/schemas/protos.websocket.WebsocketProto",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Collection of webhooks.",
        "type": "object"
      },
      "protos.websocket.WebsocketProto": {
        "properties": {
          "id": {
            "description": "The webhook's ID, which is generated after creating a webhook successfully.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "signature": {
            "$ref": "#/components/schemas/protos.signature.SignatureProto",
            "description": "Webhook's signature containing the secret.",
            "nullable": true,
            "type": "object"
          },
          "websocket_url": {
            "description": "The websocket's URL. Users need to connect to this url to get event payloads via websocket.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Websocket.",
        "type": "object"
      },
      "protos.wfm.metrics.ActivityMetrics": {
        "properties": {
          "activity": {
            "$ref": "#/components/schemas/protos.wfm.metrics.ActivityType",
            "description": "The activity this metrics data represents.",
            "nullable": true,
            "type": "object"
          },
          "adherence_score": {
            "description": "The agent's schedule adherence score (as a percentage).",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "average_conversation_time": {
            "description": "The average time spent on each conversation in minutes.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "average_interaction_time": {
            "description": "The average time spent on each interaction in minutes.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "conversations_closed": {
            "description": "The number of conversations closed during this period.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "conversations_closed_per_hour": {
            "description": "The rate of conversation closure per hour.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "conversations_commented_on": {
            "description": "The number of conversations commented on during this period.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "conversations_on_hold": {
            "description": "The number of conversations placed on hold during this period.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "conversations_opened": {
            "description": "The number of conversations opened during this period.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "interval": {
            "$ref": "#/components/schemas/protos.wfm.metrics.TimeInterval",
            "description": "The time period these metrics cover.",
            "nullable": true,
            "type": "object"
          },
          "scheduled_hours": {
            "description": "The number of hours scheduled for this activity.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "time_in_adherence": {
            "description": "Time (in seconds) the agent spent in adherence with their schedule.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "time_in_exception": {
            "description": "Time (in seconds) the agent spent in adherence exceptions.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "time_on_task": {
            "description": "The proportion of time spent on task (between 0 and 1).",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "time_out_of_adherence": {
            "description": "Time (in seconds) the agent spent out of adherence with their schedule.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "wrong_task_snapshots": {
            "description": "The number of wrong task snapshots recorded.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "Activity-level metrics for an agent.",
        "type": "object"
      },
      "protos.wfm.metrics.ActivityMetricsResponse": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request.\n\nUse the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of activity metrics entries.",
            "items": {
              "$ref": "#/components/schemas/protos.wfm.metrics.ActivityMetrics",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "items"
        ],
        "title": "Response containing a collection of activity metrics.",
        "type": "object"
      },
      "protos.wfm.metrics.ActivityType": {
        "properties": {
          "name": {
            "description": "The display name of the activity.",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of the activity, could be task or break.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Type information for an activity.",
        "type": "object"
      },
      "protos.wfm.metrics.AgentInfo": {
        "properties": {
          "email": {
            "description": "The email address of the agent.",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The display name of the agent.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Information about an agent.",
        "type": "object"
      },
      "protos.wfm.metrics.AgentMetrics": {
        "properties": {
          "actual_occupancy": {
            "$ref": "#/components/schemas/protos.wfm.metrics.OccupancyInfo",
            "description": "Information about the agent's actual occupancy.",
            "nullable": true,
            "type": "object"
          },
          "adherence_score": {
            "description": "The agent's schedule adherence score (as a percentage).",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "agent": {
            "$ref": "#/components/schemas/protos.wfm.metrics.AgentInfo",
            "description": "Information about the agent these metrics belong to.",
            "nullable": true,
            "type": "object"
          },
          "conversations_closed_per_hour": {
            "description": "The number of conversations closed per hour.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "conversations_closed_per_service_hour": {
            "description": "The numbers of conversations closed per service hour.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "dialpad_availability": {
            "$ref": "#/components/schemas/protos.wfm.metrics.OccupancyInfo",
            "description": "Information about the agent's availability in Dialpad.",
            "nullable": true,
            "type": "object"
          },
          "dialpad_time_in_status": {
            "$ref": "#/components/schemas/protos.wfm.metrics.DialpadTimeInStatus",
            "description": "Breakdown of time spent in different Dialpad statuses.",
            "nullable": true,
            "type": "object"
          },
          "interval": {
            "$ref": "#/components/schemas/protos.wfm.metrics.TimeInterval",
            "description": "The time period these metrics cover.",
            "nullable": true,
            "type": "object"
          },
          "occupancy": {
            "description": "The agent's occupancy rate (between 0 and 1).",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "planned_occupancy": {
            "$ref": "#/components/schemas/protos.wfm.metrics.OccupancyInfo",
            "description": "Information about the agent's planned occupancy.",
            "nullable": true,
            "type": "object"
          },
          "scheduled_hours": {
            "description": "The number of hours scheduled for the agent.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "time_in_adherence": {
            "description": "Time (in seconds) the agent spent in adherence with their schedule.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "time_in_exception": {
            "description": "Time (in seconds) the agent spent in adherence exceptions.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "time_on_task": {
            "description": "The proportion of time spent on task (between 0 and 1).",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "time_out_of_adherence": {
            "description": "Time (in seconds) the agent spent out of adherence with their schedule.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "total_conversations_closed": {
            "description": "The total number of conversations closed by the agent.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "utilisation": {
            "description": "The agent's utilization rate (between 0 and 1).",
            "format": "double",
            "nullable": true,
            "type": "number"
          }
        },
        "title": "Agent-level performance metrics.",
        "type": "object"
      },
      "protos.wfm.metrics.AgentMetricsResponse": {
        "properties": {
          "cursor": {
            "description": "A token used to return the next page of a previous request.\n\nUse the cursor provided in the previous response.",
            "nullable": true,
            "type": "string"
          },
          "items": {
            "description": "A list of agent metrics entries.",
            "items": {
              "$ref": "#/components/schemas/protos.wfm.metrics.AgentMetrics",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "items"
        ],
        "title": "Response containing a collection of agent metrics.",
        "type": "object"
      },
      "protos.wfm.metrics.DialpadTimeInStatus": {
        "properties": {
          "available": {
            "$ref": "#/components/schemas/protos.wfm.metrics.StatusTimeInfo",
            "description": "Time spent in available status.",
            "nullable": true,
            "type": "object"
          },
          "busy": {
            "$ref": "#/components/schemas/protos.wfm.metrics.StatusTimeInfo",
            "description": "Time spent in busy status.",
            "nullable": true,
            "type": "object"
          },
          "occupied": {
            "$ref": "#/components/schemas/protos.wfm.metrics.StatusTimeInfo",
            "description": "Time spent in occupied status.",
            "nullable": true,
            "type": "object"
          },
          "unavailable": {
            "$ref": "#/components/schemas/protos.wfm.metrics.StatusTimeInfo",
            "description": "Time spent in unavailable status.",
            "nullable": true,
            "type": "object"
          },
          "wrapup": {
            "$ref": "#/components/schemas/protos.wfm.metrics.StatusTimeInfo",
            "description": "Time spent in wrapup status.",
            "nullable": true,
            "type": "object"
          }
        },
        "title": "Breakdown of time spent in different Dialpad statuses.",
        "type": "object"
      },
      "protos.wfm.metrics.OccupancyInfo": {
        "properties": {
          "percentage": {
            "description": "The occupancy percentage (between 0 and 1).",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "seconds_lost": {
            "description": "The number of seconds lost.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "Information about occupancy metrics.",
        "type": "object"
      },
      "protos.wfm.metrics.StatusTimeInfo": {
        "properties": {
          "percentage": {
            "description": "The percentage of time spent in this status (between 0 and 1).",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "seconds": {
            "description": "The number of seconds spent in this status.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "Information about time spent in a specific status.",
        "type": "object"
      },
      "protos.wfm.metrics.TimeInterval": {
        "properties": {
          "end": {
            "description": "The end timestamp (exclusive) in ISO-8601 format.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "start": {
            "description": "The start timestamp (inclusive) in ISO-8601 format.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Represents a time period with start and end timestamps.",
        "type": "object"
      }
    },
    "securitySchemes": {
      "api_key_in_url": {
        "description": "The API key can be put in the URL parameters.\ni.e. ?apikey=<api_key>\n",
        "in": "query",
        "name": "apikey",
        "type": "apiKey"
      },
      "bearer_token": {
        "description": "The API key can be put in the Authorization header.\ni.e. Authorization: Bearer <api_key>",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "# Introduction\n\nAdmin API v2 for Dialpad.\n\nRequests and responses from the admin API are provided in the JSON format.\n\n# Pagination\n\nList APIs support a limit and cursor parameter.\n\nThe limit defines the number of results to return. For the first request, pass in a desired limit.\nThe API response will contain a cursor field with a special string. Pass this special string into\nthe next request to retrieve the next page.\n\n# Authentication\n\nAll requests are authenticated via an API key in the query parameter or as a bearer token in the\nAuthorization header.\n\nAn API key can be acquired from the Dialpad admin web portal.\n\nNote: If you received your API key from the Dialpad support team rather than the web portal, the\nuser associated with your key must have company administrator permissions.",
    "title": "api",
    "version": "v2",
    "x-logo": {
      "altText": "Dialpad",
      "url": "https://storage.googleapis.com/dialpad_openapi_specs/logo.png"
    }
  },
  "openapi": "3.0.0",
  "paths": {
    "/api/v2/accesscontrolpolicies/{id}/assign": {
      "post": {
        "deprecated": false,
        "description": "Assigns a user to an access control policy.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "accesscontrolpolicies.assign",
        "parameters": [
          {
            "description": "The access control policy's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.access_control_policies.AssignmentPolicyMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.access_control_policies.PolicyAssignmentProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Access Control Policies -- Assign",
        "tags": [
          "accesscontrolpolicies"
        ]
      }
    },
    "/api/v2/accesscontrolpolicies": {
      "get": {
        "deprecated": false,
        "description": "Gets all access control policies belonging to the company.\n\nRate limit: 1200 per minute.",
        "operationId": "accesscontrolpolicies.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.access_control_policies.PoliciesCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Access Control Policies -- List Policies",
        "tags": [
          "accesscontrolpolicies"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a new custom access control policy.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "accesscontrolpolicies.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.access_control_policies.CreatePolicyMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.access_control_policies.PolicyProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Access Control Policies -- Create",
        "tags": [
          "accesscontrolpolicies"
        ]
      }
    },
    "/api/v2/accesscontrolpolicies/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a policy by marking the state as deleted, and removing all associated users.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "accesscontrolpolicies.delete",
        "parameters": [
          {
            "description": "The access control policy's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.access_control_policies.PolicyProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Access Control Policies -- Delete",
        "tags": [
          "accesscontrolpolicies"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Get a specific access control policy's details.\n\nRate limit: 1200 per minute.",
        "operationId": "accesscontrolpolicies.get",
        "parameters": [
          {
            "description": "The access control policy's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.access_control_policies.PolicyProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Access Control Policies -- Get",
        "tags": [
          "accesscontrolpolicies"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Updates the provided fields for an existing access control policy.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "accesscontrolpolicies.update",
        "parameters": [
          {
            "description": "The access control policy's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.access_control_policies.UpdatePolicyMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.access_control_policies.PolicyProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Access Control Policies -- Update",
        "tags": [
          "accesscontrolpolicies"
        ]
      }
    },
    "/api/v2/accesscontrolpolicies/{id}/assignments": {
      "get": {
        "deprecated": false,
        "description": "Lists all users assigned to this access control policy.\n\nRate limit: 1200 per minute.",
        "operationId": "accesscontrolpolicies.assignments",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The access control policy's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.access_control_policies.PolicyAssignmentCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Access Control Policies -- List Assignments",
        "tags": [
          "accesscontrolpolicies"
        ]
      }
    },
    "/api/v2/accesscontrolpolicies/{id}/unassign": {
      "post": {
        "deprecated": false,
        "description": "Unassigns one or all target groups associated with the user for an access control policy.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "accesscontrolpolicies.unassign",
        "parameters": [
          {
            "description": "The access control policy's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.access_control_policies.UnassignmentPolicyMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.access_control_policies.PolicyAssignmentProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Access Control Policies -- Unassign",
        "tags": [
          "accesscontrolpolicies"
        ]
      }
    },
    "/api/v2/app/settings": {
      "get": {
        "deprecated": false,
        "description": "Gets the app settings of the OAuth app that is associated with the API key for the target, if target_type and target_id are provided. Otherwise, will return the app settings for the company.\n\nRate limit: 1200 per minute.",
        "operationId": "app_settings.get",
        "parameters": [
          {
            "description": "The target's id.",
            "in": "query",
            "name": "target_id",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The target's type.",
            "in": "query",
            "name": "target_type",
            "required": false,
            "schema": {
              "enum": [
                "callcenter",
                "callrouter",
                "channel",
                "coachinggroup",
                "coachingteam",
                "department",
                "office",
                "room",
                "staffgroup",
                "unknown",
                "user"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "enabled": true,
                      "is_preferred_service": true,
                      "settings": {
                        "bar": "high",
                        "call_logging_enabled": true,
                        "call_recording_logging_enabled": false,
                        "enable_foo": true,
                        "foo": "bar1",
                        "foo2": 2,
                        "log_auto_external_transferred_call": true,
                        "log_call_recordings": false,
                        "sf_case_owner_sms": false,
                        "sms_logging_enabled": false,
                        "voicemail_logging_enabled": false
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.app.setting.AppSettingProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "App Settings -- GET",
        "tags": [
          "app"
        ]
      }
    },
    "/api/v2/blockednumbers/add": {
      "post": {
        "deprecated": false,
        "description": "Blocks the specified numbers company-wide.\n\nRate limit: 1200 per minute.",
        "operationId": "blockednumbers.add",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.blocked_number.AddBlockedNumbersProto",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response"
          }
        },
        "summary": "Blocked Number -- Add",
        "tags": [
          "blockednumbers"
        ]
      }
    },
    "/api/v2/blockednumbers/{number}": {
      "get": {
        "deprecated": false,
        "description": "Gets the specified blocked number.\n\nRate limit: 1200 per minute.",
        "operationId": "blockednumbers.get",
        "parameters": [
          {
            "description": "A phone number (e164 format).",
            "in": "path",
            "name": "number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.blocked_number.BlockedNumber"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Blocked Number -- Get",
        "tags": [
          "blockednumbers"
        ]
      }
    },
    "/api/v2/blockednumbers/remove": {
      "post": {
        "deprecated": false,
        "description": "Unblocks the specified numbers company-wide.\n\nRate limit: 1200 per minute.",
        "operationId": "blockednumbers.remove",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.blocked_number.RemoveBlockedNumbersProto",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response"
          }
        },
        "summary": "Blocked Number -- Remove",
        "tags": [
          "blockednumbers"
        ]
      }
    },
    "/api/v2/blockednumbers": {
      "get": {
        "deprecated": false,
        "description": "Lists all numbers that have been blocked via the API.\n\nRate limit: 1200 per minute.",
        "operationId": "blockednumbers.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.blocked_number.BlockedNumberCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Blocked Numbers -- List",
        "tags": [
          "blockednumbers"
        ]
      }
    },
    "/api/v2/call/{id}/participants/add": {
      "post": {
        "deprecated": false,
        "description": "Adds another participant to a call. Valid methods to add are by phone or by target. Targets require to have a primary phone Added on Nov 11, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "call.participants.add",
        "parameters": [
          {
            "description": "The call's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.call.AddParticipantMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.call.RingCallProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call -- Add Participant",
        "tags": [
          "call"
        ]
      }
    },
    "/api/v2/call/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get Call status and other information. Added on May 25, 2021 for API v2.\n\nRate limit: 10 per minute.",
        "operationId": "call.get_call_info",
        "parameters": [
          {
            "description": "The call's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "call_id": "1002",
                      "contact": {
                        "email": "",
                        "id": "1001",
                        "name": "(415) 555-7777",
                        "phone": "+14155557777",
                        "type": "local"
                      },
                      "custom_data": "{\"service_titan\": \"my awesome custom data\"}",
                      "date_connected": "1356998400000",
                      "date_rang": "1356998400000",
                      "date_started": "1356998400000",
                      "direction": "inbound",
                      "entry_point_call_id": "1000",
                      "entry_point_target": {
                        "email": "",
                        "id": "124",
                        "name": "\u30d5\u30a1\u30fc\u30b8\u30fc\u3000\u30dc\u30fc\u30eb, Inc",
                        "phone": "+14155551000",
                        "type": "office"
                      },
                      "event_timestamp": "1356998400000",
                      "external_number": "+14155557777",
                      "group_id": "Office:124",
                      "internal_number": "+14155551001",
                      "is_transferred": false,
                      "proxy_target": {},
                      "state": "connected",
                      "target": {
                        "email": "bot@fuzz-ball.com",
                        "id": "2",
                        "name": "\u30c6\u00c9st Bot",
                        "phone": "+14155551001",
                        "type": "user"
                      },
                      "was_recorded": false
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.call.CallProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call -- Get",
        "tags": [
          "call"
        ]
      }
    },
    "/api/v2/call/initiate_ivr_call": {
      "post": {
        "deprecated": false,
        "description": "Initiates an outbound call to ring an IVR Workflow.\n\nAdded on Aug 14, 2023 for API v2.\n\nRate limit: 10 per minute per IVR.\n\nRate limit: 1200 per minute.",
        "operationId": "call.initiate_ivr_call",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.call.OutboundIVRMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.call.InitiatedIVRCallProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call -- Initiate IVR Call",
        "tags": [
          "call"
        ]
      }
    },
    "/api/v2/call": {
      "get": {
        "deprecated": false,
        "description": "Provides a paginated list of calls matching the specified filter parameters in reverse-chronological order by call start time (i.e. recent calls first)\n\nNote: This API will only include calls that have already concluded.\n\nAdded on May 27, 2024 for API v2.\n\nRequires a company admin API key.\n\nRequires scope: ``calls:list``\n\nRate limit: 1200 per minute.",
        "operationId": "call.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Only includes calls that started more recently than the specified timestamp.\n(UTC ms-since-epoch timestamp)",
            "in": "query",
            "name": "started_after",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Only includes calls that started prior to the specified timestamp.\n(UTC ms-since-epoch timestamp)",
            "in": "query",
            "name": "started_before",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The ID of a target to filter against.",
            "in": "query",
            "name": "target_id",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The target type associated with the target ID.",
            "in": "query",
            "name": "target_type",
            "required": false,
            "schema": {
              "enum": [
                "callcenter",
                "callrouter",
                "channel",
                "coachinggroup",
                "coachingteam",
                "department",
                "office",
                "room",
                "staffgroup",
                "unknown",
                "user"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.call.CallCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "security": [
          {
            "api_key_in_url": [
              "calls:list"
            ]
          },
          {
            "bearer_token": [
              "calls:list"
            ]
          }
        ],
        "summary": "Call -- List",
        "tags": [
          "call"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Initiates an outbound call to ring all devices (or a single specified device).\n\nAdded on Feb 20, 2020 for API v2.\n\nRate limit: 5 per minute.",
        "operationId": "call.call",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.call.RingCallMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.call.RingCallProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call -- Initiate via Ring",
        "tags": [
          "call"
        ]
      }
    },
    "/api/v2/call/{id}/transfer": {
      "post": {
        "deprecated": false,
        "description": "Transfers call to another recipient. Added on Sep 25, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "call.transfer_call",
        "parameters": [
          {
            "description": "The call's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.call.TransferCallMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "call_id": "1007",
                      "transferred_to_number": "+14155551003",
                      "transferred_to_state": "hold"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.call.TransferredCallProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call -- Transfer",
        "tags": [
          "call"
        ]
      }
    },
    "/api/v2/call/{id}/unpark": {
      "post": {
        "deprecated": false,
        "description": "Unparks call from Office mainline. Added on Nov 11, 2024 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "call.unpark",
        "parameters": [
          {
            "description": "The call's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.call.UnparkCallMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.call.RingCallProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call -- Unpark",
        "tags": [
          "call"
        ]
      }
    },
    "/api/v2/call/{id}/actions/hangup": {
      "put": {
        "deprecated": false,
        "description": "Hangs up the call. Added on Oct 25, 2024 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "call.actions.hangup",
        "parameters": [
          {
            "description": "The call's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response"
          }
        },
        "summary": "Call Actions -- Hang up",
        "tags": [
          "call"
        ]
      }
    },
    "/api/v2/call/{id}/labels": {
      "put": {
        "deprecated": false,
        "description": "Set Labels for a determined call id.\n\nAdded on Nov 15, 2022 for API v2.\n\nRate limit: 250 per minute.",
        "operationId": "call.put_call_labels",
        "parameters": [
          {
            "description": "The call's id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.call.AddCallLabelsMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.call.CallProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Label -- Set",
        "tags": [
          "call"
        ]
      }
    },
    "/api/v2/callback": {
      "post": {
        "deprecated": false,
        "description": "Requests a call back to a given number by an operator in a given call center. The call back is added to the queue for the call center like a regular call, and a call is initiated when the next operator becomes available. This API respects all existing call center settings,\ne.g. business / holiday hours and queue settings. This API currently does not allow international call backs. Duplicate call backs for a given number and call center are not allowed. Specific error messages will be provided in case of failure.\n\nAdded on Dec 9, 2019 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "call.callback",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.call.CallbackMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "position": "1"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.call.CallbackProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Back -- Enqueue",
        "tags": [
          "callback"
        ]
      }
    },
    "/api/v2/callback/validate": {
      "post": {
        "deprecated": false,
        "description": "Performs a dry-run of creating a callback request, without adding it to the call center queue.\n\nThis performs the same validation logic as when actually enqueuing a callback request, allowing early identification of problems which would prevent a successful callback request.\n\nRate limit: 1200 per minute.",
        "operationId": "call.validate_callback",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.call.CallbackMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "success": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.call.ValidateCallbackProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Back -- Validate",
        "tags": [
          "callback"
        ]
      }
    },
    "/api/v2/callcenters": {
      "get": {
        "deprecated": false,
        "description": "Gets all the call centers for the company. Added on Feb 3, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "callcenters.listall",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "search call center by office.",
            "in": "query",
            "name": "office_id",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "search call centers by name or search by the substring of the name. If input example is 'Cool', output example can be a list of call centers whose name contains the string\n'Cool' - ['Cool call center 1', 'Cool call center 2049']",
            "in": "query",
            "name": "name_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "advanced_settings": {
                            "auto_call_recording": {
                              "call_recording_inbound": false,
                              "call_recording_outbound": false
                            },
                            "max_wrap_up_seconds": "0"
                          },
                          "alerts": {
                            "cc_service_level": "95",
                            "cc_service_level_seconds": "60"
                          },
                          "availability_status": "open",
                          "country": "us",
                          "first_action": "operators",
                          "friday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "hold_queue": {
                            "announce_position": true,
                            "announcement_interval_seconds": "120",
                            "max_hold_count": "50",
                            "max_hold_seconds": "900",
                            "queue_callback_dtmf": "9",
                            "queue_callback_threshold": "5",
                            "queue_escape_dtmf": "*"
                          },
                          "hours_on": false,
                          "id": "1000",
                          "monday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "name": "call center 2049",
                          "no_operators_action": "voicemail",
                          "office_id": "124",
                          "phone_numbers": [
                            "+14155551001"
                          ],
                          "ring_seconds": "30",
                          "routing_options": {
                            "closed": {
                              "action": "voicemail",
                              "dtmf": [
                                {
                                  "input": "0",
                                  "options": {
                                    "action": "disabled"
                                  }
                                },
                                {
                                  "input": "1",
                                  "options": {
                                    "action": "directory"
                                  }
                                }
                              ],
                              "operator_routing": "longestidle",
                              "try_dial_operators": false
                            },
                            "open": {
                              "action": "department",
                              "action_target_id": "130",
                              "action_target_type": "department",
                              "dtmf": [
                                {
                                  "input": "0",
                                  "options": {
                                    "action": "operator"
                                  }
                                },
                                {
                                  "input": "1",
                                  "options": {
                                    "action": "department",
                                    "action_target_id": "124",
                                    "action_target_type": "office"
                                  }
                                }
                              ],
                              "operator_routing": "longestidle",
                              "try_dial_operators": true
                            }
                          },
                          "state": "active",
                          "thursday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "timezone": "US/Pacific",
                          "tuesday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "voice_intelligence": {
                            "allow_pause": true,
                            "auto_start": true
                          },
                          "wednesday_hours": [
                            "08:00",
                            "18:00"
                          ]
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.group.CallCenterCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Centers -- List",
        "tags": [
          "callcenters"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a new call center.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "callcenters.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.group.CreateCallCenterMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "advanced_settings": {
                        "auto_call_recording": {
                          "call_recording_inbound": true,
                          "call_recording_outbound": true
                        },
                        "max_wrap_up_seconds": "5"
                      },
                      "alerts": {
                        "cc_service_level": "96",
                        "cc_service_level_seconds": "59"
                      },
                      "availability_status": "open",
                      "country": "us",
                      "first_action": "operators",
                      "friday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "group_description": "a cool test cc.",
                      "hold_queue": {
                        "announce_position": false,
                        "announcement_interval_seconds": "130",
                        "max_hold_count": "55",
                        "max_hold_seconds": "930",
                        "queue_callback_dtmf": "8",
                        "queue_callback_threshold": "4",
                        "queue_escape_dtmf": "*"
                      },
                      "hours_on": true,
                      "id": "1003",
                      "monday_hours": [
                        "09:00",
                        "12:00",
                        "14:00",
                        "17:00"
                      ],
                      "name": "call center 2046",
                      "no_operators_action": "voicemail",
                      "office_id": "124",
                      "ring_seconds": "45",
                      "routing_options": {
                        "closed": {
                          "action": "person",
                          "action_target_id": "2",
                          "action_target_type": "user",
                          "dtmf": [
                            {
                              "input": "0",
                              "options": {
                                "action": "voicemail"
                              }
                            },
                            {
                              "input": "1",
                              "options": {
                                "action": "directory"
                              }
                            }
                          ],
                          "operator_routing": "fixedorder",
                          "try_dial_operators": true
                        },
                        "open": {
                          "action": "menu",
                          "dtmf": [
                            {
                              "input": "0",
                              "options": {
                                "action": "operator"
                              }
                            },
                            {
                              "input": "1",
                              "options": {
                                "action": "directory"
                              }
                            },
                            {
                              "input": "2",
                              "options": {
                                "action": "voicemail",
                                "action_target_id": "2",
                                "action_target_type": "user"
                              }
                            }
                          ],
                          "operator_routing": "simultaneous",
                          "try_dial_operators": false
                        }
                      },
                      "saturday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "state": "active",
                      "sunday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "thursday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "timezone": "US/Pacific",
                      "tuesday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "voice_intelligence": {
                        "allow_pause": false,
                        "auto_start": false
                      },
                      "wednesday_hours": [
                        "08:00",
                        "18:00"
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.group.CallCenterProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Centers -- Create",
        "tags": [
          "callcenters"
        ]
      }
    },
    "/api/v2/callcenters/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a call center by id.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "callcenters.delete",
        "parameters": [
          {
            "description": "The call center's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.group.CallCenterProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Centers -- Delete",
        "tags": [
          "callcenters"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets a call center by id. Added on May 1, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "callcenters.get",
        "parameters": [
          {
            "description": "The call center's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "advanced_settings": {
                        "auto_call_recording": {
                          "call_recording_inbound": false,
                          "call_recording_outbound": false
                        },
                        "max_wrap_up_seconds": "0"
                      },
                      "alerts": {
                        "cc_service_level": "95",
                        "cc_service_level_seconds": "60"
                      },
                      "availability_status": "open",
                      "country": "us",
                      "first_action": "operators",
                      "hold_queue": {
                        "announce_position": true,
                        "announcement_interval_seconds": "120",
                        "max_hold_count": "50",
                        "max_hold_seconds": "900",
                        "queue_callback_dtmf": "9",
                        "queue_callback_threshold": "5",
                        "queue_escape_dtmf": "*"
                      },
                      "hours_on": false,
                      "id": "1000",
                      "name": "call center 2049",
                      "no_operators_action": "voicemail",
                      "office_id": "124",
                      "phone_numbers": [
                        "+14155551001"
                      ],
                      "ring_seconds": "30",
                      "routing_options": {
                        "closed": {
                          "action": "voicemail",
                          "dtmf": [
                            {
                              "input": "0",
                              "options": {
                                "action": "disabled"
                              }
                            },
                            {
                              "input": "1",
                              "options": {
                                "action": "directory"
                              }
                            }
                          ],
                          "operator_routing": "longestidle",
                          "try_dial_operators": false
                        },
                        "open": {
                          "action": "bridge_target",
                          "action_target_id": "130",
                          "action_target_type": "department",
                          "dtmf": [
                            {
                              "input": "0",
                              "options": {
                                "action": "operator"
                              }
                            },
                            {
                              "input": "1",
                              "options": {
                                "action": "department",
                                "action_target_id": "124",
                                "action_target_type": "office"
                              }
                            }
                          ],
                          "operator_routing": "longestidle",
                          "try_dial_operators": true
                        }
                      },
                      "state": "active",
                      "timezone": "US/Pacific",
                      "voice_intelligence": {
                        "allow_pause": true,
                        "auto_start": true
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.group.CallCenterProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Centers -- Get",
        "tags": [
          "callcenters"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Updates a call center by id.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "callcenters.update",
        "parameters": [
          {
            "description": "The call center's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.group.UpdateCallCenterMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "advanced_settings": {
                        "auto_call_recording": {
                          "call_recording_inbound": true,
                          "call_recording_outbound": true
                        },
                        "max_wrap_up_seconds": "5"
                      },
                      "alerts": {
                        "cc_service_level": "96",
                        "cc_service_level_seconds": "59"
                      },
                      "availability_status": "open",
                      "country": "us",
                      "first_action": "operators",
                      "friday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "group_description": "a cool test cc.",
                      "hold_queue": {
                        "announce_position": false,
                        "announcement_interval_seconds": "130",
                        "max_hold_count": "55",
                        "max_hold_seconds": "930",
                        "queue_callback_dtmf": "8",
                        "queue_callback_threshold": "4",
                        "queue_escape_dtmf": "*"
                      },
                      "hours_on": true,
                      "id": "1000",
                      "monday_hours": [
                        "09:00",
                        "12:00",
                        "14:00",
                        "17:00"
                      ],
                      "name": "call center 2046",
                      "no_operators_action": "voicemail",
                      "office_id": "124",
                      "phone_numbers": [
                        "+14155551001"
                      ],
                      "ring_seconds": "45",
                      "routing_options": {
                        "closed": {
                          "action": "person",
                          "action_target_id": "2",
                          "action_target_type": "user",
                          "dtmf": [
                            {
                              "input": "0",
                              "options": {
                                "action": "voicemail"
                              }
                            },
                            {
                              "input": "1",
                              "options": {
                                "action": "directory"
                              }
                            }
                          ],
                          "operator_routing": "fixedorder",
                          "try_dial_operators": true
                        },
                        "open": {
                          "action": "menu",
                          "dtmf": [
                            {
                              "input": "0",
                              "options": {
                                "action": "voicemail",
                                "action_target_id": "2",
                                "action_target_type": "user"
                              }
                            },
                            {
                              "input": "1",
                              "options": {
                                "action": "directory"
                              }
                            }
                          ],
                          "operator_routing": "simultaneous",
                          "try_dial_operators": false
                        }
                      },
                      "state": "active",
                      "thursday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "timezone": "US/Pacific",
                      "tuesday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "voice_intelligence": {
                        "allow_pause": false,
                        "auto_start": false
                      },
                      "wednesday_hours": [
                        "08:00",
                        "18:00"
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.group.CallCenterProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Centers -- Update",
        "tags": [
          "callcenters"
        ]
      }
    },
    "/api/v2/callcenters/{id}/status": {
      "get": {
        "deprecated": false,
        "description": "Gets live status information on the corresponding Call Center.\n\nAdded on August 7, 2023 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "callcenters.status",
        "parameters": [
          {
            "description": "The call center's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.group.CallCenterStatusProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Centers -- Status",
        "tags": [
          "callcenters"
        ]
      }
    },
    "/api/v2/callcenters/operators/{id}/dutystatus": {
      "get": {
        "deprecated": false,
        "description": "Gets the operator's on duty status and reason.\n\nRate limit: 1200 per minute.",
        "operationId": "callcenters.operators.get.dutystatus",
        "parameters": [
          {
            "description": "The operator's user id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "duty_status_reason": "Lunch Time",
                      "duty_status_started": "1356998400000",
                      "on_duty": false,
                      "on_duty_started": "1356998400000",
                      "on_duty_status": "unavailable",
                      "user_id": "2"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.group.OperatorDutyStatusProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Operator -- Get Duty Status",
        "tags": [
          "callcenters"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Updates the operator's duty status for all call centers which user belongs to.\n\nRate limit: 1200 per minute.",
        "operationId": "callcenters.operators.dutystatus",
        "parameters": [
          {
            "description": "The operator's user id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.group.UpdateOperatorDutyStatusMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "duty_status_reason": "Lunch Time",
                      "duty_status_started": "1356998400000",
                      "on_duty": false,
                      "on_duty_started": "1356998400000",
                      "on_duty_status": "unavailable",
                      "user_id": "2"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.group.OperatorDutyStatusProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Operator -- Update Duty Status",
        "tags": [
          "callcenters"
        ]
      }
    },
    "/api/v2/callcenters/{call_center_id}/operators/{user_id}/skill": {
      "get": {
        "deprecated": false,
        "description": "Gets the skill level of an operator within a call center.\n\nRate limit: 1200 per minute.",
        "operationId": "callcenters.operators.get.skilllevel",
        "parameters": [
          {
            "description": "The call center's ID",
            "in": "path",
            "name": "call_center_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The operator's ID",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.group.OperatorSkillLevelProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Operator -- Get Skill Level",
        "tags": [
          "callcenters"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Updates the skill level of an operator within a call center.\n\nRate limit: 1200 per minute.",
        "operationId": "callcenters.operators.skilllevel",
        "parameters": [
          {
            "description": "The call center's ID",
            "in": "path",
            "name": "call_center_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The operator's ID",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.group.UpdateOperatorSkillLevelMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.group.OperatorSkillLevelProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Operator -- Update Skill Level",
        "tags": [
          "callcenters"
        ]
      }
    },
    "/api/v2/callcenters/{id}/operators": {
      "delete": {
        "deprecated": false,
        "description": "Removes an operator from a call center.\n\nNote: This API will not change or release any licenses.\n\nAdded on October 2, 2020 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "callcenters.operators.delete",
        "parameters": [
          {
            "description": "The call center's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.group.RemoveCallCenterOperatorMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "company_id": "123",
                      "country": "us",
                      "id": "2",
                      "image_url": "https://dialpad.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIRCxILVXNlclByb2ZpbGUYAgw.png?version=36c0561fb8e0f5765ccfb3a5316f6d5d",
                      "is_on_duty": false,
                      "name": "\u30c6\u00c9st Bot",
                      "office_id": "124",
                      "phone_numbers": [
                        "+14155551001"
                      ],
                      "state": "active"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.group.UserOrRoomProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Operator -- Remove",
        "tags": [
          "callcenters"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets operators for a call center. Added on May 1, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "callcenters.operators.get",
        "parameters": [
          {
            "description": "The call center's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "users": [
                        {
                          "admin_office_ids": [
                            "124"
                          ],
                          "company_id": "123",
                          "country": "us",
                          "date_active": "2021-06-20T19:18:00",
                          "date_added": "2021-06-20T19:18:00",
                          "date_first_login": "2021-06-20T19:18:00",
                          "do_not_disturb": false,
                          "emails": [
                            "bot@fuzz-ball.com"
                          ],
                          "extension": "20000",
                          "first_name": "\u30c6\u00c9st",
                          "forwarding_numbers": [
                            "+14152301358"
                          ],
                          "group_details": [
                            {
                              "do_not_disturb": false,
                              "group_id": "1000",
                              "group_type": "callcenter",
                              "role": "admin"
                            }
                          ],
                          "id": "2",
                          "image_url": "https://dialpad.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIRCxILVXNlclByb2ZpbGUYAgw.png?version=36c0561fb8e0f5765ccfb3a5316f6d5d",
                          "is_admin": true,
                          "is_available": true,
                          "is_on_duty": false,
                          "is_online": false,
                          "is_super_admin": true,
                          "job_title": "Mock Job Title",
                          "language": "en",
                          "last_name": "Bot",
                          "license": "talk",
                          "location": "Mock Location",
                          "muted": false,
                          "office_id": "124",
                          "on_duty_status": "unavailable",
                          "phone_numbers": [
                            "+14155551001"
                          ],
                          "state": "active",
                          "status_message": "Mock Status",
                          "timezone": "US/Pacific"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.group.OperatorCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Operators -- List",
        "tags": [
          "callcenters"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Adds an operator to a call center.\n\n>  Warning\n>\n> This API may result in the usage of call center licenses if required and available. If the licenses are required and not available the operation will fail. Licenses are required when adding an operator that does not have a call center license.\n\nAdded on October 2, 2020 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "callcenters.operators.post",
        "parameters": [
          {
            "description": "The call center's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.group.AddCallCenterOperatorMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "company_id": "123",
                      "country": "us",
                      "id": "2",
                      "image_url": "https://dialpad.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIRCxILVXNlclByb2ZpbGUYAgw.png?version=36c0561fb8e0f5765ccfb3a5316f6d5d",
                      "is_on_duty": false,
                      "name": "\u30c6\u00c9st Bot",
                      "office_id": "124",
                      "phone_numbers": [
                        "+14155551001"
                      ],
                      "state": "active"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.group.UserOrRoomProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Operator -- Add",
        "tags": [
          "callcenters"
        ]
      }
    },
    "/api/v2/calllabels": {
      "get": {
        "deprecated": false,
        "description": "Gets all labels for a determined company.\n\nAdded on Nov 15, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "calllabel.list",
        "parameters": [
          {
            "description": "The maximum number of results to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.call_label.CompanyCallLabels"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Label -- List",
        "tags": [
          "calllabels"
        ]
      }
    },
    "/api/v2/callreviewsharelink": {
      "post": {
        "deprecated": false,
        "description": "Create a call review share link by call id.\n\nAdded on Sep 21, 2022 for API v2.\n\nRate limit: 250 per minute.",
        "operationId": "call_review_share_link.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.call_review_share_link.CreateCallReviewShareLink",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.call_review_share_link.CallReviewShareLink"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Review Sharelink -- Create",
        "tags": [
          "callreviewsharelink"
        ]
      }
    },
    "/api/v2/callreviewsharelink/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Delete a call review share link by  id.\n\nAdded on Sep 21, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "call_review_share_link.delete",
        "parameters": [
          {
            "description": "The share link's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.call_review_share_link.CallReviewShareLink"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Review Sharelink -- Delete",
        "tags": [
          "callreviewsharelink"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets a call review share link by call id.\n\nAdded on Sep 21, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "call_review_share_link.get",
        "parameters": [
          {
            "description": "The share link's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.call_review_share_link.CallReviewShareLink"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Review Sharelink -- Get",
        "tags": [
          "callreviewsharelink"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a call review share link by id.\n\nAdded on Sep 21, 2022 for API v2.\n\nRate limit: 250 per minute.",
        "operationId": "call_review_share_link.update",
        "parameters": [
          {
            "description": "The share link's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.call_review_share_link.UpdateCallReviewShareLink",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.call_review_share_link.CallReviewShareLink"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Review Sharelink -- Update",
        "tags": [
          "callreviewsharelink"
        ]
      }
    },
    "/api/v2/callrouters": {
      "get": {
        "deprecated": false,
        "description": "Lists all of the API call routers for a given company or office.\n\nRate limit: 1200 per minute.",
        "operationId": "callrouters.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The office's id.",
            "in": "query",
            "name": "office_id",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "default_target_id": "5835806903417907",
                          "default_target_type": "user",
                          "enabled": true,
                          "id": "5165402724715258",
                          "name": "Test Router",
                          "office_id": "6286560707051431",
                          "routing_url": "https://example.ca/routingapi",
                          "signature": {}
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.call_router.ApiCallRouterCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Router -- List",
        "tags": [
          "callrouters"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a new API-based call router.\n\nRate limit: 1200 per minute.",
        "operationId": "callrouters.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.call_router.CreateApiCallRouterMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "default_target_id": "5835806903417907",
                      "default_target_type": "user",
                      "enabled": true,
                      "id": "5165402724715258",
                      "name": "Test Router",
                      "office_id": "6286560707051431",
                      "routing_url": "https://example.ca/routingapi",
                      "signature": {}
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.call_router.ApiCallRouterProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Router -- Create",
        "tags": [
          "callrouters"
        ]
      }
    },
    "/api/v2/callrouters/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes the API call router with the given ID.\n\nRate limit: 1200 per minute.",
        "operationId": "callrouters.delete",
        "parameters": [
          {
            "description": "The API call router's ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response"
          }
        },
        "summary": "Call Router -- Delete",
        "tags": [
          "callrouters"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets the API call router with the given ID.\n\nRate limit: 1200 per minute.",
        "operationId": "callrouters.get",
        "parameters": [
          {
            "description": "The API call router's ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "default_target_id": "5835806903417907",
                      "default_target_type": "user",
                      "enabled": true,
                      "id": "5165402724715258",
                      "name": "Test Router",
                      "office_id": "6422934115149452",
                      "routing_url": "https://example.ca/routingapi",
                      "signature": {}
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.call_router.ApiCallRouterProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Router -- Get",
        "tags": [
          "callrouters"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Updates the API call router with the given ID.\n\nRate limit: 1 per 5 minute.",
        "operationId": "callrouters.update",
        "parameters": [
          {
            "description": "The API call router's ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.call_router.UpdateApiCallRouterMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "default_target_id": "5835806903417907",
                      "default_target_type": "user",
                      "enabled": true,
                      "id": "5165402724715258",
                      "name": "Test Router",
                      "office_id": "6422934115149452",
                      "routing_url": "https://example.ca/routingapi",
                      "signature": {}
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.call_router.ApiCallRouterProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Router -- Update",
        "tags": [
          "callrouters"
        ]
      }
    },
    "/api/v2/callrouters/{id}/assign_number": {
      "post": {
        "deprecated": false,
        "description": "Assigns a number to a callrouter. The number will automatically be taken from the company's reserved pool if there are reserved numbers, otherwise a number will be auto-assigned from the provided area code.\n\nRate limit: 1200 per minute.",
        "operationId": "numbers.assign_call_router_number.post",
        "parameters": [
          {
            "description": "The API call router's ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.number.AssignNumberMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "area_code": "415",
                      "company_id": "123",
                      "number": "+14155551005",
                      "office_id": "132",
                      "status": "call_router",
                      "target_id": "1002",
                      "target_type": "callrouter",
                      "type": "local"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.number.NumberProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Dialpad Number -- Assign",
        "tags": [
          "callrouters"
        ]
      }
    },
    "/api/v2/channels/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a channel by id.\n\nAdded on May 11, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "channels.delete",
        "parameters": [
          {
            "description": "The channel id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response"
          }
        },
        "summary": "Channel -- Delete",
        "tags": [
          "channels"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Get channel by id\n\nAdded on May 11, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "channels.get",
        "parameters": [
          {
            "description": "The channel id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.channel.ChannelProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Channel -- Get",
        "tags": [
          "channels"
        ]
      }
    },
    "/api/v2/channels": {
      "get": {
        "deprecated": false,
        "description": "Lists all channels in the company.\n\nAdded on May 11, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "channels.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The state of the channel.",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.channel.ChannelCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Channel -- List",
        "tags": [
          "channels"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a new channel.\n\nAdded on May 11, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "channels.post",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.channel.CreateChannelMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.channel.ChannelProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Channel -- Create",
        "tags": [
          "channels"
        ]
      }
    },
    "/api/v2/channels/{id}/members": {
      "delete": {
        "deprecated": false,
        "description": "Removes a member from a channel.\n\nAdded on May 12, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "channels.members.delete",
        "parameters": [
          {
            "description": "The channel's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.member_channel.RemoveChannelMemberMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response"
          }
        },
        "summary": "Member -- Remove",
        "tags": [
          "channels"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "List all the members from a channel\n\nAdded on May 11, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "channels.members.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The channel id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.member_channel.MembersCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Members -- List",
        "tags": [
          "channels"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Adds an user to a channel.\n\nAdded on May 12, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "channels.members.post",
        "parameters": [
          {
            "description": "The channel's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.member_channel.AddChannelMemberMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.member_channel.MembersProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Member -- Add",
        "tags": [
          "channels"
        ]
      }
    },
    "/api/v2/coachingteams/{id}/members": {
      "get": {
        "deprecated": false,
        "description": "Get a list of members of a coaching team. Added on Jul 30th, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "coaching_team.members.get",
        "parameters": [
          {
            "description": "Id of the coaching team",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "cursor": "",
                      "items": [
                        {
                          "company_id": "123",
                          "country": "us",
                          "date_added": "2013-01-01T00:00:00",
                          "do_not_disturb": false,
                          "emails": [
                            "test-email@test.com"
                          ],
                          "first_name": "\u30c6\u00c9st",
                          "id": "1130",
                          "image_url": "https://dialpad.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXISCxILVXNlclByb2ZpbGUY6ggM.png?version=36c0561fb8e0f5765ccfb3a5316f6d5d",
                          "is_admin": false,
                          "is_available": true,
                          "is_on_duty": false,
                          "is_online": false,
                          "is_super_admin": false,
                          "language": "en",
                          "last_name": "Bot",
                          "license": "talk",
                          "muted": false,
                          "office_id": "124",
                          "phone_numbers": [
                            "+14155551006"
                          ],
                          "role": "trainee",
                          "state": "active",
                          "timezone": "US/Pacific"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.coaching_team.CoachingTeamMemberCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Coaching Team -- List Members",
        "tags": [
          "coachingteams"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Add a user to the specified coaching team as trainee or coach.\n\nAdded on July 5th, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "coaching_team.members.add",
        "parameters": [
          {
            "description": "Id of the coaching team",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.coaching_team.CoachingTeamMemberMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "company_id": "123",
                      "country": "us",
                      "date_added": "2013-01-01T00:00:00",
                      "do_not_disturb": false,
                      "emails": [
                        "test-email@test.com"
                      ],
                      "first_name": "\u30c6\u00c9st",
                      "id": "1130",
                      "image_url": "https://dialpad.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXISCxILVXNlclByb2ZpbGUY6ggM.png?version=36c0561fb8e0f5765ccfb3a5316f6d5d",
                      "is_admin": false,
                      "is_available": true,
                      "is_on_duty": false,
                      "is_online": false,
                      "is_super_admin": false,
                      "language": "en",
                      "last_name": "Bot",
                      "license": "talk",
                      "muted": false,
                      "office_id": "124",
                      "phone_numbers": [
                        "+14155551006"
                      ],
                      "role": "trainee",
                      "state": "active",
                      "timezone": "US/Pacific"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.coaching_team.CoachingTeamMemberProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Coaching Team -- Add Member",
        "tags": [
          "coachingteams"
        ]
      }
    },
    "/api/v2/coachingteams/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get details of a specified coaching team. Added on Jul 30th, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "coaching_team.get",
        "parameters": [
          {
            "description": "Id of the coaching team",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "allow_trainee_eavesdrop": true,
                      "company_id": "123",
                      "country": "us",
                      "id": "1130",
                      "name": "team_name2",
                      "office_id": "124",
                      "state": "active"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.coaching_team.CoachingTeamProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Coaching Team -- Get",
        "tags": [
          "coachingteams"
        ]
      }
    },
    "/api/v2/coachingteams": {
      "get": {
        "deprecated": false,
        "description": "Get a list of all coaching teams in the company. Added on Feb 3rd, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "coaching_team.listall",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "allow_trainee_eavesdrop": true,
                          "company_id": "123",
                          "country": "us",
                          "id": "1001",
                          "name": "team_name",
                          "office_id": "124",
                          "state": "active"
                        },
                        {
                          "allow_trainee_eavesdrop": true,
                          "company_id": "123",
                          "country": "us",
                          "id": "1130",
                          "name": "team_name2",
                          "office_id": "124",
                          "state": "active"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.coaching_team.CoachingTeamCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Coaching Team -- List",
        "tags": [
          "coachingteams"
        ]
      }
    },
    "/api/v2/company": {
      "get": {
        "deprecated": false,
        "description": "Gets company information.\n\nAdded on Feb 21, 2019 for API v2.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "company.get",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "account_type": "standard",
                      "country": "us",
                      "domain": "fuzz-ball.com",
                      "id": "123",
                      "name": "\u30d5\u30a1\u30fc\u30b8\u30fc\u3000\u30dc\u30fc\u30eb, Inc",
                      "office_count": "1"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.company.CompanyProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Company -- Get",
        "tags": [
          "company"
        ]
      }
    },
    "/api/v2/company/{id}/smsoptout": {
      "get": {
        "deprecated": false,
        "description": "\n\nRequires a company admin API key.\n\nRate limit: 250 per minute.",
        "operationId": "company.sms_opt_out",
        "parameters": [
          {
            "description": "ID of the requested company. This is required and must be specified in the URL path. The value must match the id from the company linked to the API key.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional company A2P campaign entity id to filter results by. Note, if set,\nthen the parameter 'opt_out_state' must be also set to the value 'opted_out'.",
            "in": "query",
            "name": "a2p_campaign_id",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Optional token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required opt-out state to filter results by. Only results matching this state will be returned.",
            "in": "query",
            "name": "opt_out_state",
            "required": true,
            "schema": {
              "enum": [
                "opted_back_in",
                "opted_out"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.sms_opt_out.SmsOptOutListProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Company -- Get SMS Opt-out List",
        "tags": [
          "company"
        ]
      }
    },
    "/api/v2/conference/rooms": {
      "get": {
        "deprecated": false,
        "description": "Lists all conference rooms.\n\nRequires scope: ``conference:read``\n\nRate limit: 1200 per minute.",
        "operationId": "conference-rooms.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.uberconference.room.RoomCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "security": [
          {
            "api_key_in_url": [
              "conference:read"
            ]
          },
          {
            "bearer_token": [
              "conference:read"
            ]
          }
        ],
        "summary": "Meeting Room -- List",
        "tags": [
          "conference"
        ]
      }
    },
    "/api/v2/conference/meetings": {
      "get": {
        "deprecated": false,
        "description": "Lists summaries of meetings that have occured in the specified meeting room.\n\nRequires scope: ``conference:read``\n\nRate limit: 1200 per minute.",
        "operationId": "conference-meetings.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The meeting room's ID.",
            "in": "query",
            "name": "room_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.uberconference.meeting.MeetingSummaryCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "security": [
          {
            "api_key_in_url": [
              "conference:read"
            ]
          },
          {
            "bearer_token": [
              "conference:read"
            ]
          }
        ],
        "summary": "Meeting Summary -- List",
        "tags": [
          "conference"
        ]
      }
    },
    "/api/v2/contacts/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a contact by id. Added on Mar 2, 2020 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "contacts.delete",
        "parameters": [
          {
            "description": "The contact's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.contact.ContactProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Contact -- Delete",
        "tags": [
          "contacts"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets a contact by id. Currently, only contacts of type shared and local can be retrieved by this API.\n\nAdded on Mar 2, 2020 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "contacts.get",
        "parameters": [
          {
            "description": "The contact's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.contact.ContactProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Contact -- Get",
        "tags": [
          "contacts"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Updates the provided fields for an existing contact. Added on Mar 2, 2020 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "contacts.update",
        "parameters": [
          {
            "description": "The contact's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.contact.UpdateContactMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.contact.ContactProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Contact -- Update",
        "tags": [
          "contacts"
        ]
      }
    },
    "/api/v2/contacts": {
      "get": {
        "deprecated": false,
        "description": "Gets company shared contacts, or user's local contacts if owner_id is provided.\n\nAdded on Mar 2, 2020 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "contacts.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If set to True company local contacts will be included. default False.",
            "in": "query",
            "name": "include_local",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The id of the user who owns the contact.",
            "in": "query",
            "name": "owner_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.contact.ContactCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Contact -- List",
        "tags": [
          "contacts"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a new contact. Added on Mar 2, 2020 for API v2.\n\nRate limit: 100 per minute.",
        "operationId": "contacts.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.contact.CreateContactMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.contact.ContactProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Contact -- Create",
        "tags": [
          "contacts"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Creates a new shared contact with uid. Added on Jun 11, 2020 for API v2.\n\nRate limit: 100 per minute.",
        "operationId": "contacts.create_with_uid",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.contact.CreateContactMessageWithUid",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.contact.ContactProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Contact -- Create or Update",
        "tags": [
          "contacts"
        ]
      }
    },
    "/api/v2/customivrs/{target_type}/{target_id}/{ivr_type}": {
      "delete": {
        "deprecated": false,
        "description": "Delete and un-assign an Ivr from a target.\n\nRate limit: 1200 per minute.",
        "operationId": "ivr.delete",
        "parameters": [
          {
            "description": "Target's type. of the custom ivr to be updated.",
            "in": "path",
            "name": "target_type",
            "required": true,
            "schema": {
              "enum": [
                "callcenter",
                "callrouter",
                "channel",
                "coachinggroup",
                "coachingteam",
                "department",
                "office",
                "room",
                "staffgroup",
                "unknown",
                "user"
              ],
              "type": "string"
            }
          },
          {
            "description": "The id of the target.",
            "in": "path",
            "name": "target_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Type of ivr you want to update.",
            "in": "path",
            "name": "ivr_type",
            "required": true,
            "schema": {
              "enum": [
                "ASK_FIRST_OPERATOR_NOT_AVAILABLE",
                "AUTO_RECORDING",
                "CALLAI_AUTO_RECORDING",
                "CG_AUTO_RECORDING",
                "CLOSED",
                "CLOSED_DEPARTMENT_INTRO",
                "CLOSED_MENU",
                "CLOSED_MENU_OPTION",
                "CSAT_INTRO",
                "CSAT_OUTRO",
                "CSAT_PREAMBLE",
                "CSAT_QUESTION",
                "DEPARTMENT_INTRO",
                "GREETING",
                "HOLD_AGENT_READY",
                "HOLD_APPREC",
                "HOLD_CALLBACK_ACCEPT",
                "HOLD_CALLBACK_ACCEPTED",
                "HOLD_CALLBACK_CONFIRM",
                "HOLD_CALLBACK_CONFIRM_NUMBER",
                "HOLD_CALLBACK_DIFFERENT_NUMBER",
                "HOLD_CALLBACK_DIRECT",
                "HOLD_CALLBACK_FULFILLED",
                "HOLD_CALLBACK_INVALID_NUMBER",
                "HOLD_CALLBACK_KEYPAD",
                "HOLD_CALLBACK_REJECT",
                "HOLD_CALLBACK_REJECTED",
                "HOLD_CALLBACK_REQUEST",
                "HOLD_CALLBACK_REQUESTED",
                "HOLD_CALLBACK_SAME_NUMBER",
                "HOLD_CALLBACK_TRY_AGAIN",
                "HOLD_CALLBACK_UNDIALABLE",
                "HOLD_ESCAPE_VM_EIGHT",
                "HOLD_ESCAPE_VM_FIVE",
                "HOLD_ESCAPE_VM_FOUR",
                "HOLD_ESCAPE_VM_NINE",
                "HOLD_ESCAPE_VM_ONE",
                "HOLD_ESCAPE_VM_POUND",
                "HOLD_ESCAPE_VM_SEVEN",
                "HOLD_ESCAPE_VM_SIX",
                "HOLD_ESCAPE_VM_STAR",
                "HOLD_ESCAPE_VM_TEN",
                "HOLD_ESCAPE_VM_THREE",
                "HOLD_ESCAPE_VM_TWO",
                "HOLD_ESCAPE_VM_ZERO",
                "HOLD_INTERRUPT",
                "HOLD_INTRO",
                "HOLD_MUSIC",
                "HOLD_POSITION_EIGHT",
                "HOLD_POSITION_FIVE",
                "HOLD_POSITION_FOUR",
                "HOLD_POSITION_MORE",
                "HOLD_POSITION_NINE",
                "HOLD_POSITION_ONE",
                "HOLD_POSITION_SEVEN",
                "HOLD_POSITION_SIX",
                "HOLD_POSITION_TEN",
                "HOLD_POSITION_THREE",
                "HOLD_POSITION_TWO",
                "HOLD_POSITION_ZERO",
                "HOLD_WAIT",
                "MENU",
                "MENU_OPTION",
                "NEXT_TARGET",
                "VM_DROP_MESSAGE",
                "VM_UNAVAILABLE",
                "VM_UNAVAILABLE_CLOSED"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.custom_ivr.UpdateCustomIvrMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "date_added": "1356998400000",
                      "id": "1002",
                      "name": "fake",
                      "selected": false
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.custom_ivr.CustomIvrDetailsProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Custom IVR -- Delete",
        "tags": [
          "customivrs"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Sets an existing Ivr for a target.\n\nAdded on July 27, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "ivr.update",
        "parameters": [
          {
            "description": "Target's type.",
            "in": "path",
            "name": "target_type",
            "required": true,
            "schema": {
              "enum": [
                "callcenter",
                "callrouter",
                "channel",
                "coachinggroup",
                "coachingteam",
                "department",
                "office",
                "room",
                "staffgroup",
                "unknown",
                "user"
              ],
              "type": "string"
            }
          },
          {
            "description": "The target's id.",
            "in": "path",
            "name": "target_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Type of ivr you want to update",
            "in": "path",
            "name": "ivr_type",
            "required": true,
            "schema": {
              "enum": [
                "ASK_FIRST_OPERATOR_NOT_AVAILABLE",
                "AUTO_RECORDING",
                "CALLAI_AUTO_RECORDING",
                "CG_AUTO_RECORDING",
                "CLOSED",
                "CLOSED_DEPARTMENT_INTRO",
                "CLOSED_MENU",
                "CLOSED_MENU_OPTION",
                "CSAT_INTRO",
                "CSAT_OUTRO",
                "CSAT_PREAMBLE",
                "CSAT_QUESTION",
                "DEPARTMENT_INTRO",
                "GREETING",
                "HOLD_AGENT_READY",
                "HOLD_APPREC",
                "HOLD_CALLBACK_ACCEPT",
                "HOLD_CALLBACK_ACCEPTED",
                "HOLD_CALLBACK_CONFIRM",
                "HOLD_CALLBACK_CONFIRM_NUMBER",
                "HOLD_CALLBACK_DIFFERENT_NUMBER",
                "HOLD_CALLBACK_DIRECT",
                "HOLD_CALLBACK_FULFILLED",
                "HOLD_CALLBACK_INVALID_NUMBER",
                "HOLD_CALLBACK_KEYPAD",
                "HOLD_CALLBACK_REJECT",
                "HOLD_CALLBACK_REJECTED",
                "HOLD_CALLBACK_REQUEST",
                "HOLD_CALLBACK_REQUESTED",
                "HOLD_CALLBACK_SAME_NUMBER",
                "HOLD_CALLBACK_TRY_AGAIN",
                "HOLD_CALLBACK_UNDIALABLE",
                "HOLD_ESCAPE_VM_EIGHT",
                "HOLD_ESCAPE_VM_FIVE",
                "HOLD_ESCAPE_VM_FOUR",
                "HOLD_ESCAPE_VM_NINE",
                "HOLD_ESCAPE_VM_ONE",
                "HOLD_ESCAPE_VM_POUND",
                "HOLD_ESCAPE_VM_SEVEN",
                "HOLD_ESCAPE_VM_SIX",
                "HOLD_ESCAPE_VM_STAR",
                "HOLD_ESCAPE_VM_TEN",
                "HOLD_ESCAPE_VM_THREE",
                "HOLD_ESCAPE_VM_TWO",
                "HOLD_ESCAPE_VM_ZERO",
                "HOLD_INTERRUPT",
                "HOLD_INTRO",
                "HOLD_MUSIC",
                "HOLD_POSITION_EIGHT",
                "HOLD_POSITION_FIVE",
                "HOLD_POSITION_FOUR",
                "HOLD_POSITION_MORE",
                "HOLD_POSITION_NINE",
                "HOLD_POSITION_ONE",
                "HOLD_POSITION_SEVEN",
                "HOLD_POSITION_SIX",
                "HOLD_POSITION_TEN",
                "HOLD_POSITION_THREE",
                "HOLD_POSITION_TWO",
                "HOLD_POSITION_ZERO",
                "HOLD_WAIT",
                "MENU",
                "MENU_OPTION",
                "NEXT_TARGET",
                "VM_DROP_MESSAGE",
                "VM_UNAVAILABLE",
                "VM_UNAVAILABLE_CLOSED"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.custom_ivr.UpdateCustomIvrMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "ivr_type": "DEPARTMENT_INTRO",
                      "ivrs": [
                        {
                          "date_added": "1356998400000",
                          "id": "1001",
                          "name": "fake",
                          "selected": false
                        },
                        {
                          "date_added": "1356998400000",
                          "id": "1002",
                          "name": "test_mp3",
                          "selected": false
                        },
                        {
                          "date_added": "1356998400000",
                          "id": "1003",
                          "name": "test_mp3",
                          "selected": true
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.custom_ivr.CustomIvrProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Custom IVR -- Assign",
        "tags": [
          "customivrs"
        ]
      }
    },
    "/api/v2/customivrs": {
      "get": {
        "deprecated": false,
        "description": "Gets all the custom IVRs for a target.\n\nAdded on July 14, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "custom_ivrs.get",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Target's type.",
            "in": "query",
            "name": "target_type",
            "required": true,
            "schema": {
              "enum": [
                "callcenter",
                "callrouter",
                "channel",
                "coachinggroup",
                "coachingteam",
                "department",
                "office",
                "room",
                "staffgroup",
                "unknown",
                "user"
              ],
              "type": "string"
            }
          },
          {
            "description": "The target's id.",
            "in": "query",
            "name": "target_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "cursor": "",
                      "items": [
                        {
                          "ivr_type": "HOLD_APPREC",
                          "ivrs": [
                            {
                              "date_added": "1356998400000",
                              "id": "1001",
                              "name": "fake",
                              "selected": true
                            },
                            {
                              "date_added": "1356998400000",
                              "id": "1002",
                              "name": "test_mp3",
                              "selected": false
                            }
                          ]
                        },
                        {
                          "ivr_type": "HOLD_ESCAPE_VM_THREE",
                          "ivrs": [
                            {
                              "date_added": "1356998400000",
                              "id": "1005",
                              "name": "fake",
                              "selected": true
                            }
                          ]
                        },
                        {
                          "ivr_type": "HOLD_MUSIC",
                          "ivrs": [
                            {
                              "date_added": "1356998400000",
                              "id": "1006",
                              "name": "fake",
                              "selected": true
                            }
                          ]
                        },
                        {
                          "ivr_type": "HOLD_POSITION_ZERO",
                          "ivrs": [
                            {
                              "date_added": "1356998400000",
                              "id": "1004",
                              "name": "fake",
                              "selected": true
                            }
                          ]
                        },
                        {
                          "ivr_type": "HOLD_WAIT",
                          "ivrs": [
                            {
                              "date_added": "1356998400000",
                              "id": "1003",
                              "name": "fake",
                              "selected": true
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.custom_ivr.CustomIvrCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Custom IVR -- Get",
        "tags": [
          "customivrs"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a new custom IVR for a target.\n\nAdded on June 15, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "ivr.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.custom_ivr.CreateCustomIvrMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "date_added": "1356998400000",
                      "id": "1002",
                      "name": "test name",
                      "selected": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.custom_ivr.CustomIvrDetailsProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Custom IVR -- Create",
        "tags": [
          "customivrs"
        ]
      }
    },
    "/api/v2/customivrs/{ivr_id}": {
      "patch": {
        "deprecated": false,
        "description": "Update the name or description of an existing custom ivr.\n\nRate limit: 1200 per minute.",
        "operationId": "ivr_details.update",
        "parameters": [
          {
            "description": "The ID of the custom ivr to be updated.",
            "in": "path",
            "name": "ivr_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.custom_ivr.UpdateCustomIvrDetailsMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.custom_ivr.CustomIvrDetailsProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Custom IVR -- Update",
        "tags": [
          "customivrs"
        ]
      }
    },
    "/api/v2/departments/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a department by id.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "departments.delete",
        "parameters": [
          {
            "description": "The department's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.group.DepartmentProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Departments-- Delete",
        "tags": [
          "departments"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets a department by id. Added on May 1, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "departments.get",
        "parameters": [
          {
            "description": "The department's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "auto_call_recording": false,
                      "availability_status": "open",
                      "country": "us",
                      "first_action": "operators",
                      "friday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "hold_queue": {
                        "max_hold_count": "50",
                        "max_hold_seconds": "900"
                      },
                      "hours_on": false,
                      "id": "130",
                      "monday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "name": "Sales",
                      "no_operators_action": "voicemail",
                      "office_id": "124",
                      "phone_numbers": [
                        "+14155551001"
                      ],
                      "ring_seconds": "30",
                      "routing_options": {
                        "closed": {
                          "action": "voicemail",
                          "dtmf": [
                            {
                              "input": "0",
                              "options": {
                                "action": "disabled"
                              }
                            },
                            {
                              "input": "1",
                              "options": {
                                "action": "directory"
                              }
                            }
                          ],
                          "operator_routing": "simultaneous",
                          "try_dial_operators": false
                        },
                        "open": {
                          "action": "department",
                          "action_target_id": "130",
                          "action_target_type": "department",
                          "dtmf": [
                            {
                              "input": "0",
                              "options": {
                                "action": "operator"
                              }
                            },
                            {
                              "input": "1",
                              "options": {
                                "action": "department",
                                "action_target_id": "124",
                                "action_target_type": "office"
                              }
                            }
                          ],
                          "operator_routing": "simultaneous",
                          "try_dial_operators": true
                        }
                      },
                      "state": "active",
                      "thursday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "timezone": "US/Pacific",
                      "tuesday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "voice_intelligence": {
                        "allow_pause": true,
                        "auto_start": true
                      },
                      "wednesday_hours": [
                        "08:00",
                        "18:00"
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.group.DepartmentProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Department -- Get",
        "tags": [
          "departments"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Updates a new department.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "departments.update",
        "parameters": [
          {
            "description": "The call center's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.group.UpdateDepartmentMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.group.DepartmentProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Departments-- Update",
        "tags": [
          "departments"
        ]
      }
    },
    "/api/v2/departments": {
      "get": {
        "deprecated": false,
        "description": "Gets all the departments in the company. Added on Feb 3rd, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "departments.listall",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "filter departments by office.",
            "in": "query",
            "name": "office_id",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "search departments by name or search by the substring of the name. If input example is 'Happy', output example can be a list of departments whose name contains the string Happy - ['Happy department 1', 'Happy department 2']",
            "in": "query",
            "name": "name_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "auto_call_recording": false,
                          "availability_status": "open",
                          "country": "us",
                          "first_action": "operators",
                          "friday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "hold_queue": {
                            "max_hold_count": "50",
                            "max_hold_seconds": "900"
                          },
                          "hours_on": false,
                          "id": "130",
                          "monday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "name": "Sales",
                          "no_operators_action": "voicemail",
                          "office_id": "124",
                          "phone_numbers": [
                            "+14155551001"
                          ],
                          "ring_seconds": "30",
                          "routing_options": {
                            "closed": {
                              "action": "voicemail",
                              "dtmf": [
                                {
                                  "input": "0",
                                  "options": {
                                    "action": "disabled"
                                  }
                                },
                                {
                                  "input": "1",
                                  "options": {
                                    "action": "directory"
                                  }
                                }
                              ],
                              "operator_routing": "simultaneous",
                              "try_dial_operators": false
                            },
                            "open": {
                              "action": "department",
                              "action_target_id": "130",
                              "action_target_type": "department",
                              "dtmf": [
                                {
                                  "input": "0",
                                  "options": {
                                    "action": "operator"
                                  }
                                },
                                {
                                  "input": "1",
                                  "options": {
                                    "action": "department",
                                    "action_target_id": "124",
                                    "action_target_type": "office"
                                  }
                                }
                              ],
                              "operator_routing": "simultaneous",
                              "try_dial_operators": true
                            }
                          },
                          "state": "active",
                          "thursday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "timezone": "US/Pacific",
                          "tuesday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "voice_intelligence": {
                            "allow_pause": true,
                            "auto_start": true
                          },
                          "wednesday_hours": [
                            "08:00",
                            "18:00"
                          ]
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.group.DepartmentCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Department -- List",
        "tags": [
          "departments"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a new department.\n\nAdded on March 25th, 2022 for API v2.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "departments.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.group.CreateDepartmentMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "auto_call_recording": true,
                      "availability_status": "open",
                      "country": "us",
                      "first_action": "operators",
                      "friday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "group_description": "Happy department",
                      "hold_queue": {
                        "allow_queuing": true,
                        "max_hold_count": "34",
                        "max_hold_seconds": "770"
                      },
                      "hours_on": true,
                      "id": "1129",
                      "monday_hours": [
                        "09:00",
                        "12:00",
                        "14:30",
                        "17:00"
                      ],
                      "name": "department 2046",
                      "no_operators_action": "voicemail",
                      "office_id": "124",
                      "ring_seconds": "45",
                      "routing_options": {
                        "closed": {
                          "action": "operator",
                          "action_target_id": "2",
                          "action_target_type": "user",
                          "dtmf": [
                            {
                              "input": "0",
                              "options": {
                                "action": "disabled"
                              }
                            },
                            {
                              "input": "1",
                              "options": {
                                "action": "directory"
                              }
                            },
                            {
                              "input": "3",
                              "options": {
                                "action": "voicemail"
                              }
                            }
                          ],
                          "operator_routing": "fixedorder",
                          "try_dial_operators": true
                        },
                        "open": {
                          "action": "menu",
                          "dtmf": [
                            {
                              "input": "0",
                              "options": {
                                "action": "operator"
                              }
                            },
                            {
                              "input": "1",
                              "options": {
                                "action": "directory"
                              }
                            },
                            {
                              "input": "4",
                              "options": {
                                "action": "bridge_target",
                                "action_target_id": "124",
                                "action_target_type": "office"
                              }
                            }
                          ],
                          "operator_routing": "simultaneous",
                          "try_dial_operators": false
                        }
                      },
                      "state": "active",
                      "thursday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "timezone": "US/Pacific",
                      "tuesday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "voice_intelligence": {
                        "allow_pause": false,
                        "auto_start": false
                      },
                      "wednesday_hours": [
                        "08:00",
                        "18:00"
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.group.DepartmentProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Departments-- Create",
        "tags": [
          "departments"
        ]
      }
    },
    "/api/v2/departments/{id}/operators": {
      "delete": {
        "deprecated": false,
        "description": "Removes an operator from a department.\n\nAdded on October 2, 2020 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "departments.operators.delete",
        "parameters": [
          {
            "description": "The department's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.group.RemoveOperatorMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "company_id": "123",
                      "country": "us",
                      "id": "1127",
                      "image_url": "https://dialpad.example.com/avatar/room_contact/1127.png?version=184ac3360af3ab59f685ca5f7ab4c7b1",
                      "is_on_duty": false,
                      "name": "fake-room",
                      "office_id": "124",
                      "phone_numbers": [
                        "+14155551001"
                      ],
                      "state": "active"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.group.UserOrRoomProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Operator -- Remove",
        "tags": [
          "departments"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets operators for a department. Added on May 1, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "departments.operators.get",
        "parameters": [
          {
            "description": "The department's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "rooms": [
                        {
                          "company_id": "123",
                          "country": "us",
                          "id": "1127",
                          "image_url": "https://dialpad.example.com/avatar/room_contact/1127.png?version=184ac3360af3ab59f685ca5f7ab4c7b1",
                          "is_free": false,
                          "is_on_duty": false,
                          "name": "fake-room",
                          "office_id": "124",
                          "phone_numbers": [
                            "+14155551001"
                          ],
                          "state": "active"
                        }
                      ],
                      "users": [
                        {
                          "admin_office_ids": [
                            "124"
                          ],
                          "company_id": "123",
                          "country": "us",
                          "date_active": "2021-06-20T19:18:00",
                          "date_added": "2021-06-20T19:18:00",
                          "date_first_login": "2021-06-20T19:18:00",
                          "display_name": "\u30c6\u00c9st Bot",
                          "do_not_disturb": false,
                          "emails": [
                            "bot@fuzz-ball.com"
                          ],
                          "extension": "20000",
                          "first_name": "\u30c6\u00c9st",
                          "forwarding_numbers": [
                            "+14152301358"
                          ],
                          "group_details": [
                            {
                              "do_not_disturb": false,
                              "group_id": "130",
                              "group_type": "department",
                              "role": "admin"
                            }
                          ],
                          "id": "2",
                          "image_url": "https://dialpad.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIRCxILVXNlclByb2ZpbGUYAgw.png?version=36c0561fb8e0f5765ccfb3a5316f6d5d",
                          "is_admin": true,
                          "is_available": true,
                          "is_on_duty": false,
                          "is_online": false,
                          "is_super_admin": true,
                          "job_title": "Mock Job Title",
                          "language": "en",
                          "last_name": "Bot",
                          "license": "talk",
                          "location": "Mock Location",
                          "muted": false,
                          "office_id": "124",
                          "phone_numbers": [
                            "+14155551001"
                          ],
                          "state": "active",
                          "status_message": "Mock Status",
                          "timezone": "US/Pacific"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.group.OperatorCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Operator -- List",
        "tags": [
          "departments"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Adds an operator to a department.\n\nAdded on October 2, 2020 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "departments.operators.post",
        "parameters": [
          {
            "description": "The department's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.group.AddOperatorMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.group.UserOrRoomProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Operator -- Add",
        "tags": [
          "departments"
        ]
      }
    },
    "/api/v2/faxline": {
      "post": {
        "deprecated": false,
        "description": "Assigns a fax line to a target. Target includes user and department. Depending on the chosen line type, the number will be taken from the company's reserved pool if there are available reserved numbers, otherwise numbers can be auto-assigned using a provided area code.\n\nAdded on January 13, 2025 for API v2.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "faxline.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.faxline.CreateFaxNumberMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.faxline.FaxNumberProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Fax Line -- Assign",
        "tags": [
          "faxline"
        ]
      }
    },
    "/api/v2/numbers/{number}/assign": {
      "post": {
        "deprecated": false,
        "description": "Assigns a number to a target. Target includes user, department, office, room, callcenter,\ncallrouter, staffgroup, channel and coachinggroup. The number will automatically be taken from the company's reserved pool if there are reserved numbers, otherwise a number will be auto-assigned from the provided area code.\n\nAdded on May 26, 2020 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "numbers.assign_number.post",
        "parameters": [
          {
            "description": "A specific number to assign",
            "in": "path",
            "name": "number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.number.AssignNumberTargetMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "area_code": "415",
                      "company_id": "123",
                      "number": "+14155551003",
                      "office_id": "124",
                      "status": "office",
                      "target_id": "124",
                      "target_type": "office",
                      "type": "local"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.number.NumberProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Dialpad Number -- Assign",
        "tags": [
          "numbers"
        ]
      }
    },
    "/api/v2/numbers/assign": {
      "post": {
        "deprecated": false,
        "description": "Assigns a number to a target. The number will automatically be taken from the company's reserved pool if there are reserved numbers, otherwise a number will be auto-assigned from the provided area code. Target includes user, department, office, room, callcenter, callrouter,\nstaffgroup, channel and coachinggroup.\n\nAdded on November 18, 2020 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "numbers.assign_target_number.post",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.number.AssignNumberTargetGenericMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "area_code": "415",
                      "company_id": "123",
                      "number": "+14155551002",
                      "office_id": "124",
                      "status": "user",
                      "target_id": "2",
                      "target_type": "user",
                      "type": "local"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.number.NumberProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Dialpad Number -- Auto-Assign",
        "tags": [
          "numbers"
        ]
      }
    },
    "/api/v2/numbers/{number}": {
      "delete": {
        "deprecated": false,
        "description": "Un-assigns a phone number from a target. The number will be returned to the company's reserved pool if there is one. Otherwise the number will be released.\n\nAdded on Jan 28, 2019 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "numbers.delete",
        "parameters": [
          {
            "description": "A phone number (e164 format).",
            "in": "path",
            "name": "number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Releases the number (does not return it to the company reserved pool).",
            "in": "query",
            "name": "release",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "area_code": "415",
                      "company_id": "123",
                      "number": "+14155551001",
                      "office_id": "124",
                      "status": "available",
                      "type": "local"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.number.NumberProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Dialpad Number -- Unassign",
        "tags": [
          "numbers"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets number details by number.\n\nAdded on May 3, 2018 for API v2.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "numbers.get",
        "parameters": [
          {
            "description": "A phone number (e164 format).",
            "in": "path",
            "name": "number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "area_code": "415",
                      "company_id": "123",
                      "number": "+14155551002",
                      "office_id": "124",
                      "status": "available",
                      "type": "local"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.number.NumberProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Dialpad Number -- Get",
        "tags": [
          "numbers"
        ]
      }
    },
    "/api/v2/numbers": {
      "get": {
        "deprecated": false,
        "description": "Gets all numbers in your company.\n\nAdded on May 3, 2018 for API v2.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "numbers.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Status to filter by.",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "area_code": "415",
                          "company_id": "123",
                          "number": "+14155551000",
                          "office_id": "124",
                          "status": "office",
                          "target_id": "124",
                          "target_type": "office",
                          "type": "local"
                        },
                        {
                          "area_code": "415",
                          "company_id": "123",
                          "number": "+14155551001",
                          "office_id": "124",
                          "status": "user",
                          "target_id": "2",
                          "target_type": "user",
                          "type": "local"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.number.NumberCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Dialpad Number -- List",
        "tags": [
          "numbers"
        ]
      }
    },
    "/api/v2/numbers/swap": {
      "post": {
        "deprecated": false,
        "description": "Swaps a target's primary number with a new one.\n- If a specific number is provided (`type: 'provided_number'`), the target\u2019s primary number is swapped with that number. The provided number must be available in the company\u2019s reserved pool,\nand the `reserve_pool` experiment must be enabled for the company.\n- If an area code is provided (`type: 'area_code'`), an available number from that area code is assigned.\n- If neither is provided (`type: 'auto'`), a number is automatically assigned \u2014 first from the company\u2019s reserved pool (if available), otherwise from the target\u2019s office area code. If no type is specified, 'auto' is used by default.\n\nAdded on Mar 28, 2025 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "numbers.swap_number.post",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.number.SwapNumberMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.number.NumberProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Dialpad Number -- Swap",
        "tags": [
          "numbers"
        ]
      }
    },
    "/api/v2/numbers/format": {
      "post": {
        "deprecated": false,
        "description": "Used to convert local number to E.164 or E.164 to local format.\n\nAdded on June 15, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "format.post",
        "parameters": [
          {
            "description": "Country code in ISO 3166-1 alpha-2 format such as \"US\". Required when sending local formatted phone number",
            "in": "query",
            "name": "country_code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Phone number in local or E.164 format",
            "in": "query",
            "name": "number",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.e164_format.FormatNumberResponse"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Phone String -- Reformat",
        "tags": [
          "numbers"
        ]
      }
    },
    "/oauth2/authorize": {
      "get": {
        "deprecated": false,
        "description": "Initiate the OAuth flow to grant an application access to Dialpad resources on behalf of a user.",
        "operationId": "oauth2.authorize.get",
        "parameters": [
          {
            "description": "PKCE challenge method (hashing algorithm).",
            "in": "query",
            "name": "code_challenge_method",
            "required": false,
            "schema": {
              "enum": [
                "S256",
                "plain"
              ],
              "type": "string"
            }
          },
          {
            "description": "PKCE challenge value (hash commitment).",
            "in": "query",
            "name": "code_challenge",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Space-separated list of additional scopes that should be granted to the vended token.",
            "in": "query",
            "name": "scope",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The OAuth flow to perform. Must be 'code' (authorization code flow).",
            "in": "query",
            "name": "response_type",
            "required": false,
            "schema": {
              "enum": [
                "code"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URI the user should be redirected back to after granting consent to the app.",
            "in": "query",
            "name": "redirect_uri",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The client_id of the OAuth app.",
            "in": "query",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unpredictable token to prevent CSRF.",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful response"
          }
        },
        "summary": "Token -- Authorize",
        "tags": [
          "oauth2"
        ]
      }
    },
    "/oauth2/deauthorize": {
      "post": {
        "deprecated": false,
        "description": "Revokes oauth2 tokens for a given oauth app.",
        "operationId": "oauth2.deauthorize.post",
        "parameters": [],
        "responses": {
          "204": {
            "description": "A successful response"
          }
        },
        "summary": "Token -- Deauthorize",
        "tags": [
          "oauth2"
        ]
      }
    },
    "/oauth2/token": {
      "post": {
        "deprecated": false,
        "description": "Exchanges a temporary oauth code for an authorized access token.",
        "operationId": "oauth2.token.post",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/frontend.schemas.oauth.AuthorizationCodeGrantBodySchema"
                  },
                  {
                    "$ref": "#/components/schemas/frontend.schemas.oauth.RefreshTokenGrantBodySchema"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/frontend.schemas.oauth.AuthorizeTokenResponseBodySchema"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Token -- Redeem",
        "tags": [
          "oauth2"
        ]
      }
    },
    "/api/v2/offices/{office_id}/plan": {
      "get": {
        "deprecated": false,
        "description": "Gets the plan for an office.\n\nAdded on Mar 19, 2019 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "plan.get",
        "parameters": [
          {
            "description": "The office's id.",
            "in": "path",
            "name": "office_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "additional_number_lines": "0",
                      "balance": "10.0000",
                      "contact_center_lines": "0",
                      "fax_lines": "0",
                      "ppu_address": {
                        "address_line_2": "",
                        "city": "SAN FRANCISCO",
                        "country": "us",
                        "postal_code": "94111",
                        "region": "CA"
                      },
                      "room_lines": "0",
                      "sell_lines": "0",
                      "talk_lines": "0",
                      "tollfree_additional_number_lines": "0",
                      "tollfree_room_lines": "0",
                      "tollfree_uberconference_lines": "0",
                      "uberconference_lines": "0"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.plan.PlanProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Billing Plan -- Get",
        "tags": [
          "offices"
        ]
      }
    },
    "/api/v2/offices/{office_id}/callcenters": {
      "get": {
        "deprecated": false,
        "description": "Gets all the call centers for an office. Added on May 1, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "callcenters.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The office's id.",
            "in": "path",
            "name": "office_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "advanced_settings": {
                            "auto_call_recording": {
                              "call_recording_inbound": false,
                              "call_recording_outbound": false
                            },
                            "max_wrap_up_seconds": "0"
                          },
                          "alerts": {
                            "cc_service_level": "95",
                            "cc_service_level_seconds": "60"
                          },
                          "availability_status": "open",
                          "country": "us",
                          "first_action": "operators",
                          "friday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "hold_queue": {
                            "announce_position": true,
                            "announcement_interval_seconds": "120",
                            "max_hold_count": "50",
                            "max_hold_seconds": "900",
                            "queue_callback_dtmf": "9",
                            "queue_callback_threshold": "5",
                            "queue_escape_dtmf": "*"
                          },
                          "hours_on": false,
                          "id": "1000",
                          "monday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "name": "call center 2049",
                          "no_operators_action": "voicemail",
                          "office_id": "124",
                          "phone_numbers": [
                            "+14155551001"
                          ],
                          "ring_seconds": "30",
                          "routing_options": {
                            "closed": {
                              "action": "voicemail",
                              "dtmf": [
                                {
                                  "input": "0",
                                  "options": {
                                    "action": "disabled"
                                  }
                                },
                                {
                                  "input": "1",
                                  "options": {
                                    "action": "directory"
                                  }
                                }
                              ],
                              "operator_routing": "longestidle",
                              "try_dial_operators": false
                            },
                            "open": {
                              "action": "department",
                              "action_target_id": "130",
                              "action_target_type": "department",
                              "dtmf": [
                                {
                                  "input": "0",
                                  "options": {
                                    "action": "operator"
                                  }
                                },
                                {
                                  "input": "1",
                                  "options": {
                                    "action": "department",
                                    "action_target_id": "124",
                                    "action_target_type": "office"
                                  }
                                }
                              ],
                              "operator_routing": "longestidle",
                              "try_dial_operators": true
                            }
                          },
                          "state": "active",
                          "thursday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "timezone": "US/Pacific",
                          "tuesday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "voice_intelligence": {
                            "allow_pause": true,
                            "auto_start": true
                          },
                          "wednesday_hours": [
                            "08:00",
                            "18:00"
                          ]
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.group.CallCenterCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Centers -- List",
        "tags": [
          "offices"
        ]
      }
    },
    "/api/v2/offices/{office_id}/teams": {
      "get": {
        "deprecated": false,
        "description": "Get a list of coaching teams of a office. Added on Jul 30th, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "coaching_team.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The office's id.",
            "in": "path",
            "name": "office_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "allow_trainee_eavesdrop": true,
                          "company_id": "123",
                          "country": "us",
                          "id": "1001",
                          "name": "team_name",
                          "office_id": "124",
                          "state": "active"
                        },
                        {
                          "allow_trainee_eavesdrop": true,
                          "company_id": "123",
                          "country": "us",
                          "id": "1130",
                          "name": "team_name2",
                          "office_id": "124",
                          "state": "active"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.coaching_team.CoachingTeamCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Coaching Team -- List",
        "tags": [
          "offices"
        ]
      }
    },
    "/api/v2/offices/{office_id}/departments": {
      "get": {
        "deprecated": false,
        "description": "Gets all the departments for an office. Added on May 1, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "departments.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The office's id.",
            "in": "path",
            "name": "office_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "auto_call_recording": false,
                          "availability_status": "open",
                          "country": "us",
                          "first_action": "operators",
                          "friday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "hold_queue": {
                            "max_hold_count": "50",
                            "max_hold_seconds": "900"
                          },
                          "hours_on": false,
                          "id": "130",
                          "monday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "name": "Sales",
                          "no_operators_action": "voicemail",
                          "office_id": "124",
                          "phone_numbers": [
                            "+14155551001"
                          ],
                          "ring_seconds": "30",
                          "routing_options": {
                            "closed": {
                              "action": "voicemail",
                              "dtmf": [
                                {
                                  "input": "0",
                                  "options": {
                                    "action": "disabled"
                                  }
                                },
                                {
                                  "input": "1",
                                  "options": {
                                    "action": "directory"
                                  }
                                }
                              ],
                              "operator_routing": "simultaneous",
                              "try_dial_operators": false
                            },
                            "open": {
                              "action": "department",
                              "action_target_id": "130",
                              "action_target_type": "department",
                              "dtmf": [
                                {
                                  "input": "0",
                                  "options": {
                                    "action": "operator"
                                  }
                                },
                                {
                                  "input": "1",
                                  "options": {
                                    "action": "department",
                                    "action_target_id": "124",
                                    "action_target_type": "office"
                                  }
                                }
                              ],
                              "operator_routing": "simultaneous",
                              "try_dial_operators": true
                            }
                          },
                          "state": "active",
                          "thursday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "timezone": "US/Pacific",
                          "tuesday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "voice_intelligence": {
                            "allow_pause": true,
                            "auto_start": true
                          },
                          "wednesday_hours": [
                            "08:00",
                            "18:00"
                          ]
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.group.DepartmentCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Department -- List",
        "tags": [
          "offices"
        ]
      }
    },
    "/api/v2/offices/{id}/assign_number": {
      "post": {
        "deprecated": false,
        "description": "Assigns a number to a office. The number will automatically be taken from the company's reserved pool if there are reserved numbers, otherwise a number will be auto-assigned from the provided area code.\n\nAdded on March 19, 2019 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "numbers.assign_office_number.post",
        "parameters": [
          {
            "description": "The office's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.number.AssignNumberMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "area_code": "604",
                      "company_id": "123",
                      "number": "+16045551002",
                      "office_id": "124",
                      "status": "office",
                      "target_id": "124",
                      "target_type": "office",
                      "type": "local"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.number.NumberProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Dialpad Number -- Assign",
        "tags": [
          "offices"
        ]
      }
    },
    "/api/v2/offices/{id}/unassign_number": {
      "post": {
        "deprecated": false,
        "description": "Un-assigns a phone number from a office mainline. The number will be returned to the company's reserved pool if there is one. Otherwise the number will be released.\n\nAdded on March 19, 2019 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "numbers.office_unassign_number.post",
        "parameters": [
          {
            "description": "The office's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.number.UnassignNumberMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "deleted": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.number.NumberProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Dialpad Number -- Unassign",
        "tags": [
          "offices"
        ]
      }
    },
    "/api/v2/offices/{id}/e911": {
      "get": {
        "deprecated": false,
        "description": "Gets E911 address of the office by office id.\n\nAdded on May 25, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "offices.e911.get",
        "parameters": [
          {
            "description": "The office's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "address": "3001 BISHOP DR",
                      "address2": "ste 120",
                      "city": "SAN RAMON",
                      "country": "us",
                      "state": "ca",
                      "zip": "94583"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.office.E911GetProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "E911 Address -- Get",
        "tags": [
          "offices"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update E911 address of the given office.\n\nAdded on May 25, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "offices.e911.update",
        "parameters": [
          {
            "description": "The office's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.office.E911UpdateMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "address": "3001 BISHOP DR",
                      "address2": "ste 120",
                      "city": "SAN RAMON",
                      "country": "us",
                      "state": "ca",
                      "zip": "94583"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.office.E911GetProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "E911 Address -- Update",
        "tags": [
          "offices"
        ]
      }
    },
    "/api/v2/offices/{office_id}/available_licenses": {
      "get": {
        "deprecated": false,
        "description": "Gets the available licenses for an office.\n\nAdded on July 2, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "plan.available_licenses.get",
        "parameters": [
          {
            "description": "The office's id.",
            "in": "path",
            "name": "office_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "additional_number_lines": "0",
                      "contact_center_lines": "0",
                      "fax_lines": "1",
                      "room_lines": "5",
                      "sell_lines": "0",
                      "talk_lines": "4",
                      "tollfree_additional_number_lines": "0",
                      "tollfree_room_lines": "0",
                      "uberconference_lines": "0"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.plan.AvailableLicensesProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Licenses -- List Available",
        "tags": [
          "offices"
        ]
      }
    },
    "/api/v2/offices/{id}/offdutystatuses": {
      "get": {
        "deprecated": false,
        "description": "Lists Off-Duty status values.\n\nRate limit: 1200 per minute.",
        "operationId": "offices.offdutystatuses.get",
        "parameters": [
          {
            "description": "The office's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "id": "124",
                      "off_duty_statuses": [
                        "Lunch Time",
                        "Off Duty"
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.office.OffDutyStatusesProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Off-Duty Status -- List",
        "tags": [
          "offices"
        ]
      }
    },
    "/api/v2/offices/{id}": {
      "get": {
        "deprecated": false,
        "description": "Gets an office by id.\n\nAdded on May 1, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "offices.get",
        "parameters": [
          {
            "description": "The office's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "availability_status": "open",
                      "country": "us",
                      "e911_address": {
                        "address": "address",
                        "city": "city",
                        "country": "us",
                        "state": "state",
                        "zip": "94111"
                      },
                      "first_action": "operators",
                      "friday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "id": "124",
                      "is_primary_office": true,
                      "monday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "name": "\u30d5\u30a1\u30fc\u30b8\u30fc\u3000\u30dc\u30fc\u30eb, Inc",
                      "no_operators_action": "voicemail",
                      "office_id": "124",
                      "office_settings": {
                        "allow_device_guest_login": false,
                        "block_caller_id_disabled": false,
                        "bridged_target_recording_allowed": true,
                        "disable_desk_phone_self_provision": false,
                        "disable_ivr_voicemail": false,
                        "no_recording_message_on_user_calls": false,
                        "set_caller_id_disabled": false
                      },
                      "phone_numbers": [
                        "+14155551000"
                      ],
                      "ring_seconds": "30",
                      "routing_options": {
                        "closed": {
                          "action": "voicemail",
                          "dtmf": [
                            {
                              "input": "0",
                              "options": {
                                "action": "disabled"
                              }
                            },
                            {
                              "input": "1",
                              "options": {
                                "action": "directory"
                              }
                            }
                          ],
                          "operator_routing": "simultaneous",
                          "try_dial_operators": false
                        },
                        "open": {
                          "action": "department",
                          "action_target_id": "130",
                          "action_target_type": "department",
                          "dtmf": [
                            {
                              "input": "0",
                              "options": {
                                "action": "operator"
                              }
                            },
                            {
                              "input": "1",
                              "options": {
                                "action": "department",
                                "action_target_id": "124",
                                "action_target_type": "office"
                              }
                            }
                          ],
                          "operator_routing": "simultaneous",
                          "try_dial_operators": true
                        }
                      },
                      "state": "active",
                      "thursday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "timezone": "US/Pacific",
                      "tuesday_hours": [
                        "08:00",
                        "18:00"
                      ],
                      "wednesday_hours": [
                        "08:00",
                        "18:00"
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.office.OfficeProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Office -- Get",
        "tags": [
          "offices"
        ]
      }
    },
    "/api/v2/offices": {
      "get": {
        "deprecated": false,
        "description": "Gets all the offices that are accessible using your api key.\n\nAdded on May 1, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "offices.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether we only return active offices.",
            "in": "query",
            "name": "active_only",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "availability_status": "open",
                          "country": "us",
                          "e911_address": {
                            "address": "address",
                            "city": "city",
                            "country": "us",
                            "state": "state",
                            "zip": "94111"
                          },
                          "first_action": "operators",
                          "friday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "id": "124",
                          "is_primary_office": true,
                          "monday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "name": "\u30d5\u30a1\u30fc\u30b8\u30fc\u3000\u30dc\u30fc\u30eb, Inc",
                          "no_operators_action": "voicemail",
                          "office_id": "124",
                          "office_settings": {
                            "allow_device_guest_login": false,
                            "block_caller_id_disabled": false,
                            "bridged_target_recording_allowed": true,
                            "disable_desk_phone_self_provision": false,
                            "disable_ivr_voicemail": false,
                            "no_recording_message_on_user_calls": false,
                            "set_caller_id_disabled": false
                          },
                          "phone_numbers": [
                            "+14155551000"
                          ],
                          "ring_seconds": "30",
                          "routing_options": {
                            "closed": {
                              "action": "voicemail",
                              "dtmf": [
                                {
                                  "input": "0",
                                  "options": {
                                    "action": "disabled"
                                  }
                                },
                                {
                                  "input": "1",
                                  "options": {
                                    "action": "directory"
                                  }
                                }
                              ],
                              "operator_routing": "simultaneous",
                              "try_dial_operators": false
                            },
                            "open": {
                              "action": "department",
                              "action_target_id": "130",
                              "action_target_type": "department",
                              "dtmf": [
                                {
                                  "input": "0",
                                  "options": {
                                    "action": "operator"
                                  }
                                },
                                {
                                  "input": "1",
                                  "options": {
                                    "action": "department",
                                    "action_target_id": "124",
                                    "action_target_type": "office"
                                  }
                                }
                              ],
                              "operator_routing": "simultaneous",
                              "try_dial_operators": true
                            }
                          },
                          "state": "active",
                          "thursday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "timezone": "US/Pacific",
                          "tuesday_hours": [
                            "08:00",
                            "18:00"
                          ],
                          "wednesday_hours": [
                            "08:00",
                            "18:00"
                          ]
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.office.OfficeCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Office -- List",
        "tags": [
          "offices"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "\n\nRate limit: 1200 per minute.",
        "operationId": "offices.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.office.CreateOfficeMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.office.OfficeUpdateResponse"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Office -- POST Creates a secondary office.",
        "tags": [
          "offices"
        ]
      }
    },
    "/api/v2/offices/{id}/operators": {
      "delete": {
        "deprecated": false,
        "description": "Removes an operator from office's mainline.\n\nAdded on Sep 22, 2023 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "offices.operators.delete",
        "parameters": [
          {
            "description": "The office's ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.group.RemoveOperatorMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.group.UserOrRoomProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Operator -- Remove",
        "tags": [
          "offices"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets mainline operators for an office. Added on May 1, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "offices.operators.get",
        "parameters": [
          {
            "description": "The office's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "users": [
                        {
                          "admin_office_ids": [
                            "124"
                          ],
                          "company_id": "123",
                          "country": "us",
                          "date_active": "2021-06-20T19:18:00",
                          "date_added": "2021-06-20T19:18:00",
                          "date_first_login": "2021-06-20T19:18:00",
                          "display_name": "\u30c6\u00c9st Bot",
                          "do_not_disturb": false,
                          "emails": [
                            "bot@fuzz-ball.com"
                          ],
                          "extension": "20000",
                          "first_name": "\u30c6\u00c9st",
                          "forwarding_numbers": [
                            "+14152301358"
                          ],
                          "group_details": [
                            {
                              "do_not_disturb": false,
                              "group_id": "124",
                              "group_type": "office",
                              "role": "admin"
                            }
                          ],
                          "id": "2",
                          "image_url": "https://dialpad.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIRCxILVXNlclByb2ZpbGUYAgw.png?version=36c0561fb8e0f5765ccfb3a5316f6d5d",
                          "international_dialing_enabled": false,
                          "is_admin": true,
                          "is_available": true,
                          "is_on_duty": false,
                          "is_online": false,
                          "is_super_admin": true,
                          "job_title": "Mock Job Title",
                          "language": "en",
                          "last_name": "Bot",
                          "license": "talk",
                          "location": "Mock Location",
                          "muted": false,
                          "office_id": "124",
                          "phone_numbers": [
                            "+14155551001"
                          ],
                          "state": "active",
                          "status_message": "Mock Status",
                          "timezone": "US/Pacific"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.group.OperatorCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Operator -- List",
        "tags": [
          "offices"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Adds an operator into office's mainline.\n\nAdded on Sep 22, 2023 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "offices.operators.post",
        "parameters": [
          {
            "description": "The office's ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.group.AddOperatorMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.group.UserOrRoomProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Operator -- Add",
        "tags": [
          "offices"
        ]
      }
    },
    "/api/v2/recordingsharelink": {
      "post": {
        "deprecated": false,
        "description": "Creates a recording share link.\n\nAdded on Aug 26, 2021 for API v2.\n\nRate limit: 100 per minute.",
        "operationId": "recording_share_link.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.recording_share_link.CreateRecordingShareLink",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "access_link": "https://dialpad.example.com/recording/voicemail/l335pbEHG75xyw9zLaedu1ujLxPr5xFpa4g5HpdOgvbE",
                      "call_id": "1006",
                      "created_by_id": "2",
                      "date_added": "2013-01-01T00:00:00",
                      "id": "l335pbEHG75xyw9zLaedu1ujLxPr5xFpa4g5HpdOgvbE",
                      "item_id": "uuid-+14155558888-1",
                      "privacy": "owner",
                      "type": "voicemail"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.recording_share_link.RecordingShareLink"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Recording Sharelink -- Create",
        "tags": [
          "recordingsharelink"
        ]
      }
    },
    "/api/v2/recordingsharelink/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a recording share link by id.\n\nAdded on Aug 26, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "recording_share_link.delete",
        "parameters": [
          {
            "description": "The recording share link's ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "access_link": "https://dialpad.example.com/recording/voicemail/VwJDwUByepqAEtBGgU6TNVqcI7pktNtWmkJRp8ysGQrm",
                      "call_id": "1000",
                      "created_by_id": "2",
                      "date_added": "2013-01-01T00:00:00",
                      "id": "VwJDwUByepqAEtBGgU6TNVqcI7pktNtWmkJRp8ysGQrm",
                      "item_id": "uuid-+14155557777-1",
                      "privacy": "public",
                      "type": "voicemail"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.recording_share_link.RecordingShareLink"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Recording Sharelink -- Delete",
        "tags": [
          "recordingsharelink"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets a recording share link by id.\n\nAdded on Aug 26, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "recording_share_link.get",
        "parameters": [
          {
            "description": "The recording share link's ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "access_link": "https://dialpad.example.com/recording/voicemail/VwJDwUByepqAEtBGgU6TNVqcI7pktNtWmkJRp8ysGQrm",
                      "call_id": "1000",
                      "created_by_id": "2",
                      "date_added": "2013-01-01T00:00:00",
                      "id": "VwJDwUByepqAEtBGgU6TNVqcI7pktNtWmkJRp8ysGQrm",
                      "item_id": "uuid-+14155557777-1",
                      "privacy": "owner",
                      "type": "voicemail"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.recording_share_link.RecordingShareLink"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Recording Sharelink -- Get",
        "tags": [
          "recordingsharelink"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Updates a recording share link by id.\n\nAdded on Aug 26, 2021 for API v2.\n\nRate limit: 100 per minute.",
        "operationId": "recording_share_link.update",
        "parameters": [
          {
            "description": "The recording share link's ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.recording_share_link.UpdateRecordingShareLink",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "access_link": "https://dialpad.example.com/recording/voicemail/VwJDwUByepqAEtBGgU6TNVqcI7pktNtWmkJRp8ysGQrm",
                      "call_id": "1000",
                      "created_by_id": "2",
                      "date_added": "2013-01-01T00:00:00",
                      "id": "VwJDwUByepqAEtBGgU6TNVqcI7pktNtWmkJRp8ysGQrm",
                      "item_id": "uuid-+14155557777-1",
                      "privacy": "company",
                      "type": "voicemail"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.recording_share_link.RecordingShareLink"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Recording Sharelink -- Update",
        "tags": [
          "recordingsharelink"
        ]
      }
    },
    "/api/v2/rooms/{id}/assign_number": {
      "post": {
        "deprecated": false,
        "description": "Assigns a number to a room. The number will automatically be taken from the company's reserved block if there are reserved numbers, otherwise a number will be auto-assigned from the provided area code.\n\nAdded on March 19, 2019 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "numbers.assign_room_number.post",
        "parameters": [
          {
            "description": "The room's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.number.AssignNumberMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "area_code": "604",
                      "company_id": "123",
                      "number": "+16045551003",
                      "office_id": "124",
                      "status": "room",
                      "target_id": "1000",
                      "target_type": "room",
                      "type": "local"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.number.NumberProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Dialpad Number -- Assign",
        "tags": [
          "rooms"
        ]
      }
    },
    "/api/v2/rooms/{id}/unassign_number": {
      "post": {
        "deprecated": false,
        "description": "Un-assigns a phone number from a room. The number will be returned to the company's reserved pool if there is one. Otherwise the number will be released.\n\nAdded on March 19, 2019 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "numbers.room_unassign_number.post",
        "parameters": [
          {
            "description": "The room's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.number.UnassignNumberMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "deleted": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.number.NumberProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Dialpad Number -- Unassign",
        "tags": [
          "rooms"
        ]
      }
    },
    "/api/v2/rooms/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a room by id.\n\nAdded on Mar 8, 2019 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "rooms.delete",
        "parameters": [
          {
            "description": "The room's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "company_id": "123",
                      "country": "us",
                      "id": "1000",
                      "image_url": "https://dialpad.example.com/avatar/room_contact/1000.png?version=e7bd09045d55362221e538a25a7f1891",
                      "is_free": false,
                      "is_on_duty": false,
                      "name": "Blackcomb",
                      "office_id": "124",
                      "state": "pending"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.room.RoomProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Room -- Delete",
        "tags": [
          "rooms"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets a room by id.\n\nAdded on Aug 13, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "rooms.get",
        "parameters": [
          {
            "description": "The room's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "company_id": "123",
                      "country": "us",
                      "id": "1001",
                      "image_url": "https://dialpad.example.com/avatar/room_contact/1001.png?version=1ab1c29014c30c2a5d6258f673dbdf19",
                      "is_free": false,
                      "is_on_duty": false,
                      "name": "Boulevard",
                      "office_id": "124",
                      "phone_numbers": [
                        "+14155551003"
                      ],
                      "state": "active"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.room.RoomProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Room -- Get",
        "tags": [
          "rooms"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Updates room details by id.\n\nAdded on Mar 8, 2019 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "rooms.patch",
        "parameters": [
          {
            "description": "The room's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.room.UpdateRoomMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "company_id": "123",
                      "country": "us",
                      "id": "1000",
                      "image_url": "https://dialpad.example.com/avatar/room_contact/1000.png?version=e7bd09045d55362221e538a25a7f1891",
                      "is_free": false,
                      "is_on_duty": false,
                      "name": "Blackcomb",
                      "office_id": "124",
                      "state": "pending"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.room.RoomProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Room -- Update",
        "tags": [
          "rooms"
        ]
      }
    },
    "/api/v2/rooms": {
      "get": {
        "deprecated": false,
        "description": "Gets all rooms in your company, optionally filtering by office.\n\nAdded on Aug 13, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "rooms.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The office's id.",
            "in": "query",
            "name": "office_id",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "company_id": "123",
                          "country": "us",
                          "id": "1000",
                          "image_url": "https://dialpad.example.com/avatar/room_contact/1000.png?version=5494b35020bb8a92d06d338b3b2cfd80",
                          "is_free": false,
                          "is_on_duty": false,
                          "name": "Seaside",
                          "office_id": "124",
                          "phone_numbers": [
                            "+14155551002"
                          ],
                          "state": "active"
                        },
                        {
                          "company_id": "123",
                          "country": "us",
                          "id": "1001",
                          "image_url": "https://dialpad.example.com/avatar/room_contact/1001.png?version=1ab1c29014c30c2a5d6258f673dbdf19",
                          "is_free": false,
                          "is_on_duty": false,
                          "name": "Boulevard",
                          "office_id": "124",
                          "phone_numbers": [
                            "+14155551003"
                          ],
                          "state": "active"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.room.RoomCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Room -- List",
        "tags": [
          "rooms"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a new room.\n\nAdded on Mar 8, 2019 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "rooms.post",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.room.CreateRoomMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "company_id": "123",
                      "country": "us",
                      "id": "1000",
                      "image_url": "https://dialpad.example.com/avatar/room_contact/1000.png?version=74c29ceb0dbe5ebf5c2cd0742e283727",
                      "is_free": false,
                      "is_on_duty": false,
                      "name": "Whistler",
                      "office_id": "124",
                      "state": "pending"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.room.RoomProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Room -- Create",
        "tags": [
          "rooms"
        ]
      }
    },
    "/api/v2/rooms/international_pin": {
      "post": {
        "deprecated": false,
        "description": "Assigns a PIN for making international calls from rooms\n\nWhen PIN protected international calls are enabled for the company, a PIN is required to make international calls from room phones.\n\nAdded on Aug 16, 2018 for API v2.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "deskphones.rooms.create_international_pin",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.room.CreateInternationalPinProto",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "customer_ref": "we_work_user",
                      "expires_on": "2013-01-01T00:30:00",
                      "pin": "84442"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.room.InternationalPinProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Room Phone -- Assign PIN",
        "tags": [
          "rooms"
        ]
      }
    },
    "/api/v2/rooms/{parent_id}/deskphones/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a room desk phone by id. Added on May 17, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "deskphones.rooms.delete",
        "parameters": [
          {
            "description": "The desk phone's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The room's id.",
            "in": "path",
            "name": "parent_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response"
          }
        },
        "summary": "Room Phone -- Delete",
        "tags": [
          "rooms"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets a room desk phone by id. Added on May 17, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "deskphones.rooms.get",
        "parameters": [
          {
            "description": "The desk phone's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The room's id.",
            "in": "path",
            "name": "parent_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "byod": false,
                      "id": "+14155551002-room-1000-obi-hex_ce3e13a487",
                      "mac_address": "9cadefa00096",
                      "name": "Test Obihai",
                      "owner_id": "1000",
                      "owner_type": "room",
                      "port": "7060",
                      "realm": "uvstaging.ubervoip.net",
                      "ring_notification": true,
                      "type": "obi"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.deskphone.DeskPhone"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Room Phone -- Get",
        "tags": [
          "rooms"
        ]
      }
    },
    "/api/v2/rooms/{parent_id}/deskphones": {
      "get": {
        "deprecated": false,
        "description": "Gets all desk phones under a room. Added on May 17, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "deskphones.rooms.list",
        "parameters": [
          {
            "description": "The room's id.",
            "in": "path",
            "name": "parent_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "byod": false,
                          "id": "+14155551002-room-1000-obi-hex_ce3e13a487",
                          "mac_address": "9cadefa00096",
                          "name": "Test Obihai",
                          "owner_id": "1000",
                          "owner_type": "room",
                          "port": "7060",
                          "realm": "uvstaging.ubervoip.net",
                          "ring_notification": true,
                          "type": "obi"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.deskphone.DeskPhoneCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Room Phone -- List",
        "tags": [
          "rooms"
        ]
      }
    },
    "/api/v2/schedulereports/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a schedule report subscription by id. A schedule report is a mechanism to schedule daily, weekly or monthly record and statistics reports.\n\nAdded on Jul 6, 2022 for API v2\n\nRate limit: 1200 per minute.",
        "operationId": "schedule_reports.delete",
        "parameters": [
          {
            "description": "The schedule reports subscription's ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.schedule_reports.ScheduleReportsStatusEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Schedule reports -- Delete",
        "tags": [
          "schedulereports"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets a schedule report subscription by id. A schedule report is a mechanism to schedule daily, weekly or monthly record and statistics reports.\n\nAdded on Jul 6, 2022 for API v2\n\nRate limit: 1200 per minute.",
        "operationId": "schedule_reports.get",
        "parameters": [
          {
            "description": "The schedule reports subscription's ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.schedule_reports.ScheduleReportsStatusEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Schedule reports -- Get",
        "tags": [
          "schedulereports"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Updates a schedule report subscription by id. A schedule report is a mechanism to schedule daily, weekly or monthly record and statistics reports.\n\nAdded on Jul 6, 2022 for API v2\n\nRate limit: 1200 per minute.",
        "operationId": "schedule_reports.update",
        "parameters": [
          {
            "description": "The schedule reports subscription's ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.schedule_reports.ProcessScheduleReportsMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.schedule_reports.ScheduleReportsStatusEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Schedule reports -- Update",
        "tags": [
          "schedulereports"
        ]
      }
    },
    "/api/v2/schedulereports": {
      "get": {
        "deprecated": false,
        "description": "Lists all schedule reports subscription for a company. A schedule report is a mechanism to schedule daily, weekly or monthly record and statistics reports.\n\nAdded on Jul 6, 2022 for API v2\n\nRate limit: 1200 per minute.",
        "operationId": "schedule_reports.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.schedule_reports.ScheduleReportsCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Schedule reports -- List",
        "tags": [
          "schedulereports"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a schedule reports subscription for your company. An endpoint_id is required in order to receive the event payload and can be obtained via websockets or webhooks. A schedule reports is a mechanism to schedule daily, weekly or monthly record and statistics reports.\n\nAdded on Jun 17, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "schedule_reports.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.schedule_reports.ProcessScheduleReportsMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.schedule_reports.ScheduleReportsStatusEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "schedule reports -- Create",
        "tags": [
          "schedulereports"
        ]
      }
    },
    "/api/v2/sms": {
      "post": {
        "deprecated": false,
        "description": "Sends an SMS message to a phone number or to a Dialpad channel on behalf of a user.\n\nAdded on Dec 18, 2019 for API v2.\n\nTier 0 Rate limit: 100 per minute.\n\nTier 1 Rate limit: 800 per minute.\n\n",
        "operationId": "sms.send",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.sms.SendSMSMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "contact_id": "1000",
                      "created_date": "2013-01-01T00:00:00",
                      "device_type": "public_api",
                      "direction": "outbound",
                      "from_number": "+14155551001",
                      "id": "1004",
                      "message_status": "pending",
                      "target_id": "2",
                      "target_type": "user",
                      "text": "Test text",
                      "to_numbers": [
                        "+14155557777"
                      ],
                      "user_id": "2"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.sms.SMSProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "SMS -- Send",
        "tags": [
          "sms"
        ]
      }
    },
    "/api/v2/stats/{id}": {
      "get": {
        "deprecated": false,
        "description": "Gets the progress and result of a statistics request.\n\nAdded on May 3, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "stats.get",
        "parameters": [
          {
            "description": "Request ID returned by a POST /stats request.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "status": "processing"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.stats.StatsProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Stats -- Get Result",
        "tags": [
          "stats"
        ]
      }
    },
    "/api/v2/stats": {
      "post": {
        "deprecated": false,
        "description": "Begins processing statistics asynchronously, returning a request id to get the status and retrieve the results by calling GET /stats/{request_id}.\n\nStats for the whole company will be processed by default. An office_id can be provided to limit stats to a single office. A target_id and target_type can be provided to limit stats to a single target.\n\nAdded on May 3, 2018 for API v2.\n\nRate limit: 200 per hour.",
        "operationId": "stats.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.stats.ProcessStatsMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.stats.ProcessingProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Stats -- Initiate Processing",
        "tags": [
          "stats"
        ]
      }
    },
    "/api/v2/subscriptions/agent_status": {
      "get": {
        "deprecated": false,
        "description": "Gets a list of all the agent status event subscriptions of a company.\n\nAdded on May 7th, 2021 for API v2.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_agent_status_event_subscription.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "agent_type": "callcenter",
                          "enabled": true,
                          "id": "1001",
                          "webhook": {
                            "hook_url": "https://test.com",
                            "id": "1000",
                            "signature": {
                              "algo": "HS256",
                              "secret": "puppy",
                              "type": "jwt"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.agent_status_event_subscription.AgentStatusEventSubscriptionCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Agent Status -- List",
        "tags": [
          "subscriptions"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates an agent status event subscription for your company. A webhook_id is required so that we know to which url the events shall be sent. Please be aware that only call center agent is supported for agent event subscription now.\n\nSee https://developers.dialpad.com/docs/agent-status-events for details on how agent status events work, including the payload structure and payload examples.\n\nAdded on May 7th, 2021 for API v2.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_agent_status_event_subscription.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.agent_status_event_subscription.CreateAgentStatusEventSubscription",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "agent_type": "callcenter",
                      "enabled": true,
                      "id": "1001",
                      "webhook": {
                        "hook_url": "https://test.com",
                        "id": "1000",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.agent_status_event_subscription.AgentStatusEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Agent Status -- Create",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/v2/subscriptions/agent_status/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes an agent status event subscription by id.\n\nAdded on May 7th, 2021 for API v2.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_agent_status_event_subscription.delete",
        "parameters": [
          {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "agent_type": "callcenter",
                      "enabled": true,
                      "id": "1001",
                      "webhook": {
                        "hook_url": "https://test2.com",
                        "id": "1002",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.agent_status_event_subscription.AgentStatusEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Agent Status -- Delete",
        "tags": [
          "subscriptions"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets an agent status event subscription by id.\n\nAdded on May 7th, 2021 for API v2.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_agent_status_event_subscription.get",
        "parameters": [
          {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "agent_type": "callcenter",
                      "enabled": true,
                      "id": "1001",
                      "webhook": {
                        "hook_url": "https://test.com",
                        "id": "1000",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.agent_status_event_subscription.AgentStatusEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Agent Status -- Get",
        "tags": [
          "subscriptions"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Updates an agent status event subscription by id.\n\nAdded on May 7th, 2021 for API v2.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_agent_status_event_subscription.update",
        "parameters": [
          {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.agent_status_event_subscription.UpdateAgentStatusEventSubscription",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "agent_type": "callcenter",
                      "enabled": true,
                      "id": "1001",
                      "webhook": {
                        "hook_url": "https://test2.com",
                        "id": "1002",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.agent_status_event_subscription.AgentStatusEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Agent Status -- Update",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/v2/subscriptions/call": {
      "get": {
        "deprecated": false,
        "description": "Gets a list of all the call event subscriptions of a company or of a target.\n\nAdded on April 23rd, 2021 for API v2.\n\nNOTE: See https://developers.dialpad.com/v1.0-archive/reference for APIs that can operate on subscriptions that were created via the deprecated APIs.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_call_event_subscription.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Target's type.",
            "in": "query",
            "name": "target_type",
            "required": false,
            "schema": {
              "enum": [
                "callcenter",
                "callrouter",
                "channel",
                "coachinggroup",
                "coachingteam",
                "department",
                "office",
                "room",
                "staffgroup",
                "unknown",
                "user"
              ],
              "type": "string"
            }
          },
          {
            "description": "The target's id.",
            "in": "query",
            "name": "target_id",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "call_states": [
                            "barge",
                            "hangup",
                            "recording"
                          ],
                          "enabled": true,
                          "group_calls_only": true,
                          "id": "1001",
                          "webhook": {
                            "hook_url": "https://test.com",
                            "id": "1000",
                            "signature": {
                              "algo": "HS256",
                              "secret": "puppy",
                              "type": "jwt"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.call_event_subscription.CallEventSubscriptionCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Event -- List",
        "tags": [
          "subscriptions"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a call event subscription. A webhook_id is required so that we know to which url the events shall be sent. Call states can be used to limit the states for which call events are sent. A target_type and target_id may optionally be provided to scope the events only to the calls to/from that target.\n\nSee https://developers.dialpad.com/docs/call-events-logging for details on how call events work,\nincluding the payload structure, the meaning of different call states, and payload examples.\n\nNote: **To include the recording url in call events, your API key needs to have the\n\"recordings_export\" OAuth scope. For Dialpad Meetings call events, your API key needs to have the \"conference:all\" OAuth scope.**\n\nAdded on April 23rd, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_call_event_subscription.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.call_event_subscription.CreateCallEventSubscription",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "call_states": [
                        "barge",
                        "hangup",
                        "recording"
                      ],
                      "enabled": true,
                      "group_calls_only": true,
                      "id": "1001",
                      "webhook": {
                        "hook_url": "https://test.com",
                        "id": "1000",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.call_event_subscription.CallEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Event -- Create",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/v2/subscriptions/call/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a call event subscription by id.\n\nAdded on April 23rd, 2021 for API v2.\n\nNOTE: See https://developers.dialpad.com/v1.0-archive/reference for APIs that can operate on subscriptions that were created via the deprecated APIs.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_call_event_subscription.delete",
        "parameters": [
          {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "call_states": [
                        "calling"
                      ],
                      "enabled": true,
                      "group_calls_only": false,
                      "id": "1001",
                      "webhook": {
                        "hook_url": "https://test.com",
                        "id": "1000",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.call_event_subscription.CallEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Event -- Delete",
        "tags": [
          "subscriptions"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets a call event subscription by id.\n\nAdded on April 23rd, 2021 for API v2.\n\nNOTE: See https://developers.dialpad.com/v1.0-archive/reference for APIs that can operate on subscriptions that were created via the deprecated APIs.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_call_event_subscription.get",
        "parameters": [
          {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "call_states": [
                        "barge",
                        "hangup",
                        "recording"
                      ],
                      "enabled": true,
                      "group_calls_only": true,
                      "id": "1001",
                      "webhook": {
                        "hook_url": "https://test.com",
                        "id": "1000",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.call_event_subscription.CallEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Event -- Get",
        "tags": [
          "subscriptions"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Updates a call event subscription by id.\n\nAdded on April 23rd, 2021 for API v2.\n\nNOTE: See https://developers.dialpad.com/v1.0-archive/reference for APIs that can operate on subscriptions that were created via the deprecated APIs.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_call_event_subscription.update",
        "parameters": [
          {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.call_event_subscription.UpdateCallEventSubscription",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "call_states": [
                        "calling"
                      ],
                      "enabled": true,
                      "group_calls_only": false,
                      "id": "1001",
                      "webhook": {
                        "hook_url": "https://test.com",
                        "id": "1000",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.call_event_subscription.CallEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Event -- Update",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/v2/subscriptions/changelog": {
      "get": {
        "deprecated": false,
        "description": "Gets a list of all the change log event subscriptions of a company.\n\nAdded on December 9th, 2022 for API v2.\n\nRequires a company admin API key.\n\nRequires scope: ``change_log``\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_change_log_event_subscription.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "enabled": true,
                          "id": "1001",
                          "webhook": {
                            "hook_url": "https://test.com",
                            "id": "1000",
                            "signature": {
                              "algo": "HS256",
                              "secret": "puppy",
                              "type": "jwt"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.change_log_event_subscription.ChangeLogEventSubscriptionCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "security": [
          {
            "api_key_in_url": [
              "change_log"
            ]
          },
          {
            "bearer_token": [
              "change_log"
            ]
          }
        ],
        "summary": "Change Log -- List",
        "tags": [
          "subscriptions"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a change log event subscription for your company. An endpoint_id is required so that we know to which url the events shall be sent.\n\nSee https://developers.dialpad.com/docs/change-log-events for details on how change log events work, including the payload structure and payload examples.\n\nAdded on December 9th, 2022 for API v2.\n\nRequires a company admin API key.\n\nRequires scope: ``change_log``\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_change_log_event_subscription.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.change_log_event_subscription.CreateChangeLogEventSubscription",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "enabled": true,
                      "id": "1001",
                      "webhook": {
                        "hook_url": "https://test.com",
                        "id": "1000",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.change_log_event_subscription.ChangeLogEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "security": [
          {
            "api_key_in_url": [
              "change_log"
            ]
          },
          {
            "bearer_token": [
              "change_log"
            ]
          }
        ],
        "summary": "Change Log -- Create",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/v2/subscriptions/changelog/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a change log event subscription by id.\n\nAdded on December 9th, 2022 for API v2.\n\nRequires a company admin API key.\n\nRequires scope: ``change_log``\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_change_log_event_subscription.delete",
        "parameters": [
          {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "enabled": true,
                      "id": "1001",
                      "webhook": {
                        "hook_url": "https://test2.com",
                        "id": "1002",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.change_log_event_subscription.ChangeLogEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "security": [
          {
            "api_key_in_url": [
              "change_log"
            ]
          },
          {
            "bearer_token": [
              "change_log"
            ]
          }
        ],
        "summary": "Change Log -- Delete",
        "tags": [
          "subscriptions"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets a change log event subscription by id.\n\nAdded on December 9th, 2022 for API v2.\n\nRequires a company admin API key.\n\nRequires scope: ``change_log``\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_change_log_event_subscription.get",
        "parameters": [
          {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "enabled": true,
                      "id": "1001",
                      "webhook": {
                        "hook_url": "https://test.com",
                        "id": "1000",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.change_log_event_subscription.ChangeLogEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "security": [
          {
            "api_key_in_url": [
              "change_log"
            ]
          },
          {
            "bearer_token": [
              "change_log"
            ]
          }
        ],
        "summary": "Change Log -- Get",
        "tags": [
          "subscriptions"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Updates change log event subscription by id.\n\nAdded on December 9th, 2022 for API v2.\n\nRequires a company admin API key.\n\nRequires scope: ``change_log``\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_change_log_event_subscription.update",
        "parameters": [
          {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.change_log_event_subscription.UpdateChangeLogEventSubscription",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "enabled": true,
                      "id": "1001",
                      "webhook": {
                        "hook_url": "https://test2.com",
                        "id": "1002",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.change_log_event_subscription.ChangeLogEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "security": [
          {
            "api_key_in_url": [
              "change_log"
            ]
          },
          {
            "bearer_token": [
              "change_log"
            ]
          }
        ],
        "summary": "Change Log -- Update",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/v2/subscriptions/contact": {
      "get": {
        "deprecated": false,
        "description": "Gets a list of all the contact event subscriptions of a company.\n\nAdded on April 23rd, 2021 for API v2.\n\nNOTE: See https://developers.dialpad.com/v1.0-archive/reference for APIs that can operate on subscriptions that were created via the deprecated APIs.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_contact_event_subscription.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "contact_type": "local",
                          "enabled": true,
                          "id": "1001",
                          "webhook": {
                            "hook_url": "https://test.com",
                            "id": "1000",
                            "signature": {
                              "algo": "HS256",
                              "secret": "puppy",
                              "type": "jwt"
                            }
                          }
                        },
                        {
                          "contact_type": "shared",
                          "enabled": true,
                          "id": "1002",
                          "webhook": {
                            "hook_url": "https://test.com",
                            "id": "1000",
                            "signature": {
                              "algo": "HS256",
                              "secret": "puppy",
                              "type": "jwt"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.contact_event_subscription.ContactEventSubscriptionCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Contact Event -- List",
        "tags": [
          "subscriptions"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a contact event subscription for your company. A webhook_id is required so that we know to which url the events shall be sent.\n\nSee https://developers.dialpad.com/docs/contact-events for details on how contact events work, including the payload structure and payload examples.\n\nAdded on April 23rd, 2021 for API v2.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_contact_event_subscription.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.contact_event_subscription.CreateContactEventSubscription",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "contact_type": "shared",
                      "enabled": true,
                      "id": "1002",
                      "webhook": {
                        "hook_url": "https://test.com",
                        "id": "1000",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.contact_event_subscription.ContactEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Contact Event -- Create",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/v2/subscriptions/contact/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a contact event subscription by id.\n\nAdded on April 23rd, 2021 for API v2.\n\nNOTE: See https://developers.dialpad.com/v1.0-archive/reference for APIs that can operate on subscriptions that were created via the deprecated APIs.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_contact_event_subscription.delete",
        "parameters": [
          {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "contact_type": "local",
                      "enabled": true,
                      "id": "1002",
                      "webhook": {
                        "hook_url": "https://test2.com",
                        "id": "1003",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.contact_event_subscription.ContactEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Contact Event -- Delete",
        "tags": [
          "subscriptions"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets a contact event subscription by id.\n\nAdded on April 23rd, 2021 for API v2.\n\nNOTE: See https://developers.dialpad.com/v1.0-archive/reference for APIs that can operate on subscriptions that were created via the deprecated APIs.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_contact_event_subscription.get",
        "parameters": [
          {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "contact_type": "shared",
                      "enabled": true,
                      "id": "1002",
                      "webhook": {
                        "hook_url": "https://test.com",
                        "id": "1000",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.contact_event_subscription.ContactEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Contact Event -- Get",
        "tags": [
          "subscriptions"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Updates a contact event subscription by id.\n\nAdded on April 23rd, 2021 for API v2.\n\nNOTE: See https://developers.dialpad.com/v1.0-archive/reference for APIs that can operate on subscriptions that were created via the deprecated APIs.\n\nRequires a company admin API key.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_contact_event_subscription.update",
        "parameters": [
          {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.contact_event_subscription.UpdateContactEventSubscription",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "contact_type": "local",
                      "enabled": true,
                      "id": "1002",
                      "webhook": {
                        "hook_url": "https://test2.com",
                        "id": "1003",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.contact_event_subscription.ContactEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Contact Event -- Update",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/v2/subscriptions/sms": {
      "get": {
        "deprecated": false,
        "description": "Gets a list of all the SMS event subscriptions of a company or of a target.\n\nAdded on April 9th, 2021 for API v2.\n\nNOTE: See https://developers.dialpad.com/v1.0-archive/reference for APIs that can operate on subscriptions that were created via the deprecated APIs.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_sms_event_subscription.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Target's type.",
            "in": "query",
            "name": "target_type",
            "required": false,
            "schema": {
              "enum": [
                "callcenter",
                "callrouter",
                "channel",
                "coachinggroup",
                "coachingteam",
                "department",
                "office",
                "room",
                "staffgroup",
                "unknown",
                "user"
              ],
              "type": "string"
            }
          },
          {
            "description": "The target's id.",
            "in": "query",
            "name": "target_id",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "direction": "all",
                          "enabled": true,
                          "id": "1001",
                          "include_internal": true,
                          "status": false,
                          "webhook": {
                            "hook_url": "https://test.com",
                            "id": "1000",
                            "signature": {
                              "algo": "HS256",
                              "secret": "puppy",
                              "type": "jwt"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.sms_event_subscription.SmsEventSubscriptionCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "SMS Event -- List",
        "tags": [
          "subscriptions"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a SMS event subscription. A webhook_id is required so that we know to which url the events shall be sent. A SMS direction is also required in order to limit the direction for which SMS events are sent. Use 'all' to get SMS events for all directions. A target_type and target_id may optionally be provided to scope the events only to SMS to/from that target.\n\nSee https://developers.dialpad.com/docs/sms-events for details on how SMS events work, including the payload structure and payload examples.\n\nNOTE: **To include the MESSAGE CONTENT in SMS events, your API key needs to have the\n\"message_content_export\" OAuth scope for when a target is specified in this API and/or\n\"message_content_export:all\" OAuth scope for when no target is specified.**\n\nNOTE: See https://developers.dialpad.com/v1.0-archive/reference for APIs that can operate on subscriptions that were created via the deprecated APIs.\n\nAdded on April 9th, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_sms_event_subscription.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.sms_event_subscription.CreateSmsEventSubscription",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "direction": "all",
                      "enabled": true,
                      "id": "1001",
                      "include_internal": true,
                      "status": false,
                      "webhook": {
                        "hook_url": "https://test.com",
                        "id": "1000",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.sms_event_subscription.SmsEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "SMS Event -- Create",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/v2/subscriptions/sms/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a SMS event subscription by id.\n\nAdded on April 9th, 2021 for API v2.\n\nNOTE: See https://developers.dialpad.com/v1.0-archive/reference for APIs that can operate on subscriptions that were created via the deprecated APIs.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_sms_event_subscription.delete",
        "parameters": [
          {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "direction": "inbound",
                      "enabled": true,
                      "id": "1001",
                      "include_internal": false,
                      "status": true,
                      "webhook": {
                        "hook_url": "https://test2.com",
                        "id": "1002",
                        "signature": {
                          "algo": "HS256",
                          "secret": "random",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.sms_event_subscription.SmsEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "SMS Event -- Delete",
        "tags": [
          "subscriptions"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets a SMS event subscription by id.\n\nAdded on April 9th, 2021 for API v2.\n\nNOTE: See https://developers.dialpad.com/v1.0-archive/reference for APIs that can operate on subscriptions that were created via the deprecated APIs.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_sms_event_subscription.get",
        "parameters": [
          {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "direction": "all",
                      "enabled": true,
                      "id": "1001",
                      "include_internal": true,
                      "status": false,
                      "webhook": {
                        "hook_url": "https://test.com",
                        "id": "1000",
                        "signature": {
                          "algo": "HS256",
                          "secret": "puppy",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.sms_event_subscription.SmsEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "SMS Event -- Get",
        "tags": [
          "subscriptions"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Updates a SMS event subscription by id.\n\nAdded on April 9th, 2021 for API v2.\n\nNOTE: See https://developers.dialpad.com/v1.0-archive/reference for APIs that can operate on subscriptions that were created via the deprecated APIs.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook_sms_event_subscription.update",
        "parameters": [
          {
            "description": "The event subscription's ID, which is generated after creating an event subscription successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.sms_event_subscription.UpdateSmsEventSubscription",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "direction": "inbound",
                      "enabled": true,
                      "id": "1001",
                      "include_internal": false,
                      "status": false,
                      "webhook": {
                        "hook_url": "https://test2.com",
                        "id": "1002",
                        "signature": {
                          "algo": "HS256",
                          "secret": "random",
                          "type": "jwt"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.sms_event_subscription.SmsEventSubscriptionProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "SMS Event -- Update",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/v2/transcripts/{call_id}": {
      "get": {
        "deprecated": false,
        "description": "Gets the Dialpad AI transcript of a call, including moments.\n\nAdded on Dec 18, 2019 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "transcripts.get",
        "parameters": [
          {
            "description": "The call's id.",
            "in": "path",
            "name": "call_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "call_id": "1001",
                      "lines": [
                        {
                          "contact_id": "ag5kZXZ-dWJlci12b2ljZXIOCxIHQ29udGFjdBjoBww",
                          "content": "hi",
                          "name": "(415) 555-6666",
                          "time": "2018-05-08T21:33:19.300000",
                          "type": "transcript"
                        },
                        {
                          "content": "hello [expletive]",
                          "name": "\u30c6\u00c9st Bot",
                          "time": "2018-05-08T21:33:15.300000",
                          "type": "transcript",
                          "user_id": "2"
                        },
                        {
                          "content": "not_white_listed_moment",
                          "name": "\u30c6\u00c9st Bot",
                          "time": "2018-05-08T21:33:16.300000",
                          "type": "moment",
                          "user_id": "2"
                        },
                        {
                          "content": "price_inquiry",
                          "name": "\u30c6\u00c9st Bot",
                          "time": "2018-05-08T21:33:17.300000",
                          "type": "moment",
                          "user_id": "2"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.transcript.TranscriptProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Transcript -- Get",
        "tags": [
          "transcripts"
        ]
      }
    },
    "/api/v2/transcripts/{call_id}/url": {
      "get": {
        "deprecated": false,
        "description": "Gets the transcript url of a call.\n\nAdded on June 9, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "transcripts.get_url",
        "parameters": [
          {
            "description": "The call's id.",
            "in": "path",
            "name": "call_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "call_id": "1001",
                      "url": "https://dialpad.com/callhistory/callreview/1001?tab=transcript"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.transcript.TranscriptUrlProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Transcript -- Get URL",
        "tags": [
          "transcripts"
        ]
      }
    },
    "/api/v2/userdevices/{id}": {
      "get": {
        "deprecated": false,
        "description": "Gets a device by ID.\n\nAdded on Feb 4, 2020 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "userdevices.get",
        "parameters": [
          {
            "description": "The device's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.userdevice.UserDeviceProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "User Device -- Get",
        "tags": [
          "userdevices"
        ]
      }
    },
    "/api/v2/userdevices": {
      "get": {
        "deprecated": false,
        "description": "Lists the devices for a specific user.\n\nAdded on Feb 4, 2020 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "userdevices.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.userdevice.UserDeviceCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "User Device -- List",
        "tags": [
          "userdevices"
        ]
      }
    },
    "/api/v2/users/{id}/initiate_call": {
      "post": {
        "deprecated": false,
        "description": "Causes a user's native Dialpad application to initiate an outbound call. Added on Nov 18, 2019 for API v2.\n\nRate limit: 5 per minute.",
        "operationId": "users.initiate_call",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.call.InitiateCallMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "device": {
                        "date_created": "2013-01-01T00:00:00",
                        "date_registered": "2013-01-01T00:00:00",
                        "date_updated": "2013-01-01T00:00:00",
                        "display_name": "native",
                        "id": "+14155551001-user-2-client-native",
                        "type": "native",
                        "user_id": "2"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.call.InitiatedCallProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call -- Initiate",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v2/users/{id}/activecall": {
      "patch": {
        "deprecated": false,
        "description": "Turns call recording on or off for a user's active call.\n\nAdded on Nov 18, 2019 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "users.update_active_call",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.call.UpdateActiveCallMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "call_state": "connected",
                      "id": "1000",
                      "is_recording": true
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.call.ActiveCallProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call Recording -- Toggle",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v2/users/{id}/togglevi": {
      "patch": {
        "deprecated": false,
        "description": "Turns call vi on or off for a user's active call. Added on May 4, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "users.toggle_call_vi",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.call.ToggleViMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "error": {
                        "code": 400,
                        "errors": [
                          {
                            "domain": "global",
                            "message": "call 1001 does not have callai",
                            "reason": "badRequest"
                          }
                        ],
                        "message": "call 1001 does not have callai"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.call.ToggleViProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Call VI -- Toggle",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v2/users/{id}/caller_id": {
      "get": {
        "deprecated": false,
        "description": "List all available Caller IDs and the active Called ID for a determined User id\n\nAdded on Aug 3, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "caller_id.users.get",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.caller_id.CallerIdProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Caller ID -- Get",
        "tags": [
          "users"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Set Caller ID for a determined User id.\n\nAdded on Aug 3, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "caller_id.users.post",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.caller_id.SetCallerIdMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.caller_id.CallerIdProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Caller ID -- POST",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v2/users/{parent_id}/deskphones/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a user desk phone by id. Added on May 17, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "deskphones.users.delete",
        "parameters": [
          {
            "description": "The desk phone's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "parent_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response"
          }
        },
        "summary": "Desk Phone -- Delete",
        "tags": [
          "users"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets a user desk phone by id. Added on May 17, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "deskphones.users.get",
        "parameters": [
          {
            "description": "The desk phone's id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "parent_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "byod": false,
                      "id": "+14155551001-user-2-obi-hex_71afb3cbf6",
                      "mac_address": "9cadefa00096",
                      "name": "Test Obihai",
                      "owner_id": "2",
                      "owner_type": "user",
                      "port": "7060",
                      "realm": "uvstaging.ubervoip.net",
                      "ring_notification": true,
                      "sip_transport_type": "tls",
                      "type": "obi"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.deskphone.DeskPhone"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Desk Phone -- Get",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v2/users/{parent_id}/deskphones": {
      "get": {
        "deprecated": false,
        "description": "Gets all desk phones under a user. Added on May 17, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "deskphones.users.list",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "parent_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "byod": false,
                          "id": "+14155551001-user-2-obi-hex_71afb3cbf6",
                          "mac_address": "9cadefa00096",
                          "name": "Test Obihai",
                          "owner_id": "2",
                          "owner_type": "user",
                          "port": "7060",
                          "realm": "uvstaging.ubervoip.net",
                          "ring_notification": true,
                          "sip_transport_type": "tls",
                          "type": "obi"
                        },
                        {
                          "byod": false,
                          "id": "+14155551001-user-2-obi-hex_bc7abbd28f",
                          "mac_address": "9cadefa00097",
                          "name": "Test Obihai2",
                          "owner_id": "2",
                          "owner_type": "user",
                          "port": "7060",
                          "realm": "uvstaging.ubervoip.net",
                          "ring_notification": true,
                          "sip_transport_type": "tls",
                          "type": "obi"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.deskphone.DeskPhoneCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Desk Phone -- List",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v2/users/{id}/assign_number": {
      "post": {
        "deprecated": false,
        "description": "Assigns a number to a user. The number will automatically be taken from the company's reserved block if there are reserved numbers, otherwise a number will be auto-assigned from the provided area code.\n\nAdded on May 3, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "numbers.assign_user_number.post",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.number.AssignNumberMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "area_code": "415",
                      "company_id": "123",
                      "number": "+14155551002",
                      "office_id": "124",
                      "status": "user",
                      "target_id": "2",
                      "target_type": "user",
                      "type": "local"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.number.NumberProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Dialpad Number -- Assign",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v2/users/{id}/unassign_number": {
      "post": {
        "deprecated": false,
        "description": "Un-assigns a phone number from a user. The number will be returned to the company's reserved block if there is one. Otherwise the number will be released.\n\nAdded on May 3, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "numbers.user_unassign_number.post",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.number.UnassignNumberMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "area_code": "415",
                      "company_id": "123",
                      "number": "+14155551002",
                      "office_id": "124",
                      "status": "available",
                      "type": "local"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.number.NumberProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Dialpad Number -- Unassign",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v2/users/{id}/togglednd": {
      "patch": {
        "deprecated": false,
        "description": "Toggle DND status on or off for the given user.\n\nAdded on Oct 14, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "users.toggle_dnd",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.user.ToggleDNDMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "do_not_disturb": true,
                      "group_id": "5220648944236254",
                      "group_type": "department",
                      "id": "5835806903417907"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.user.ToggleDNDProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Do Not Disturb -- Toggle",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v2/users/{id}/e911": {
      "get": {
        "deprecated": false,
        "description": "Gets E911 address of the user by user id.\n\nAdded on May 25, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "users.e911.get",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "address": "3001 BISHOP DR",
                      "address2": "ste 120",
                      "city": "SAN RAMON",
                      "country": "us",
                      "state": "ca",
                      "zip": "94583"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.office.E911GetProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "E911 Address -- Get",
        "tags": [
          "users"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update E911 address of the given user.\n\nAdded on May 25, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "users.e911.update",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.user.E911UpdateMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "address": "3001 BISHOP DR",
                      "address2": "ste 120",
                      "city": "SAN RAMON",
                      "country": "us",
                      "state": "ca",
                      "zip": "94583"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.office.E911GetProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "E911 Address -- Update",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v2/users/{id}/personas": {
      "get": {
        "deprecated": false,
        "description": "Provides a list of personas for a user.\n\nA persona is a target that a user can make calls from. The receiver of the call will see the details of the persona rather than the user.\n\nAdded on February 12, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "users.personas.get",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.user.PersonaCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Persona -- List",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v2/users/{id}/screenpop": {
      "post": {
        "deprecated": false,
        "description": "Initiates screen pop for user device. Requires the \"screen_pop\" scope.\n\nRequires scope: ``screen_pop``\n\nRate limit: 5 per minute.",
        "operationId": "screen_pop.initiate",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.screen_pop.InitiateScreenPopMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.screen_pop.InitiateScreenPopResponse"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "security": [
          {
            "api_key_in_url": [
              "screen_pop"
            ]
          },
          {
            "bearer_token": [
              "screen_pop"
            ]
          }
        ],
        "summary": "Screen-pop -- Trigger",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v2/users/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a user by id.\n\nAdded on May 11, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "users.delete",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "company_id": "4508591728425653",
                      "country": "us",
                      "date_added": "2013-01-01T00:00:00",
                      "display_name": "Blocky Mockson (deactivated)",
                      "do_not_disturb": true,
                      "first_name": "Blocky",
                      "id": "5643742714968973",
                      "image_url": "https://dialpad.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIYCxILVXNlclByb2ZpbGUYjffq_cOegwoM.png?version=a54c75379069406d7958461d98788fb4",
                      "international_dialing_enabled": false,
                      "is_admin": false,
                      "is_available": false,
                      "is_on_duty": false,
                      "is_online": false,
                      "is_super_admin": false,
                      "language": "en",
                      "last_name": "Mockson",
                      "license": "agents",
                      "muted": false,
                      "office_id": "5220648944236254",
                      "state": "deleted",
                      "status_message": "",
                      "timezone": "US/Pacific"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.user.UserProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "User -- Delete",
        "tags": [
          "users"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets a user by id.\n\nAdded on March 22, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "users.get",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "admin_office_ids": [
                        "6422934115149452"
                      ],
                      "company_id": "4508591728425653",
                      "country": "us",
                      "date_active": "2021-06-20T19:18:00",
                      "date_added": "2021-06-20T19:18:00",
                      "date_first_login": "2021-06-20T19:18:00",
                      "display_name": "\u30c6\u00c9st Bot",
                      "do_not_disturb": false,
                      "duty_status_started": "2013-01-01T00:00:00",
                      "emails": [
                        "bot@fuzz-ball.com"
                      ],
                      "first_name": "\u30c6\u00c9st",
                      "forwarding_numbers": [
                        "+14152301358"
                      ],
                      "group_details": [
                        {
                          "do_not_disturb": false,
                          "group_id": "5220648944236254",
                          "group_type": "callcenter",
                          "role": "admin"
                        },
                        {
                          "do_not_disturb": false,
                          "group_id": "6422934115149452",
                          "group_type": "office",
                          "role": "admin"
                        }
                      ],
                      "id": "5835806903417907",
                      "image_url": "https://dialpad.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIYCxILVXNlclByb2ZpbGUYs_jS66r0rgoM.png?version=36c0561fb8e0f5765ccfb3a5316f6d5d",
                      "international_dialing_enabled": false,
                      "is_admin": true,
                      "is_available": true,
                      "is_on_duty": false,
                      "is_online": false,
                      "is_super_admin": true,
                      "job_title": "Mock Job Title",
                      "language": "en",
                      "last_name": "Bot",
                      "license": "talk",
                      "location": "Mock Location",
                      "muted": false,
                      "office_id": "6422934115149452",
                      "on_duty_started": "2013-01-01T00:00:00",
                      "on_duty_status": "unavailable",
                      "phone_numbers": [
                        "+14155551001"
                      ],
                      "state": "active",
                      "status_message": "Mock Status",
                      "timezone": "US/Pacific"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.user.UserProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "User -- Get",
        "tags": [
          "users"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Updates the provided fields for an existing user.\n\nAdded on March 22, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "users.update",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.user.UpdateUserMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "admin_office_ids": [
                        "4449170667665453"
                      ],
                      "company_id": "4508591728425653",
                      "country": "us",
                      "date_active": "2021-06-20T19:18:00",
                      "date_added": "2021-06-20T19:18:00",
                      "date_first_login": "2021-06-20T19:18:00",
                      "display_name": "Blocky Mockson",
                      "do_not_disturb": false,
                      "emails": [
                        "bot@fuzz-ball.com"
                      ],
                      "extension": "12345",
                      "first_name": "Blocky",
                      "forwarding_numbers": [
                        "+442074865800",
                        "+815058098764"
                      ],
                      "id": "5835806903417907",
                      "image_url": "https://dialpad.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIYCxILVXNlclByb2ZpbGUYs_jS66r0rgoM.png?version=a54c75379069406d7958461d98788fb4",
                      "international_dialing_enabled": false,
                      "is_admin": true,
                      "is_available": true,
                      "is_on_duty": false,
                      "is_online": false,
                      "is_super_admin": true,
                      "job_title": "Junior Accountant",
                      "language": "en",
                      "last_name": "Mockson",
                      "license": "lite_support_agents",
                      "location": "Mock Location",
                      "muted": false,
                      "office_id": "4449170667665453",
                      "phone_numbers": [
                        "+14155551001"
                      ],
                      "state": "active",
                      "status_message": "Mock Status",
                      "timezone": "US/Pacific"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.user.UserProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "User -- Update",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v2/users": {
      "get": {
        "deprecated": false,
        "description": "Gets company users, optionally filtering by email.\n\nNOTE: The `limit` parameter has been soft-deprecated. Please omit the `limit` parameter, or reduce it to `100` or less.\n\n- Limit values of greater than `100` will only produce a page size of `100`, and a\n  `400 Bad Request` response will be produced 20% of the time in an effort to raise visibility of side-effects that might otherwise go un-noticed by solutions that had assumed a larger page size.\n\n- The `cursor` value is provided in the API response, and can be passed as a parameter to retrieve subsequent pages of results.\n\nAdded on March 22, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "users.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter results by the specified user state (e.g. active, suspended, deleted)",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "enum": [
                "active",
                "all",
                "cancelled",
                "deleted",
                "pending",
                "suspended"
              ],
              "type": "string"
            }
          },
          {
            "description": "If provided, filter results by the specified value to return only company admins or only non-company admins.",
            "in": "query",
            "name": "company_admin",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The user's email.",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The user's phone number.",
            "in": "query",
            "name": "number",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "admin_office_ids": [
                            "6422934115149452"
                          ],
                          "company_id": "4508591728425653",
                          "country": "us",
                          "date_active": "2021-06-20T19:18:00",
                          "date_added": "2021-06-20T19:18:00",
                          "date_first_login": "2021-06-20T19:18:00",
                          "display_name": "\u30c6\u00c9st Bot",
                          "do_not_disturb": false,
                          "emails": [
                            "bot@fuzz-ball.com"
                          ],
                          "first_name": "\u30c6\u00c9st",
                          "forwarding_numbers": [
                            "+14152301358"
                          ],
                          "group_details": [
                            {
                              "do_not_disturb": false,
                              "group_id": "6422934115149452",
                              "group_type": "office",
                              "role": "admin"
                            }
                          ],
                          "id": "5835806903417907",
                          "image_url": "https://dialpad.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIYCxILVXNlclByb2ZpbGUYs_jS66r0rgoM.png?version=36c0561fb8e0f5765ccfb3a5316f6d5d",
                          "international_dialing_enabled": false,
                          "is_admin": true,
                          "is_available": true,
                          "is_on_duty": false,
                          "is_online": false,
                          "is_super_admin": true,
                          "job_title": "Mock Job Title",
                          "language": "en",
                          "last_name": "Bot",
                          "license": "talk",
                          "location": "Mock Location",
                          "muted": false,
                          "office_id": "6422934115149452",
                          "phone_numbers": [
                            "+14155551001"
                          ],
                          "state": "active",
                          "status_message": "Mock Status",
                          "timezone": "US/Pacific"
                        },
                        {
                          "admin_office_ids": [
                            "6422934115149452"
                          ],
                          "company_id": "4508591728425653",
                          "country": "us",
                          "date_active": "2021-06-20T19:18:00",
                          "date_added": "2021-06-20T19:18:00",
                          "date_first_login": "2021-06-20T19:18:00",
                          "display_name": "\u30c6\u00c9st Bot",
                          "do_not_disturb": false,
                          "emails": [
                            "test_contact@fuzz-ball.com"
                          ],
                          "first_name": "\u30c6\u00c9st",
                          "forwarding_numbers": [
                            "+14152301358"
                          ],
                          "group_details": [
                            {
                              "do_not_disturb": false,
                              "group_id": "6422934115149452",
                              "group_type": "office",
                              "role": "admin"
                            }
                          ],
                          "id": "4335858969377504",
                          "image_url": "https://dialpad.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIYCxILVXNlclByb2ZpbGUY4PWprY3u2QcM.png?version=36c0561fb8e0f5765ccfb3a5316f6d5d",
                          "international_dialing_enabled": false,
                          "is_admin": true,
                          "is_available": true,
                          "is_on_duty": false,
                          "is_online": false,
                          "is_super_admin": false,
                          "job_title": "Mock Job Title",
                          "language": "en",
                          "last_name": "Bot",
                          "license": "talk",
                          "location": "Mock Location",
                          "muted": false,
                          "office_id": "6422934115149452",
                          "phone_numbers": [
                            "+14155551002"
                          ],
                          "state": "active",
                          "status_message": "Mock Status",
                          "timezone": "US/Pacific"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.user.UserCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "User -- List",
        "tags": [
          "users"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a new user.\n\nAdded on March 22, 2018 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "users.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.user.CreateUserMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "company_id": "4508591728425653",
                      "country": "us",
                      "date_added": "2013-01-01T00:00:00",
                      "display_name": "Mocky Mockson",
                      "do_not_disturb": false,
                      "emails": [
                        "mocky@fuzz-ball.com"
                      ],
                      "first_name": "Mocky",
                      "id": "5137304475768569",
                      "image_url": "https://dialpad.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIYCxILVXNlclByb2ZpbGUY-a2Gw56LkAkM.png?version=caaf49b4dbcec738c3b8fd1189746b89",
                      "international_dialing_enabled": false,
                      "is_admin": false,
                      "is_available": true,
                      "is_on_duty": false,
                      "is_online": false,
                      "is_super_admin": false,
                      "language": "en",
                      "last_name": "Mockson",
                      "license": "talk",
                      "muted": false,
                      "office_id": "6422934115149452",
                      "state": "active",
                      "timezone": "US/Pacific"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.user.UserProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "User -- Create",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v2/users/{id}/move_office": {
      "patch": {
        "deprecated": false,
        "description": "Moves the user to a different office. For international offices only, all of the user's numbers will be unassigned and a new number will be assigned except when the user only has internal numbers starting with 803 -- then the numbers will remain unchanged. Admin can also assign numbers via the user assign number API after. Only supported on paid accounts and there must be enough licenses to transfer the user to the destination office.\n\nAdded on May 31, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "users.move_office.patch",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.user.MoveOfficeMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.user.UserProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "User -- Switch Office",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v2/users/{id}/status": {
      "patch": {
        "deprecated": false,
        "description": "Update user's status. Returns the user's status if the user exists.\n\nRate limit: 1200 per minute.",
        "operationId": "users.update_status",
        "parameters": [
          {
            "description": "The user's id. ('me' can be used if you are using a user level API key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.user.SetStatusMessage",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "expiration": "3600",
                      "id": "5835806903417907",
                      "status_message": "test status with expiration"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.user.SetStatusProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "User Status -- Update",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v2/webhooks": {
      "get": {
        "deprecated": false,
        "description": "Gets a list of all the webhooks that are associated with the company.\n\nAdded on April 2nd, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "webhooks.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "hook_url": "https://test.com/webhooks",
                          "id": "1000",
                          "signature": {
                            "algo": "HS256",
                            "secret": "test_secret",
                            "type": "jwt"
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.webhook.WebhookCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Webhook -- List",
        "tags": [
          "webhooks"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a new webhook for your company.\n\nAn unique webhook ID will be generated when successfully creating a webhook. A webhook ID is to be required when creating event subscriptions. One webhook ID can be shared between multiple event subscriptions. When triggered, events will be sent to the provided hook_url under webhook. If a secret is provided, the webhook events will be encoded and signed in the JWT format using the shared secret with the HS256 algorithm. The JWT payload should be decoded and the signature verified to ensure that the event came from Dialpad. If no secret is provided, unencoded events will be sent in the JSON format. It is recommended to provide a secret so that you can verify the authenticity of the event.\n\nAdded on April 2nd, 2021 for API v2.\n\nRate limit: 100 per minute.",
        "operationId": "webhooks.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.webhook.CreateWebhook",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "hook_url": "https://test.com/webhooks",
                      "id": "1000",
                      "signature": {
                        "algo": "HS256",
                        "secret": "test_secret",
                        "type": "jwt"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.webhook.WebhookProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Webhook -- Create",
        "tags": [
          "webhooks"
        ]
      }
    },
    "/api/v2/webhooks/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a webhook by id.\n\nAdded on April 2nd, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "webhooks.delete",
        "parameters": [
          {
            "description": "The webhook's ID, which is generated after creating a webhook successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.webhook.WebhookProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Webhook -- Delete",
        "tags": [
          "webhooks"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets a webhook by id.\n\nAdded on April 2nd, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "webhooks.get",
        "parameters": [
          {
            "description": "The webhook's ID, which is generated after creating a webhook successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "hook_url": "https://test.com/webhooks",
                      "id": "1000",
                      "signature": {
                        "algo": "HS256",
                        "secret": "test_secret",
                        "type": "jwt"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.webhook.WebhookProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Webhook -- Get",
        "tags": [
          "webhooks"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Updates a webhook by id.\n\nAdded on April 2nd, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "webhook.update",
        "parameters": [
          {
            "description": "The webhook's ID, which is generated after creating a webhook successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.webhook.UpdateWebhook",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.webhook.WebhookProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Webhook -- Update",
        "tags": [
          "webhooks"
        ]
      }
    },
    "/api/v2/websockets": {
      "get": {
        "deprecated": false,
        "description": "Gets a list of all the websockets that are associated with the company.\n\nAdded on April 5th, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "websockets.list",
        "parameters": [
          {
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "id": "1000",
                          "signature": {
                            "algo": "HS256",
                            "secret": "test_secret",
                            "type": "jwt"
                          },
                          "websocket_url": "wss://platform-websockets-5bwy6zprxa-uc.a.run.app/events/eyJhbGciOiJIUzI1NiIsInR5cCI6InZuZC5kaWFscGFkLndlYnNvY2tldCtqd3QifQ.eyJzdWIiOiJlbmRwb2ludDoxMDAwOioiLCJleHAiOjEzNTcwMDIwMDAsImlzcyI6Imh0dHBzOi8vdGVzdGJlZC5leGFtcGxlLmNvbSIsImlhdCI6MTM1Njk5ODQwMH0.weTDqJj39rODXRkMOC8eci_zjyNlbj8EBS1gzmBy9D4"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.websocket.WebsocketCollection"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Websocket -- List",
        "tags": [
          "websockets"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a new websocket for your company.\n\nA unique websocket ID will be generated when successfully creating a websocket. A websocket ID is to be required when creating event subscriptions. One websocket ID can be shared between multiple event subscriptions. When triggered, events will be accessed through provided websocket_url under websocket. The url will be expired after 1 hour. Please use the GET websocket API to regenerate url rather than creating new ones. If a secret is provided, the websocket events will be encoded and signed in the JWT format using the shared secret with the HS256 algorithm. The JWT payload should be decoded and the signature verified to ensure that the event came from Dialpad. If no secret is provided, unencoded events will be sent in the JSON format. It is recommended to provide a secret so that you can verify the authenticity of the event.\n\nAdded on April 5th, 2022 for API v2.\n\nRate limit: 250 per minute.",
        "operationId": "websockets.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.websocket.CreateWebsocket",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "id": "1000",
                      "signature": {
                        "algo": "HS256",
                        "secret": "test_secret",
                        "type": "jwt"
                      },
                      "websocket_url": "wss://platform-websockets-5bwy6zprxa-uc.a.run.app/events/eyJhbGciOiJIUzI1NiIsInR5cCI6InZuZC5kaWFscGFkLndlYnNvY2tldCtqd3QifQ.eyJzdWIiOiJlbmRwb2ludDoxMDAwOioiLCJleHAiOjEzNTcwMDIwMDAsImlzcyI6Imh0dHBzOi8vdGVzdGJlZC5leGFtcGxlLmNvbSIsImlhdCI6MTM1Njk5ODQwMH0.weTDqJj39rODXRkMOC8eci_zjyNlbj8EBS1gzmBy9D4"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.websocket.WebsocketProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Websocket -- Create",
        "tags": [
          "websockets"
        ]
      }
    },
    "/api/v2/websockets/{id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a websocket by id.\n\nAdded on April 2nd, 2021 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "websockets.delete",
        "parameters": [
          {
            "description": "The websocket's ID, which is generated after creating a websocket successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/protos.websocket.WebsocketProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Websocket -- Delete",
        "tags": [
          "websockets"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Gets a websocket by id.\n\nAdded on April 5th, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "websockets.get",
        "parameters": [
          {
            "description": "The websocket's ID, which is generated after creating a websocket successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "id": "1000",
                      "signature": {
                        "algo": "HS256",
                        "secret": "test_secret",
                        "type": "jwt"
                      },
                      "websocket_url": "wss://platform-websockets-5bwy6zprxa-uc.a.run.app/events/eyJhbGciOiJIUzI1NiIsInR5cCI6InZuZC5kaWFscGFkLndlYnNvY2tldCtqd3QifQ.eyJzdWIiOiJlbmRwb2ludDoxMDAwOioiLCJleHAiOjEzNTcwMDIwMDAsImlzcyI6Imh0dHBzOi8vdGVzdGJlZC5leGFtcGxlLmNvbSIsImlhdCI6MTM1Njk5ODQwMH0.weTDqJj39rODXRkMOC8eci_zjyNlbj8EBS1gzmBy9D4"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.websocket.WebsocketProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Websocket -- Get",
        "tags": [
          "websockets"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Updates a websocket by id.\n\nAdded on April 5th, 2022 for API v2.\n\nRate limit: 1200 per minute.",
        "operationId": "websockets.update",
        "parameters": [
          {
            "description": "The websocket's ID, which is generated after creating a websocket successfully.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/protos.websocket.UpdateWebsocket",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "id": "1000",
                      "signature": {
                        "algo": "HS256",
                        "secret": "NEW_SECRET",
                        "type": "jwt"
                      },
                      "websocket_url": "wss://platform-websockets-5bwy6zprxa-uc.a.run.app/events/eyJhbGciOiJIUzI1NiIsInR5cCI6InZuZC5kaWFscGFkLndlYnNvY2tldCtqd3QifQ.eyJzdWIiOiJlbmRwb2ludDoxMDAwOioiLCJleHAiOjEzNTcwMDIwMDAsImlzcyI6Imh0dHBzOi8vdGVzdGJlZC5leGFtcGxlLmNvbSIsImlhdCI6MTM1Njk5ODQwMH0.weTDqJj39rODXRkMOC8eci_zjyNlbj8EBS1gzmBy9D4"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.websocket.WebsocketProto"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Websocket -- Update",
        "tags": [
          "websockets"
        ]
      }
    },
    "/api/v2/wfm/metrics/activity": {
      "get": {
        "deprecated": false,
        "description": "Returns paginated, activity-level metrics for specified agents.\n\nRate limit: 1200 per minute.",
        "operationId": "wfm-metrics-activity.get",
        "parameters": [
          {
            "description": "(optional) Comma-separated Dialpad user IDs of agents",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "(optional) Comma-separated email addresses of agents",
            "in": "query",
            "name": "emails",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Include the cursor returned in a previous request to get the next page of data",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "UTC ISO 8601 timestamp (exclusive, e.g., 2025-02-23T00:00:00Z)",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "UTC ISO 8601 timestamp (inclusive, e.g., 2025-02-17T00:00:00Z)",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "activity": {
                            "name": "Customer Support",
                            "type": "task"
                          },
                          "adherence_score": 97.5,
                          "average_conversation_time": 8.2,
                          "average_interaction_time": 4.5,
                          "conversations_closed": 6,
                          "conversations_closed_per_hour": 6.0,
                          "conversations_commented_on": 12,
                          "conversations_on_hold": 3,
                          "conversations_opened": 8,
                          "interval": {
                            "end": "2025-01-01T11:00:00Z",
                            "start": "2025-01-01T10:00:00Z"
                          },
                          "scheduled_hours": 1.0,
                          "time_in_adherence": 3420,
                          "time_in_exception": 120,
                          "time_on_task": 0.85,
                          "time_out_of_adherence": 60,
                          "wrong_task_snapshots": 1
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.wfm.metrics.ActivityMetricsResponse"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Activity Metrics",
        "tags": [
          "wfm"
        ]
      }
    },
    "/api/v2/wfm/metrics/agent": {
      "get": {
        "deprecated": false,
        "description": "Returns paginated, detailed agent-level performance metrics.\n\nRate limit: 1200 per minute.",
        "operationId": "wfm-metrics-agent.get",
        "parameters": [
          {
            "description": "(optional) Comma-separated Dialpad user IDs of agents",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "(optional) Comma-separated email addresses of agents",
            "in": "query",
            "name": "emails",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Include the cursor returned in a previous request to get the next page of data",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "UTC ISO 8601 timestamp (exclusive, e.g., 2025-02-23T00:00:00Z)",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "UTC ISO 8601 timestamp (inclusive, e.g., 2025-02-17T00:00:00Z)",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "json_example": {
                    "value": {
                      "items": [
                        {
                          "actual_occupancy": {
                            "percentage": 0.62,
                            "seconds_lost": 10800
                          },
                          "adherence_score": 95.5,
                          "agent": {
                            "email": "test@example.com",
                            "name": "Test User"
                          },
                          "conversations_closed_per_hour": 5.6,
                          "conversations_closed_per_service_hour": 6.8,
                          "dialpad_availability": {
                            "percentage": 0.65,
                            "seconds_lost": 9000
                          },
                          "dialpad_time_in_status": {
                            "available": {
                              "percentage": 0.17,
                              "seconds": 5000
                            },
                            "busy": {
                              "percentage": 0.0,
                              "seconds": 0
                            },
                            "occupied": {
                              "percentage": 0.41,
                              "seconds": 12000
                            },
                            "unavailable": {
                              "percentage": 0.28,
                              "seconds": 8000
                            },
                            "wrapup": {
                              "percentage": 0.12,
                              "seconds": 3600
                            }
                          },
                          "interval": {
                            "end": "2025-01-02T00:00:00Z",
                            "start": "2025-01-01T00:00:00Z"
                          },
                          "occupancy": 0.92,
                          "planned_occupancy": {
                            "percentage": 0.95,
                            "seconds_lost": 1200
                          },
                          "scheduled_hours": 8.0,
                          "time_in_adherence": 27000,
                          "time_in_exception": 600,
                          "time_on_task": 0.78,
                          "time_out_of_adherence": 1200,
                          "total_conversations_closed": 45,
                          "utilisation": 0.85
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/protos.wfm.metrics.AgentMetricsResponse"
                }
              }
            },
            "description": "A successful response"
          }
        },
        "summary": "Agent Metrics",
        "tags": [
          "wfm"
        ]
      }
    }
  },
  "security": [
    {
      "api_key_in_url": []
    },
    {
      "bearer_token": []
    }
  ],
  "servers": [
    {
      "url": "https://dialpad.com/"
    },
    {
      "url": "https://sandbox.dialpad.com/"
    }
  ],
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": false,
    "samples-enabled": true
  }
}